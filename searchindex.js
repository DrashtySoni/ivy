Search.setIndex({"docnames": ["backend_handler", "backend_handler/ContextManager:\n    def __init__", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_container", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_submodule_helpers", "deep_dive/12_docstrings", "deep_dive/13_docstring_examples", "deep_dive/14_array_api_tests", "deep_dive/15_ivy_tests", "deep_dive/16_ivy_frontends", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant:\n    def __init__", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/KaimingNormal:\n    def __init__", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform:\n    def __init__", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/ContextManager:\n    def __init__.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_container.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_submodule_helpers.rst", "deep_dive/12_docstrings.rst", "deep_dive/13_docstring_examples.rst", "deep_dive/14_array_api_tests.rst", "deep_dive/15_ivy_tests.rst", "deep_dive/16_ivy_frontends.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/DefaultDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultFloatDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultIntDtype:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/data_type/DefaultUintDtype:\n    \"\"\"\"\"\"\n\n    def __init__.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/DefaultDevice:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/GradientTracking:\n    \"\"\"\"\"\"\n\n    # noinspection PyShadowingNames\n    def __init__.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional.rst", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant:\n    def __init__.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/KaimingNormal:\n    def __init__.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform:\n    def __init__.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "&lt;no title&gt;", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_container", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Submodule Helper Functions", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "&lt;no title&gt;", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_array_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_array_mode", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "&lt;no title&gt;", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "ivy.execute_with_gradients", "ivy.Container.static_execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "variable_data", "with_grads", "Layers", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "&lt;no title&gt;", "FirstLayerSiren", "GlorotUniform", "&lt;no title&gt;", "Ones", "Siren", "&lt;no title&gt;", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"contextmanag": 1, "def": [1, 20, 119, 120, 121, 123, 125, 126, 127, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 275, 276, 277, 278, 368, 777, 1156, 1170, 1173, 1176], "__init__": [1, 4, 5, 23, 26, 27, 28, 73, 76, 77, 78, 79, 119, 128, 132, 137, 139, 140, 141, 142, 275, 276, 277, 278, 368, 777, 1156, 1170, 1173, 1176], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 30, 31, 32, 33, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 75, 76, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 142, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1160, 1161, 1162, 1165, 1166, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1193, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1204], "framework": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 75, 76, 77, 79, 81, 83, 85, 87, 89, 90, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 118, 120, 123, 124, 126, 127, 128, 129, 130, 133, 136, 139, 142, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1160, 1161, 1162, 1165, 1166, 1168, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1193, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1204], "ivi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 1156, 1162, 1203, 1204], "backend_handl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1156], "exclud": [2, 123, 137], "none": [2, 5, 12, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123, 125, 126, 127, 131, 132, 133, 134, 135, 137, 139, 141, 142], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 130, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 1156, 1203, 1204], "arg": [4, 21, 29, 30, 31, 32, 76, 77, 137, 139, 141], "kwarg": [4, 29, 30, 31, 32, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 137, 139, 141], "return": [4, 5, 12, 18, 19, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 1156], "current": [4, 5, 12, 16, 18, 19, 20, 21, 73, 76, 77, 78, 79, 127, 131, 133, 137, 142, 153, 154, 1156], "backend": [4, 5, 6, 12, 14, 19, 20, 29, 32, 34, 76, 77, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 138, 139, 142, 1156, 1162], "prioriti": [4, 19, 76, 77, 134], "global_backend": 4, "argument": [4, 5, 14, 20, 29, 31, 32, 33, 34, 73, 76, 77, 78, 79, 118, 119, 122, 123, 125, 126, 127, 128, 130, 131, 135, 137, 139, 140], "s": [4, 5, 6, 12, 15, 16, 17, 18, 19, 21, 23, 26, 27, 29, 33, 34, 35, 36, 76, 77, 118, 120, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 1156], "paramet": [4, 5, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 122, 125, 139, 140, 153], "from": [4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 49, 50, 55, 56, 59, 60, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 94, 95, 100, 101, 104, 105, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 1156, 1162], "which": [4, 5, 14, 15, 16, 18, 19, 20, 21, 35, 36, 37, 38, 43, 44, 53, 54, 55, 56, 59, 60, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 153, 154, 1156], "try": [4, 13, 15, 16, 18, 19, 20, 21, 76, 77, 130, 131, 135, 139, 154, 1156], "infer": [4, 35, 36, 55, 56, 80, 81, 100, 101, 118, 128, 132, 133, 137, 142], "when": [4, 14, 15, 18, 19, 20, 53, 54, 59, 60, 73, 76, 77, 78, 79, 98, 99, 104, 105, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142, 154, 1156], "global": [4, 5, 6, 12, 57, 58, 73, 76, 77, 78, 79, 102, 103, 127, 128, 132, 133, 137], "set": [4, 5, 6, 12, 14, 17, 19, 29, 33, 34, 43, 44, 45, 46, 64, 76, 77, 88, 89, 90, 91, 96, 97, 109, 118, 119, 121, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140], "ret": [4, 5, 12, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 122, 126, 137, 142], "exampl": [4, 5, 6, 12, 16, 18, 19, 20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 1156], "If": [4, 5, 6, 14, 17, 18, 19, 20, 21, 29, 33, 34, 35, 36, 51, 52, 53, 54, 55, 56, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 154, 1156], "import": [4, 15, 19, 20, 71, 72, 116, 117, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142, 154, 1156, 1162], "numpi": [4, 5, 6, 14, 15, 19, 20, 43, 44, 76, 77, 88, 89, 120, 121, 125, 126, 128, 132, 133, 134, 137, 139, 142, 1156], "np": [4, 120, 121, 125, 130, 132, 133, 134, 139, 140, 142, 1156], "x": [4, 12, 21, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 134, 135, 137, 139, 140, 141, 142, 1156], "arrai": [4, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 118, 119, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 154, 155, 163, 1156], "2": [4, 18, 19, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 120, 123, 125, 128, 131, 136, 137, 139, 140, 141, 142, 154, 1156], "0": [4, 19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 123, 125, 126, 137, 139, 140, 141, 142, 154, 1156], "print": [4, 5, 6, 12, 18, 19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 116, 117, 123, 125, 131, 137, 139, 140, 141, 1156], "modul": [4, 5, 16, 18, 21, 71, 72, 73, 76, 77, 78, 79, 116, 117, 125, 126, 127, 128, 130, 134, 135, 137, 138, 140, 142, 153, 154, 1156], "function": [4, 5, 6, 14, 19, 21, 23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 122, 123, 124, 126, 128, 130, 134, 135, 136, 138, 139, 140, 141, 152, 153, 1156], "py": [4, 5, 19, 119, 120, 121, 122, 125, 126, 127, 128, 132, 133, 135, 137, 139, 141, 142], "noqa": [4, 5], "The": [4, 5, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 153, 1156], "set_backend": [4, 5, 12, 127, 128, 129, 132, 1156], "ha": [4, 5, 14, 15, 16, 19, 63, 64, 76, 77, 108, 109, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 135, 137, 139, 141, 142, 153, 154], "over": [4, 14, 16, 18, 19, 69, 70, 71, 72, 76, 77, 96, 97, 114, 115, 116, 117, 122, 123, 125, 128, 134, 139, 154], "ani": [4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 35, 36, 41, 42, 43, 44, 69, 70, 71, 72, 76, 77, 86, 87, 88, 89, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 1156], "pass": [4, 20, 71, 72, 73, 76, 77, 78, 79, 116, 117, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 134, 135, 139, 154], "jax": [4, 5, 6, 15, 16, 19, 20, 45, 46, 90, 91, 120, 121, 125, 126, 128, 132, 133, 134, 137, 139, 142, 154, 1156], "specifi": [5, 35, 36, 53, 54, 55, 56, 59, 60, 69, 70, 74, 75, 76, 77, 96, 97, 98, 99, 100, 101, 104, 105, 114, 115, 118, 120, 125, 126, 127, 132, 133, 134, 137, 140, 141, 142], "isn": [5, 19, 140, 154], "t": [5, 15, 16, 18, 19, 20, 21, 23, 26, 27, 71, 72, 116, 117, 123, 125, 132, 137, 139, 140, 141, 142, 154], "associ": [5, 19, 125, 127, 129, 154], "option": [5, 18, 19, 24, 25, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 135, 137, 142, 154], "str": [5, 29, 31, 32, 49, 50, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 132, 133, 135], "we": [5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 71, 72, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 153, 154, 1156, 1162], "want": [5, 15, 17, 18, 19, 71, 72, 116, 117, 125, 140, 141, 142, 154], "retriev": [5, 19], "i": [5, 19, 21, 49, 50, 86, 87, 118, 125, 137, 140, 142], "e": [5, 15, 16, 17, 19, 21, 59, 60, 104, 105, 118, 125, 131, 140, 154], "one": [5, 15, 16, 18, 19, 23, 26, 27, 63, 64, 76, 77, 86, 87, 88, 89, 96, 97, 100, 101, 102, 103, 108, 109, 110, 111, 120, 123, 125, 126, 127, 130, 131, 132, 134, 135, 136, 139, 140, 142, 154, 1156], "default": [5, 18, 19, 24, 25, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 120, 122, 123, 125, 126, 127, 128, 131, 132, 133, 141], "torch": [5, 12, 19, 119, 120, 121, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154, 1156], "tensorflow": [5, 12, 15, 16, 19, 20, 120, 121, 125, 126, 132, 133, 134, 137, 142, 154, 1156], "mxnet": [5, 15, 20, 132, 133, 134, 137, 142, 1156], "either": [5, 12, 18, 19, 21, 41, 42, 76, 77, 86, 87, 122, 123, 125, 127, 128, 131, 132, 133, 137, 139, 140, 154], "doesn": [5, 18, 21, 123, 125, 132, 137, 154], "matter": [5, 14, 123], "been": [5, 19, 120, 122, 125, 127, 128, 131, 132, 133, 135, 137, 153, 154], "ivy_np": [5, 125], "us": [5, 12, 15, 16, 17, 19, 20, 41, 42, 55, 56, 57, 58, 71, 72, 73, 74, 75, 76, 77, 78, 79, 86, 87, 100, 101, 102, 103, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 153, 154, 1156], "ivy_jax": 5, "subsequ": [6, 18, 120, 123, 125, 127, 130, 134, 141], "call": [6, 12, 15, 19, 21, 73, 78, 79, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154], "nativ": [6, 29, 32, 33, 34, 35, 36, 76, 77, 125, 126, 132, 134, 139, 140], "native_arrai": [6, 12, 35, 36, 37, 38, 41, 42, 43, 44, 80, 81, 86, 87, 88, 89, 110, 111, 125], "1": [6, 12, 15, 16, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 120, 123, 125, 126, 127, 131, 134, 135, 136, 137, 139, 140, 141, 142, 154, 1156], "type": [6, 12, 18, 19, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 133, 134, 135, 137, 139, 140, 142, 155, 156, 157, 158, 159, 160, 161, 162, 163, 1156], "class": [6, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 122, 123, 125, 130, 131, 132, 133, 137, 138, 140, 141, 142, 152, 153, 154, 1156], "ndarrai": [6, 35, 36, 120, 121, 130, 132, 133, 134, 139], "Or": [6, 140], "jaxlib": [6, 18, 120, 121, 132, 133, 139], "xla_extens": [6, 120, 121, 132, 133, 139], "devicearrai": [6, 139], "warn": [7, 8, 9, 10, 11], "fals": [7, 8, 9, 10, 11, 23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 55, 56, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 125, 131, 134, 135, 140, 141, 142], "unset": [12, 128, 137, 139], "adjust": 12, "dict": [12, 29, 31, 32, 33, 34, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 121, 126, 131, 135, 140, 141], "previous": [12, 18, 21, 125, 127, 137], "otherwis": [12, 23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 41, 42, 45, 46, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 125, 130, 131, 132, 133, 137, 139], "implement": [12, 20, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 1156], "wa": [12, 15, 19, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 123, 137, 139], "last": [12, 16, 19, 53, 54, 69, 70, 76, 77, 98, 99, 114, 115, 123, 125, 128, 135, 154], "henc": [12, 125, 131], "here": [12, 18, 19, 20, 119, 120, 121, 123, 125, 126, 131, 137, 138, 139, 140, 141, 142, 153, 154], "tensor": [12, 14, 76, 77, 119, 120, 121, 126, 127, 128, 130, 132, 133, 134, 137, 139, 140, 141, 142, 154, 1156], "howev": [12, 15, 18, 20, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 139, 140, 141, 142, 154], "befor": [12, 18, 19, 20, 76, 77, 122, 125, 130, 132, 133, 134, 137, 140, 154], "becom": [12, 14, 16, 19, 123, 131, 137, 142, 154], "swap": 12, "python": [12, 13, 14, 15, 18, 19, 21, 125, 135, 137, 139, 140, 154, 1156, 1162], "op": [12, 119, 137, 154], "eagertensor": 12, "ml": [13, 15, 16, 17, 136, 137, 138, 140, 141, 142, 153, 1156, 1162], "explos": [13, 15, 1156], "A": [13, 14, 15, 16, 21, 35, 36, 37, 38, 69, 70, 73, 76, 77, 78, 79, 82, 83, 100, 101, 114, 115, 118, 125, 127, 131, 132, 133, 137, 140, 154, 1156], "huge": [13, 15, 140, 1156], "number": [13, 14, 18, 23, 26, 27, 37, 38, 55, 56, 63, 64, 69, 70, 73, 76, 77, 78, 79, 82, 83, 100, 101, 108, 109, 114, 115, 123, 125, 131, 133, 134, 137, 140, 142, 1156], "tool": [13, 16, 19, 138, 142, 153, 154, 1156], "have": [13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 153, 154, 1156], "explod": [13, 14, 1156], "onto": [13, 14, 1156], "scene": [13, 14, 118, 136, 138, 1156], "b": [13, 16, 17, 23, 26, 27, 41, 42, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 118, 123, 127, 128, 131, 136, 137, 138, 140, 141, 142, 152, 1156, 1162], "why": [13, 15, 19, 120, 131, 134, 139, 1156], "unifi": [13, 15, 76, 77, 130, 137, 154, 1156], "should": [13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 41, 42, 51, 52, 55, 56, 73, 74, 75, 76, 77, 78, 79, 86, 87, 96, 97, 100, 101, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 1156], "them": [13, 14, 15, 16, 118, 125, 128, 130, 131, 137, 139, 140, 141, 154, 1156], "c": [13, 15, 16, 17, 45, 46, 49, 50, 86, 87, 90, 91, 118, 123, 127, 131, 136, 137, 138, 140, 154, 1156, 1162], "standard": [13, 57, 58, 59, 60, 102, 103, 104, 105, 118, 119, 120, 122, 124, 125, 130, 134, 154, 1156, 1162], "re": [13, 14, 15, 17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 142, 154, 1156], "collabor": [13, 14, 15, 1156], "consortium": [13, 15, 1156, 1162], "data": [13, 15, 18, 23, 24, 25, 26, 27, 28, 35, 36, 38, 41, 42, 45, 46, 51, 52, 55, 56, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 86, 87, 90, 91, 96, 97, 100, 101, 104, 105, 108, 109, 114, 115, 118, 119, 120, 121, 122, 127, 129, 131, 133, 134, 139, 1156, 1162], "api": [13, 14, 18, 19, 118, 120, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 136, 138, 140, 154, 1156, 1162], "open": [14, 15, 16, 17, 18, 19, 21, 59, 60, 104, 105, 122, 153, 1156], "project": [14, 15, 16, 18, 19, 21, 119, 125, 128, 139, 141, 153, 154], "grown": 14, "consider": [14, 120, 123], "recent": [14, 15, 18, 19, 125], "year": [14, 16, 154, 1156], "especi": [14, 18], "deep": [14, 17, 19, 20, 76, 77, 131, 136, 140, 1156], "learn": [14, 15, 18, 20, 118, 127, 136, 142, 153, 1156], "can": [14, 15, 16, 17, 18, 19, 35, 36, 37, 38, 55, 56, 59, 60, 82, 83, 100, 101, 104, 105, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 153, 154, 1156, 1162], "seen": [14, 15, 123, 125, 139, 140], "rapidli": 14, "increas": 14, "github": [14, 19, 20, 122, 125], "repo": [14, 15, 16, 18, 19, 124, 137, 139, 140, 141, 142, 153, 1156, 1162], "contain": [14, 18, 20, 21, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 51, 52, 53, 54, 55, 56, 63, 64, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 125, 127, 132, 134, 136, 137, 138, 141, 142, 154, 1156], "term": [14, 19, 131], "time": [14, 15, 16, 18, 19, 20, 63, 64, 108, 109, 120, 121, 125, 127, 131, 132, 137, 140, 142, 154], "These": [14, 15, 16, 19, 120, 122, 123, 125, 126, 127, 131, 132, 134, 137, 138, 140, 141, 142, 154, 1156, 1162], "ar": [14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 31, 32, 41, 42, 43, 44, 55, 56, 59, 60, 73, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 96, 97, 100, 101, 104, 105, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 154, 155, 163, 1156], "written": [14, 18, 119, 120, 122, 125, 126, 130, 134, 137, 139, 142, 154], "mani": [14, 15, 16, 18, 19, 20, 76, 77, 120, 122, 123, 125, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 154], "differ": [14, 15, 16, 18, 19, 41, 42, 73, 76, 77, 78, 79, 118, 119, 120, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 154, 1156], "while": [14, 15, 18, 19, 73, 76, 77, 78, 79, 123, 125, 128, 134, 135, 141, 142, 154], "thi": [14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 154, 1156, 1162], "wonder": [14, 16, 139], "thing": [14, 15, 16, 18, 19, 20, 125, 128, 139, 140], "research": [14, 153], "develop": [14, 15, 16, 17, 18, 19, 20, 153, 154, 1156], "also": [14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 118, 119, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154], "consid": [14, 15, 76, 77, 96, 97, 119, 127, 138, 139, 140], "speed": [14, 125], "evolv": 14, "sharabl": 14, "code": [14, 15, 16, 18, 19, 20, 21, 41, 42, 73, 76, 77, 78, 79, 90, 91, 110, 111, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 152, 154, 1156, 1162], "significantli": 14, "hinder": [14, 120], "librari": [14, 15, 16, 23, 26, 27, 126, 137, 142, 152, 154, 1156], "outdat": 14, "month": 14, "rigor": [14, 125], "maintain": [14, 19], "against": [14, 37, 38, 76, 77, 82, 83, 96, 97, 125, 154], "newest": 14, "version": [14, 15, 16, 18, 19, 122, 126, 132, 137, 139, 1156], "For": [14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 45, 46, 90, 91, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154], "softwar": [14, 15, 18, 19], "pipelin": [14, 130, 142], "where": [14, 15, 16, 17, 18, 19, 20, 21, 35, 36, 55, 56, 59, 60, 69, 70, 76, 77, 100, 101, 104, 105, 114, 115, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 154, 1156], "rapid": [14, 15, 18], "prototyp": 14, "vital": [14, 142], "signific": [14, 15, 154], "bottleneck": 14, "As": [14, 19, 71, 72, 116, 117, 120, 121, 125, 126, 127, 130, 131, 132, 133, 134, 137, 139, 140, 141, 154], "new": [14, 15, 16, 17, 18, 19, 20, 21, 43, 44, 55, 56, 57, 58, 76, 77, 82, 83, 88, 89, 100, 101, 102, 103, 118, 119, 122, 123, 125, 129, 131, 132, 134, 136, 139, 142, 153, 1156], "futur": [14, 16, 18, 19, 139, 154], "avail": [14, 18, 19, 76, 77, 122, 126, 133, 154], "specif": [14, 19, 20, 76, 77, 118, 120, 121, 125, 126, 127, 130, 131, 132, 133, 134, 137, 138, 139, 141, 142, 153, 154, 1156, 1162], "quickli": [14, 16, 18, 19, 140, 141], "obsolet": [14, 16], "user": [14, 15, 18, 19, 21, 118, 125, 126, 128, 131, 134, 136, 154], "constantli": 14, "invent": 14, "wheel": 14, "our": [14, 15, 17, 18, 19, 71, 72, 116, 117, 123, 125, 126, 131, 135, 136, 139, 140, 141, 142, 154, 1156], "desir": [14, 19, 37, 38, 76, 77, 82, 83, 126], "provid": [14, 18, 19, 69, 70, 76, 77, 114, 115, 120, 122, 123, 125, 127, 130, 131, 132, 133, 134, 137, 141, 153, 154], "simultan": [14, 16], "all": [14, 15, 16, 17, 18, 19, 20, 21, 29, 31, 32, 33, 34, 35, 36, 43, 44, 55, 56, 59, 60, 69, 70, 71, 72, 76, 77, 88, 89, 96, 97, 100, 101, 104, 105, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 153, 154, 155, 163, 1156], "modern": [14, 15], "simpl": [14, 18, 19, 119, 122, 123, 125, 127, 130, 131, 132, 133, 134, 137, 139, 141, 142, 154], "scalabl": [14, 137], "manner": [14, 29, 33, 34, 76, 77, 119, 122, 125, 133, 140, 153, 154], "must": [14, 16, 18, 19, 20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 123, 127, 130, 131, 132, 133, 137, 141, 142], "determin": [14, 23, 24, 25, 26, 27, 41, 42, 51, 52, 69, 70, 73, 74, 75, 76, 77, 78, 79, 86, 87, 96, 97, 114, 115, 122, 127, 131, 132, 133], "exactli": [14, 16, 123, 131, 133, 1156, 1162], "common": [14, 20, 76, 77, 121, 123, 127, 129, 131, 133, 135, 154], "ground": [14, 125], "li": 14, "between": [14, 53, 54, 73, 76, 77, 78, 79, 98, 99, 120, 123, 125, 127, 130, 131, 136, 138, 139, 140, 142, 153, 1156], "find": [14, 18, 19, 76, 77, 125, 137, 140, 1156], "exist": [14, 15, 18, 20, 21, 55, 56, 76, 77, 100, 101, 121, 122, 123, 124, 125, 127, 128, 129, 134, 137, 154], "essenti": [14, 15, 20, 123, 127, 133], "order": [14, 18, 19, 21, 73, 76, 77, 78, 79, 96, 97, 120, 122, 123, 126, 128, 130, 131, 132, 133, 139, 140, 142, 154], "design": [14, 15, 118, 134, 137, 139, 154], "univers": 14, "abstract": [14, 131, 141, 154], "In": [14, 16, 18, 19, 55, 56, 100, 101, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 1156], "search": [14, 18, 29, 33, 34, 62, 76, 77, 107, 119, 123, 125], "languag": [14, 16, 137], "first": [14, 15, 18, 19, 21, 23, 26, 27, 41, 42, 63, 64, 73, 78, 79, 86, 87, 108, 109, 120, 123, 125, 127, 130, 131, 137, 139, 140, 142], "see": [14, 17, 18, 19, 20, 23, 26, 27, 41, 42, 69, 70, 73, 78, 79, 86, 87, 114, 115, 120, 124, 127, 131, 133, 139, 140, 153, 154, 1156], "clear": [14, 15, 16, 19, 20, 123, 132, 133, 137, 139], "front": [14, 136, 137, 140, 1156, 1162], "runner": 14, "look": [14, 18, 19, 21, 119, 120, 121, 123, 125, 126, 127, 128, 131, 132, 133, 137, 139, 141, 142, 1156], "littl": [14, 139], "deeper": [14, 19, 118, 136], "follow": [14, 15, 18, 19, 20, 21, 76, 77, 119, 122, 123, 125, 128, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 154, 1156], "same": [14, 16, 18, 19, 21, 29, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 59, 60, 63, 64, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 104, 105, 108, 109, 119, 120, 121, 123, 125, 126, 127, 130, 131, 133, 134, 135, 137, 139, 141, 142, 154, 1156], "core": [14, 18, 20, 133, 137, 142, 1156], "principl": 14, "oper": [14, 18, 20, 23, 26, 27, 49, 50, 73, 76, 77, 78, 79, 94, 95, 122, 123, 125, 126, 127, 130, 131, 133, 134, 140, 141], "expos": [14, 137, 141], "almost": [14, 19, 131, 138, 140], "ident": [14, 16, 76, 77, 121, 126, 127, 129, 131, 139, 140, 154, 1156], "uniqu": [14, 63, 64, 108, 109, 125, 127, 131, 154], "syntax": [14, 15, 135], "There": [14, 18, 19, 123, 126, 127, 130, 131, 132, 135, 137, 140, 154], "onli": [14, 17, 18, 19, 23, 26, 27, 59, 60, 76, 77, 104, 105, 119, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 152, 154, 1156], "so": [14, 15, 18, 19, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 119, 120, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 154, 155, 163, 1156], "wai": [14, 15, 18, 125, 128, 134, 139, 140, 141, 142, 154], "manipul": [14, 56, 101, 119, 142, 153], "unsurprisingli": [14, 123], "fundament": [14, 131, 137], "consist": [14, 76, 77, 130, 132, 134], "each": [14, 15, 16, 18, 19, 20, 24, 25, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 55, 56, 63, 64, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 100, 101, 108, 109, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142, 153, 154, 1156, 1162], "veri": [14, 15, 18, 19, 119, 120, 123, 125, 127, 131, 133, 134, 138, 140, 141, 142, 154, 1156], "similar": [14, 119, 125, 131, 132, 133, 140, 154], "convent": [14, 153], "those": [14, 18, 19, 20, 55, 56, 76, 77, 100, 101, 125, 131, 137, 142], "introduc": [14, 131, 140], "2006": 14, "layer": [14, 50, 57, 58, 95, 102, 103, 119, 122, 137, 138, 141, 1156], "therefor": [14, 19, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 137, 139, 141, 154], "present": [14, 19, 76, 77, 120, 124, 131, 132, 133, 134, 137], "itself": [14, 18, 19, 120, 126, 131, 134, 141, 153, 154], "cut": 14, "cloth": 14, "adher": [14, 15, 122, 124, 137, 142], "semant": [14, 137, 142], "round": [14, 15, 16, 18, 19, 20, 21, 41, 42, 86, 87, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 1156], "up": [14, 15, 16, 17, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 153, 154], "hopefulli": [14, 15, 16, 18, 19, 20, 21, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153], "paint": [14, 137], "pictur": [14, 137], "how": [14, 16, 17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 153, 154, 1156, 1162], "pleas": [14, 15, 16, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 1156], "check": [14, 15, 16, 18, 19, 29, 31, 32, 33, 34, 45, 46, 76, 77, 90, 91, 121, 125, 131, 136, 137, 139, 140, 141, 142, 153, 1156], "out": [14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 153, 1156], "discuss": [14, 15, 16, 17, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 1156], "faq": [14, 15, 16, 137, 139, 140, 141, 142, 153], "reach": [14, 15, 16, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153], "discord": [14, 15, 16, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 1156], "you": [14, 15, 16, 17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 153, 154, 1156, 1162], "question": [14, 15, 16, 18, 19, 123, 125, 137, 139, 140, 141, 142, 153, 154, 1156], "With": [15, 16, 18, 23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 123, 125, 126, 137], "central": 15, "goal": [15, 20], "being": [15, 16, 18, 19, 76, 77, 120, 123, 125, 129, 130, 131, 132, 133, 134, 135, 137, 140, 153, 154, 1156], "would": [15, 18, 19, 21, 55, 56, 100, 101, 118, 120, 122, 123, 125, 128, 129, 130, 131, 134, 136, 137, 139, 141, 142, 154, 1156], "entir": [15, 16, 19, 69, 70, 76, 77, 114, 115, 123, 124, 125, 130, 131, 134, 139, 140, 141, 142, 154], "forgiven": 15, "rais": [15, 19, 55, 56, 59, 60, 69, 70, 76, 77, 100, 101, 104, 105, 114, 115, 121, 134, 135, 137, 139], "an": [15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 55, 56, 59, 60, 63, 64, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 1156], "eyebrow": 15, "somehow": 15, "pytorch": [15, 16, 20, 120, 126, 127, 132, 133, 134, 137, 139, 142, 154, 1156], "other": [15, 18, 19, 23, 26, 27, 37, 38, 43, 44, 73, 76, 77, 78, 79, 82, 83, 88, 89, 119, 122, 123, 125, 126, 127, 130, 131, 134, 135, 137, 139, 141, 142, 152, 153, 154, 1156], "strong": [15, 154], "industri": 15, "back": [15, 130, 136, 137, 139, 154, 1156, 1162], "momentum": 15, "won": [15, 16, 19, 142], "ad": [15, 18, 19, 20, 116, 117, 119, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 134, 137, 141, 154], "just": [15, 16, 18, 19, 122, 123, 125, 126, 127, 134, 137, 139, 140, 154], "make": [15, 16, 18, 19, 20, 119, 120, 122, 123, 124, 125, 127, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142], "problem": [15, 19, 130, 139], "even": [15, 16, 18, 19, 120, 122, 127, 132, 133, 139, 140, 141, 142, 154], "wors": 15, "rather": [15, 19, 45, 46, 76, 77, 90, 91, 119, 122, 125, 131, 142, 154], "funni": 15, "comic": 15, "strip": 15, "easi": [15, 18, 19, 127, 131], "feasibl": 15, "space": 15, "case": [15, 18, 19, 20, 29, 33, 34, 55, 56, 73, 76, 77, 78, 79, 96, 97, 100, 101, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139, 141, 142, 154], "unlik": [15, 123, 131], "charger": 15, "charact": [15, 135], "encod": [15, 140], "instant": [15, 1156], "messag": [15, 19, 135, 137, 139, 1203, 1204], "much": [15, 18, 19, 119, 130, 131, 134, 137, 139, 140], "doe": [15, 19, 21, 76, 77, 118, 119, 120, 122, 123, 125, 126, 127, 128, 132, 134, 137, 139, 140, 154], "mandat": [15, 125, 134], "adopt": [15, 19, 130], "continu": [15, 16, 124, 125, 135, 154], "own": [15, 16, 18, 121, 122, 125, 135, 137, 154], "signatur": [15, 119, 120, 122, 123, 125, 131, 132, 133, 134], "replac": [15, 19, 21, 55, 56, 76, 77, 100, 101, 123, 125, 129, 131, 132, 133, 137, 139, 142, 154], "your": [15, 16, 17, 18, 20, 21, 119, 122, 140, 141, 154, 1156], "10": [15, 18, 21, 41, 42, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 125, 131, 137, 139, 140], "100": [15, 16, 125, 140, 141, 142, 154, 1156], "despit": [15, 131, 133], "distinct": [15, 18, 122, 131, 134, 136, 1156], "still": [15, 19, 76, 77, 122, 125, 132, 139, 141, 154, 1156], "believ": [15, 19], "share": [15, 76, 77, 123, 125, 127, 128, 131, 137], "bring": [15, 125, 137, 138], "benefit": [15, 16, 18, 19, 130, 131, 134, 139, 140, 154], "unrel": [15, 19], "what": [15, 16, 19, 118, 120, 122, 123, 125, 129, 131, 135, 136, 137, 139, 140, 141, 142, 153, 154, 1156], "again": [15, 16, 19, 119, 123, 125, 131, 134, 140, 142, 154], "contrari": 15, "bumpi": 15, "road": 15, "allud": [15, 140], "most": [15, 18, 76, 77, 119, 120, 125, 127, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 154], "technolog": 15, "sector": [15, 41, 42, 86, 87], "full": [15, 16, 19, 120, 122, 125, 132, 137, 154], "success": 15, "reason": [15, 19, 119, 123, 127, 130, 131, 132, 134, 137, 139], "build": [15, 17, 18, 127, 136, 138, 141, 142, 154, 1156], "custom": [15, 125, 141], "comput": [15, 16, 18, 23, 26, 27, 41, 42, 43, 44, 53, 54, 74, 75, 76, 77, 86, 87, 88, 89, 96, 97, 98, 99, 125, 126, 127, 131, 137, 140, 154], "thank": [15, 140], "interoper": 15, "compon": [15, 137], "bio": [15, 18], "hardwar": [15, 18], "initi": [15, 19, 73, 76, 77, 78, 79, 125, 128, 132, 133], "pcie": 15, "interfac": [15, 142, 154], "motherboard": 15, "raid": 15, "storag": [15, 140], "virtual": [15, 19, 21], "bluetooth": 15, "wireless": 15, "exchang": 15, "btx": 15, "form": [15, 17, 29, 31, 32, 33, 34, 35, 36, 51, 52, 76, 77, 96, 97, 125, 127, 141, 142], "factor": [15, 45, 46, 49, 50, 51, 52, 90, 91, 94, 95, 96, 97], "sata": 15, "connect": [15, 18, 141, 142], "host": [15, 154], "bu": 15, "adapt": 15, "devic": [15, 19, 23, 26, 27, 35, 36, 40, 43, 44, 59, 60, 76, 77, 80, 81, 85, 88, 89, 104, 105, 118, 119, 121, 127, 129, 132, 139, 140, 154], "html": [15, 21, 122], "enabl": [15, 18, 19, 73, 76, 77, 78, 79, 125, 127, 130, 131, 134, 136, 137, 138, 140, 142, 154], "anyon": [15, 17, 154], "websit": 15, "tcp": 15, "ip": 15, "node": [15, 76, 77, 131], "commun": [15, 17, 19, 20, 154, 1156, 1162], "network": [15, 127, 131, 137, 141, 153, 1156], "smtp": 15, "possibl": [15, 17, 18, 19, 20, 55, 56, 100, 101, 122, 123, 125, 131, 132, 134, 137, 140, 153, 154], "send": 15, "gmail": 15, "outlook": 15, "pop": 15, "email": 15, "ieee": 15, "754": 15, "allow": [15, 19, 125, 126, 137, 154], "calcul": [15, 53, 54, 73, 76, 77, 78, 79, 98, 99, 122], "live": [15, 16], "depend": [15, 18, 19, 23, 26, 27, 122, 125, 126, 129, 131, 132, 137, 154], "did": [15, 20, 142], "aris": [15, 154], "until": [15, 19, 135, 154, 1156], "substanti": [15, 19, 125, 130], "innov": 15, "growth": 15, "usag": [15, 137, 154], "relev": [15, 18, 20, 123, 131, 132, 140], "area": [15, 41, 42, 86, 87, 134, 152, 1156], "necess": 15, "parti": [15, 154], "could": [15, 16, 18, 19, 123, 125, 131, 132, 134, 137, 139, 140, 141], "easili": [15, 19, 140, 141, 142, 154, 1156], "engag": [15, 17, 18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "regard": [15, 131], "effect": [15, 120, 122, 130, 131, 154], "2015": 15, "sinc": [15, 18, 19, 125, 154], "alongsid": 15, "machin": [15, 18, 127, 153], "given": [15, 16, 18, 19, 20, 21, 43, 44, 53, 54, 55, 56, 59, 60, 76, 77, 88, 89, 98, 99, 100, 101, 104, 105, 119, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 141, 142, 153], "frame": [15, 153], "less": [15, 19, 23, 26, 27, 41, 42, 59, 60, 76, 77, 86, 87, 104, 105, 120, 123, 131, 136, 137], "matur": [15, 154], "state": [15, 120, 122, 125, 136, 137, 138, 140, 153, 1156], "than": [15, 19, 23, 26, 27, 45, 46, 59, 60, 63, 64, 76, 77, 90, 91, 104, 105, 108, 109, 119, 123, 125, 131, 134, 137, 140, 141, 142, 154], "preced": [15, 141], "mention": [15, 18, 19, 120, 123, 127, 134], "aros": 15, "70": 15, "80": 15, "90": [15, 86, 87], "effort": [15, 17, 125, 154], "stage": [15, 17, 19, 21, 118, 135, 1156], "complet": [15, 19, 20, 76, 77, 130, 131, 139, 140], "natur": [15, 123, 130, 131, 153], "like": [15, 18, 19, 21, 45, 46, 90, 91, 118, 119, 120, 122, 123, 125, 126, 133, 134, 136, 137, 139, 140, 141, 142, 153, 154, 1156], "certainli": 15, "mission": [15, 1156], "creat": [15, 17, 18, 19, 21, 35, 36, 43, 44, 59, 60, 76, 77, 80, 81, 88, 89, 104, 105, 118, 121, 125, 126, 132, 133, 134, 137, 138, 141, 152, 153, 1156, 1162], "At": [15, 20, 121], "process": [15, 16, 17, 18, 19, 21, 125, 127, 131, 137, 142], "ourselv": 15, "lead": [15, 16, 73, 76, 77, 78, 79, 154], "quansight": 15, "compani": 15, "made": [15, 19, 20, 131, 134, 137, 139], "organ": [15, 119, 127, 130, 131], "panda": 15, "scipi": 15, "conda": [15, 18, 21], "dask": 15, "apach": 15, "onnx": 15, "scikit": 15, "jupyt": 15, "aw": 15, "cupi": 15, "net": [15, 16, 137, 142], "sympi": 15, "rai": 15, "modin": 15, "spyder": 15, "includ": [15, 19, 20, 35, 36, 69, 70, 76, 77, 114, 115, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 153, 154], "member": [15, 19], "googl": [15, 1156], "octoml": 15, "einop": [15, 76, 77], "further": [15, 16, 19, 21, 123, 126, 130, 136, 140, 141, 1156], "sponsor": 15, "lg": 15, "electron": 15, "microsoft": 15, "d": [15, 16, 17, 18, 49, 50, 94, 95, 118, 131, 140, 1156, 1162], "shaw": 15, "co": [15, 41, 42, 86, 87, 137, 153, 1156], "intel": 15, "togeth": [15, 76, 77, 130, 131, 135, 141, 142, 154], "major": [15, 125, 126, 132, 133, 154], "involv": [15, 17, 21, 118, 132, 142, 1156, 1162], "anoth": [15, 18, 19, 76, 77, 125, 126, 127, 131, 132, 139, 142], "promis": 15, "sign": [15, 18, 41, 42, 86, 87, 138, 142], "pursuit": 15, "unif": [15, 17, 139, 1156, 1162], "clearli": [15, 19, 20, 123, 125], "lot": [15, 16, 129, 139, 154], "thought": [15, 18, 19, 120], "care": [15, 19, 142], "attent": [15, 19, 130, 131], "gone": [15, 136], "simplifi": [15, 137, 138, 139, 141], "compat": [15, 23, 26, 27, 41, 42, 55, 56, 69, 70, 73, 78, 79, 86, 87, 100, 101, 114, 115, 120, 121, 154, 1156], "excit": [15, 17, 118, 1156], "complianc": 15, "hope": [15, 154], "due": [15, 18, 23, 26, 27, 126, 131, 134], "suit": [15, 18, 118, 124, 125, 140, 153], "some": [15, 16, 18, 19, 20, 76, 77, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 153, 154, 1156], "motiv": [15, 139], "great": [15, 16, 19, 125, 137, 139], "convinc": 15, "celebr": 15, "encourag": [15, 153, 154, 1156, 1162], "foundat": 15, "point": [16, 19, 24, 25, 41, 42, 51, 52, 59, 60, 74, 75, 86, 87, 96, 97, 104, 105, 120, 122, 123, 125, 130, 134, 137, 139, 140, 153], "mai": [16, 18, 19, 23, 26, 27, 41, 42, 86, 87, 125, 126, 131, 139, 141], "ask": [16, 137, 139, 154, 1156], "perfectli": 16, "happi": [16, 18, 154], "abund": 16, "better": [16, 118, 121, 126, 135, 136, 139, 140, 141], "ll": [16, 17, 19, 123, 131, 134, 140], "give": [16, 18, 19, 118, 120, 122, 123, 128, 139], "two": [16, 18, 35, 36, 51, 52, 73, 78, 79, 96, 97, 122, 123, 125, 126, 130, 131, 136, 140, 142, 1156], "streamlin": 16, "workflow": [16, 19, 140, 152, 1156], "save": [16, 76, 77, 125, 135, 154], "week": [16, 19, 20, 1156], "let": [16, 121, 122, 123, 125, 126, 131, 132, 133, 137, 139, 140, 141, 142, 1156], "sai": [16, 18, 129, 139], "deepmind": 16, "releas": [16, 18, 20, 154, 1156], "awesom": 16, "paper": 16, "love": 16, "choic": [16, 18, 134, 140], "perceiverio": 16, "happen": [16, 18, 19, 125, 140], "slew": 16, "rush": 16, "f": [16, 19, 21, 118, 125, 131, 135, 137, 140, 142], "g": [16, 59, 60, 104, 105, 118, 131, 154], "inevit": 16, "deviat": [16, 57, 58, 59, 60, 102, 103, 104, 105, 125], "origin": [16, 19, 55, 56, 73, 76, 77, 78, 79, 96, 97, 100, 101, 126, 128, 129, 132, 137, 139], "often": [16, 125, 127, 135, 154], "erron": 16, "train": [16, 45, 46, 90, 91, 127, 131, 133, 140, 141, 142, 152, 153, 154, 1156], "poor": 16, "converg": 16, "perform": [16, 69, 70, 76, 77, 114, 115, 119, 120, 123, 125, 127, 128, 130, 131, 133, 134, 137, 140, 154], "issu": [16, 17, 20, 125, 137, 139, 141, 154], "etc": [16, 18, 19, 20, 43, 44, 59, 60, 71, 72, 76, 77, 88, 89, 104, 105, 116, 117, 119, 120, 123, 125, 130, 131, 132, 137, 139, 140, 154], "publish": [16, 154], "manag": [16, 17, 134, 154], "get": [16, 17, 18, 20, 76, 77, 118, 125, 127, 132, 133, 134, 137, 138, 139, 140, 141, 1156, 1162], "work": [16, 18, 19, 20, 118, 125, 126, 131, 132, 133, 136, 137, 138, 139, 141, 142, 1156, 1162], "repositori": [16, 18, 19, 21, 124, 135], "pull": [16, 17, 18, 21, 119, 154], "request": [16, 17, 119], "confus": [16, 134], "do": [16, 18, 19, 20, 45, 46, 76, 77, 90, 91, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154], "don": [16, 18, 19, 20, 71, 72, 116, 117, 125, 132, 141, 154], "expect": [16, 19, 125, 154, 1156], "codebas": [16, 17, 118, 119, 134, 136, 1156], "total": [16, 17, 19, 73, 76, 77, 78, 79, 123, 125, 133, 140, 141, 154], "hour": 16, "spent": 16, "spin": 16, "off": [16, 18, 136], "test": [16, 18, 20, 41, 42, 69, 70, 86, 87, 114, 115, 118, 123, 135, 154], "error": [16, 18, 19, 41, 42, 76, 77, 86, 87, 120, 121, 123, 125, 130, 133, 135, 139, 154], "iter": [16, 29, 31, 32, 33, 34, 43, 44, 71, 72, 73, 76, 77, 78, 79, 88, 89, 116, 117, 131, 137, 140], "address": [16, 19, 20, 130, 137], "sake": 16, "singl": [16, 19, 59, 60, 76, 77, 104, 105, 119, 120, 123, 125, 127, 129, 131, 134, 137, 140, 141, 142, 154], "multipl": [16, 19, 57, 58, 69, 70, 76, 77, 86, 87, 88, 89, 90, 91, 96, 97, 100, 101, 102, 103, 114, 115, 123, 127, 131, 154], "line": [16, 18, 123, 125, 130, 135, 138, 139, 140, 141, 152, 1156, 1162], "convert": [16, 29, 31, 32, 33, 34, 35, 36, 76, 77, 125, 130, 137, 154, 155, 163], "directli": [16, 19, 119, 120, 121, 122, 125, 126, 127, 130, 131, 132, 133, 134, 137, 139, 141, 142, 153, 154], "graph": [16, 23, 26, 27, 127, 131, 138, 154], "guarante": [16, 130, 154], "turn": [16, 18, 123, 125, 131], "4": [16, 21, 23, 26, 27, 35, 36, 37, 38, 41, 42, 45, 46, 49, 50, 51, 52, 55, 56, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 125, 128, 131, 137, 139, 140, 141, 142, 1156], "step": [16, 18, 19, 21, 45, 46, 76, 77, 80, 81, 90, 91, 123, 128, 130, 131, 132, 133, 137, 140, 141, 142, 153, 1156], "take": [16, 17, 18, 19, 122, 123, 125, 131, 132, 133, 137, 139, 141, 142, 154, 1156, 1162], "few": [16, 19, 20, 125, 127, 131, 132, 133, 134, 135, 138, 139, 140, 141, 152, 1156, 1162], "second": [16, 18, 23, 26, 27, 41, 42, 45, 46, 63, 64, 73, 78, 79, 86, 87, 90, 91, 108, 109, 123, 125, 126, 134, 139], "automat": [16, 18, 19, 118, 120, 127, 131, 136, 137, 138, 141, 142, 1156], "convers": [16, 30, 31, 32, 33, 34, 76, 77, 136, 138, 142, 153, 154, 1156, 1162], "everyon": [16, 17, 19, 154], "regardless": [16, 17, 76, 77, 139, 142], "wouldn": 16, "nice": [16, 125], "write": [16, 19, 20, 21, 24, 25, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 122, 123, 127, 128, 134, 137, 139, 142], "onc": [16, 18, 19, 125, 131, 132, 133, 137, 140, 154], "know": [16, 19, 125], "among": [16, 76, 77, 125], "frantic": 16, "port": 16, "lucid": 16, "honk": 16, "improv": [16, 19, 127, 137], "understand": [16, 18, 19, 20, 21, 118, 120, 122, 123, 124, 126, 135, 136], "pattern": [16, 76, 77, 122, 132], "hasn": 16, "chang": [16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 122, 124, 125, 126, 131, 137, 141, 154, 1156, 1162], "now": [16, 18, 21, 76, 77, 119, 120, 125, 129, 131, 132, 135, 139, 140, 142, 153, 154], "spend": 16, "torchvis": 16, "probabl": [16, 125], "sonnet": 16, "about": [16, 18, 19, 124, 125, 136, 137, 141, 142, 154], "next": [16, 18, 19, 20, 21, 122, 123, 128, 129, 135, 139, 140, 1156], "everyth": [16, 19, 20, 125, 138, 154], "zero": [16, 35, 36, 37, 38, 41, 42, 45, 46, 69, 70, 76, 77, 82, 83, 86, 87, 90, 91, 104, 105, 114, 115, 120, 123, 125, 130, 131, 132, 133, 137, 140, 141, 1156], "need": [16, 18, 19, 20, 21, 43, 44, 88, 89, 119, 122, 123, 124, 126, 127, 130, 131, 134, 137, 139, 140, 153, 154], "said": 16, "high": [16, 20, 59, 60, 76, 77, 104, 105, 140], "level": [16, 17, 20, 127, 136, 137, 140, 141, 142, 154], "optim": [16, 134, 138, 140, 142, 153, 1156], "trainer": [16, 152, 154, 1156], "statu": 16, "quo": 16, "kera": 16, "dopamin": 16, "ignit": 16, "catalyst": 16, "lightn": 16, "fastai": 16, "haiku": [16, 142], "flax": [16, 142, 154], "trax": [16, 142], "objax": [16, 142], "idea": [16, 121, 126, 135, 153], "fulli": [16, 120, 130, 131, 137, 138, 139, 140, 141, 142, 154], "offer": [16, 141], "strongli": [17, 18, 1156, 1162], "welcom": [17, 18, 19, 1156, 1162], "absolut": [17, 41, 42, 76, 77, 86, 87], "skill": 17, "whether": [17, 18, 23, 26, 27, 29, 31, 32, 33, 34, 43, 44, 45, 46, 55, 56, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 120, 131, 132, 134], "vetern": 17, "beginn": 17, "start": [17, 18, 19, 20, 21, 76, 77, 80, 81, 118, 122, 123, 126, 132, 136, 137, 139, 140, 141, 153, 154], "aspect": [17, 140, 1156], "guid": [17, 18, 19, 135, 1156], "through": [17, 19, 20, 118, 123, 125, 126, 127, 128, 131, 135, 136, 137, 139, 140, 141, 142, 153], "journei": [17, 1156, 1162], "inclusvi": 17, "big": [17, 154], "team": [17, 18, 19], "board": 17, "contributor": [17, 18, 19, 136, 1156], "split": [17, 19, 76, 77, 136, 137, 154, 1156], "section": [17, 19, 20, 118, 119, 120, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141], "below": [17, 18, 20, 21, 35, 36, 118, 119, 121, 123, 125, 127, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 153, 1156], "best": [17, 18, 19, 20, 21, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "go": [17, 18, 19, 20, 118, 119, 123, 126, 131, 136, 140, 154], "finish": [17, 18, 118, 1156], "dive": [17, 19, 20, 131, 136, 139, 140, 154, 1156], "right": [17, 18, 19, 76, 77, 118, 123, 140], "environ": [17, 19, 21, 153], "basic": [17, 20, 21], "fork": [17, 18], "doc": [17, 20, 120, 122, 137, 140, 141, 1156], "document": [17, 19, 125, 126, 138, 140, 142], "local": [17, 18, 21, 127], "task": [17, 19, 153, 1156], "help": [17, 18, 123, 125, 126, 128, 130, 131, 139, 140, 141, 152, 1156], "video": [17, 19, 119, 120, 122, 123, 125, 126, 127, 128], "realli": [18, 131, 154], "contribut": [18, 19, 20, 137, 1162], "toward": [18, 55, 56, 100, 101, 137, 1156, 1162], "page": [18, 19, 138, 142, 152, 1156, 1162], "explain": [18, 19, 20, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 1156, 1162], "main": [18, 21, 35, 36, 129, 131], "prefer": [18, 126, 131], "mode": [18, 19, 51, 52, 76, 77, 96, 97, 123, 131, 154], "git": [18, 19, 125], "recurs": [18, 21, 29, 31, 32, 33, 34, 76, 77, 127, 131, 141, 154], "submodul": [18, 19, 20, 21, 118, 124, 125, 127, 133, 136, 137, 141, 1156], "com": 18, "unifyai": [18, 19, 21], "http": [18, 122], "gh": 18, "your_fold": 18, "id": [18, 130, 131, 135], "cours": [18, 19, 123, 140, 154], "whatev": [18, 154], "integr": 18, "familiar": [18, 20], "decid": [18, 76, 77, 126], "sure": [18, 19, 20, 124, 125], "elig": 18, "free": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 153, 1156], "student": 18, "licenc": 18, "peopl": [18, 19, 118], "seem": [18, 141, 154], "miss": [18, 123, 125, 130, 131, 135], "add": [18, 19, 20, 23, 26, 27, 41, 42, 57, 58, 71, 72, 73, 76, 77, 78, 79, 86, 87, 88, 89, 102, 103, 110, 111, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 130, 131, 137, 139, 154, 1156, 1162], "explicit": [18, 21, 131, 132, 134, 137, 154], "remind": 18, "channel": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "pace": 18, "updat": [18, 19, 20, 21, 45, 46, 76, 77, 90, 91, 118, 120, 123, 124, 129, 130, 131, 132, 137, 139, 140, 142, 154], "suggest": [18, 19, 119, 125], "latest": [18, 19, 20, 21, 122, 154], "packag": [18, 21, 126, 135, 154], "ensur": [18, 19, 120, 121, 125, 126, 130, 132, 135], "align": [18, 76, 77, 137, 139, 1156, 1162], "accord": [18, 21, 37, 38, 76, 77, 82, 83, 126, 127, 132], "stabl": [18, 65, 66, 110, 111, 137, 154], "pypi": [18, 20, 154], "mayb": [18, 29, 33, 34, 137, 139], "person": [18, 19], "experi": [18, 138, 140, 154], "avoid": [18, 19, 121, 125, 128, 129, 131, 135, 139], "pip": [18, 153, 1156], "instal": [18, 19, 21, 135, 153, 1156], "abil": [18, 138, 154], "certain": [18, 19, 76, 77, 125, 126, 132, 154], "perhap": [18, 139, 140, 141, 154], "keep": [18, 19, 76, 77, 121, 124, 125, 131, 138, 140, 142], "track": [18, 19], "termin": [18, 19, 21, 73, 76, 77, 78, 79, 131, 137, 140], "run": [18, 21, 45, 46, 90, 91, 120, 123, 124, 125, 128, 135, 137, 138, 139, 140, 141, 142, 153, 154], "command": [18, 21, 1156], "ivy_dev": [18, 19, 21], "name": [18, 19, 21, 63, 64, 108, 109, 121, 122, 125, 126, 132, 135, 137, 139, 140, 142], "3": [18, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 59, 60, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 123, 125, 128, 131, 137, 139, 140, 141, 142, 1156], "8": [18, 21, 23, 26, 27, 41, 42, 53, 54, 55, 56, 59, 60, 65, 66, 73, 78, 79, 86, 87, 90, 91, 94, 95, 98, 99, 100, 101, 104, 105, 110, 111, 123, 125, 131, 136, 140, 1156], "activ": [18, 19, 21, 25, 71, 72, 75, 116, 117, 119, 141, 1156], "setup": [18, 19], "click": [18, 19, 122, 1156], "icon": [18, 19], "side": [18, 19], "choos": [18, 19, 142], "left": [18, 19, 76, 77, 96, 97, 123, 132, 1156], "panel": 18, "select": [18, 19, 125, 137, 139, 142, 154], "drop": [18, 154], "down": [18, 125, 139], "path": [18, 21], "manual": [18, 19, 125, 141], "builtin": [18, 21, 139, 141], "requir": [18, 21, 119, 120, 121, 122, 123, 125, 129, 130, 132, 133, 139, 154], "cmd": [18, 21], "directori": [18, 19, 21, 125, 126], "folder": [18, 19, 21, 119, 124, 125, 127], "file": [18, 19, 21, 76, 77, 119, 122, 125, 127, 128, 130, 131, 135, 137, 140], "abov": [18, 19, 21, 35, 36, 59, 60, 104, 105, 120, 122, 123, 125, 126, 127, 128, 130, 131, 134, 135, 139, 140, 141, 142], "m": [18, 19, 21, 35, 36, 51, 52, 59, 60, 86, 87, 96, 97, 104, 105, 118, 137], "python3": [18, 19, 21], "script": [18, 19, 21, 123, 137, 154], "bat": [18, 19, 21], "OR": [18, 19, 21, 69, 70, 114, 115], "bin": [18, 19, 21], "mac": [18, 19, 21], "linux": [18, 19, 21], "virtualenv": 18, "found": [18, 19, 73, 76, 77, 78, 79, 122, 130, 131, 135], "os": 18, "note": [18, 19, 119, 122, 123, 125, 131, 132], "tick": [18, 19], "abl": [18, 19, 76, 77, 127, 132, 134, 135, 139, 142], "To": [18, 121, 123, 125, 127, 131, 135, 140, 141, 142, 1156], "ivy_test": [18, 19], "test_array_api": [18, 19, 124, 125], "cd": [18, 19, 21], "r": [18, 19, 76, 77], "txt": 18, "visual": [18, 135, 154], "jetbrain": 18, "remot": 18, "mitig": 18, "potenti": [18, 136], "conflict": [18, 19, 140], "addit": [18, 19, 57, 58, 76, 77, 102, 103, 119, 122, 125, 126, 131, 132, 139, 140, 142], "yet": [18, 20, 131, 154], "particular": [18, 19, 119, 121, 123, 125, 132, 134], "system": [18, 19, 154], "instruct": [18, 20], "desktop": 18, "wsl": 18, "powershel": 18, "admin": 18, "visit": [18, 19], "link": [18, 126], "imag": [18, 21, 48, 49, 50, 93, 94, 95, 119, 137, 138, 140, 142, 153, 1156], "profession": 18, "execut": [18, 19, 21, 131, 134, 137, 139, 142, 154], "deploy": 18, "top": [18, 19, 125, 126, 140, 141, 1156], "press": [18, 19, 140, 1156], "ok": 18, "correctli": [18, 76, 77, 96, 97, 120, 125, 131, 132, 135, 141, 154], "caus": [18, 19, 123, 125, 131, 134, 135, 154], "earlier": [18, 19], "might": [18, 19, 119, 125, 129, 132, 137, 139, 140], "necessari": [18, 55, 56, 100, 101, 123, 128, 131, 134], "virtualis": 18, "sudo": 18, "apt": 18, "ca": 18, "certif": 18, "curl": 18, "gnupg": 18, "lsb": 18, "mkdir": 18, "p": [18, 19, 43, 44, 76, 77, 88, 89, 96, 97, 118], "keyr": 18, "fssl": 18, "download": [18, 125], "gpg": 18, "dearmor": 18, "o": [18, 118, 137], "echo": 18, "deb": 18, "arch": 18, "dpkg": 18, "architectur": [18, 142, 154], "lsb_releas": 18, "cs": 18, "tee": 18, "list": [18, 20, 21, 29, 31, 32, 33, 34, 35, 36, 37, 38, 49, 50, 57, 58, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 119, 120, 123, 125, 126, 131, 132, 133, 135, 137, 140, 141, 142, 154, 1156], "dev": [18, 39, 40, 76, 77, 84, 85, 127, 133, 137, 139, 141], "null": 18, "ce": 18, "cli": 18, "containerd": 18, "io": 18, "compos": [18, 125, 131, 154], "plugin": 18, "systemctl": 18, "permiss": 18, "relat": [18, 19, 121, 125, 135, 153], "post": [18, 57, 58, 102, 103, 142, 1156, 1162], "gener": [18, 19, 20, 21, 44, 45, 46, 59, 60, 71, 72, 76, 77, 89, 90, 91, 104, 105, 116, 117, 118, 119, 120, 122, 123, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 153, 154, 1156], "dure": [18, 45, 46, 76, 77, 90, 91, 127, 131, 132, 133, 134, 154], "detect": [18, 76, 77, 120, 125, 131, 135, 140, 141], "its": [18, 20, 21, 37, 38, 55, 56, 82, 83, 100, 101, 121, 122, 125, 126, 135, 142, 154], "simplest": [18, 123, 125], "valu": [18, 19, 23, 24, 25, 26, 27, 35, 36, 41, 42, 43, 44, 45, 46, 49, 50, 55, 56, 57, 58, 59, 60, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 120, 122, 123, 125, 126, 127, 131, 132, 133, 134, 135, 137, 139, 142, 154], "inform": [18, 19, 125, 131, 135], "becaus": [18, 19, 120, 122, 125, 126, 127, 128, 130, 132, 133, 134, 137, 141, 142, 154], "header": [18, 19], "summari": [18, 19, 76, 77, 82, 83, 125], "recommend": [18, 128], "advanc": 18, "bar": 18, "pytest": [18, 19, 125], "checkbox": 18, "q": [18, 19, 154], "fail": [18, 19, 20, 124, 125, 135, 137, 139], "It": [18, 19, 21, 24, 25, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 74, 75, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 122, 123, 125, 126, 128, 130, 131, 132, 134, 137, 139, 140, 141], "headach": 18, "arm": [18, 19], "m1": 18, "instead": [18, 19, 20, 120, 122, 123, 125, 127, 131, 134, 137, 139, 140, 154], "featur": [18, 19, 119, 120, 140, 154, 1156], "vm": 18, "azur": 18, "cloud": [18, 153], "mean": [18, 19, 59, 60, 67, 68, 76, 77, 104, 105, 112, 113, 116, 117, 118, 121, 123, 125, 127, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 1156], "configur": [18, 19, 21, 76, 77, 132], "defin": [18, 20, 119, 120, 122, 125, 132, 139, 141, 154], "dockerfil": [18, 21], "longer": [18, 125, 132, 134], "worri": 18, "platform": 18, "agnost": [18, 120, 130, 137, 139, 142, 154, 1156], "usual": [18, 125, 126], "studio": 18, "favourit": 18, "extens": [18, 19, 122, 125], "theme": 18, "too": [18, 19, 135, 154], "done": [18, 19, 123, 125, 135, 140], "unsupport": [18, 126, 135], "old": [18, 76, 77, 134], "slow": 18, "ipad": 18, "long": [18, 19, 123], "browser": 18, "cool": [18, 119], "requisit": 18, "head": [18, 131, 1156], "pane": [18, 19], "readi": [18, 20], "begin": 18, "outlin": [18, 19, 20, 118, 122, 125, 127, 131, 134, 139], "green": [18, 19, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 1203, 1204], "dropdown": 18, "tab": [18, 140, 1156], "master": [18, 19, 131], "vs": [18, 125], "view": [18, 19], "built": [18, 19, 125, 138], "bottom": 18, "box": 18, "patient": 18, "upto": [18, 19], "15": [18, 41, 42, 59, 60, 80, 81, 104, 105, 123, 125], "minut": 18, "launch": 18, "12": [18, 41, 42, 59, 60, 86, 87, 94, 95, 100, 101, 102, 103, 104, 105, 123, 125, 131], "output": [18, 19, 24, 25, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 118, 119, 120, 122, 123, 125, 127, 130, 131, 133, 134, 137, 139, 141, 142, 154, 1156], "That": [18, 19, 125, 139, 140, 141], "alreadi": [18, 19, 76, 77, 120, 128, 131, 132, 139, 154, 1156], "refer": [18, 19, 69, 70, 114, 115, 120, 125, 126, 127, 132, 154], "approach": [18, 19, 125, 127, 131, 139, 140, 154], "colour": 18, "applic": [18, 132, 133, 141], "good": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 141], "chanc": 18, "vscode": 18, "show": [18, 19, 76, 77, 123, 125, 134, 153, 154, 1156], "explor": [18, 19, 138, 142, 153], "troubleshoot": 18, "sometim": [18, 19, 125], "ever": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "64": [18, 49, 50, 94, 95, 104, 105, 125, 140, 141, 1156], "bit": [18, 123, 125, 127, 131, 139], "usr": 18, "nutshel": [18, 120], "hook": 18, "lint": 18, "accept": [18, 19, 29, 120, 122, 123, 125, 127, 130, 131, 133, 134, 139, 1156], "fix": [18, 19], "attempt": [18, 135, 154], "succe": 18, "problemat": 18, "appli": [18, 19, 20, 23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 120, 121, 122, 123, 125, 127, 129, 131, 132, 133, 134, 137, 139, 140, 141, 142, 152, 154, 1156], "proce": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "modifi": [18, 19, 122, 127, 132, 133, 135, 137], "properli": [18, 118], "enter": [18, 19, 120, 130, 132, 133], "unsur": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "feel": [18, 19, 20, 21, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 1156], "server": [19, 1156], "appropri": [19, 71, 72, 116, 117, 125, 129], "context": [19, 123, 125, 131, 132, 133], "suitabl": [19, 119, 131], "quick": [19, 118, 141], "alwai": [19, 20, 45, 46, 55, 56, 76, 77, 90, 91, 100, 101, 119, 120, 122, 125, 127, 128, 130, 131, 134, 135, 137, 139, 154], "correct": [19, 20, 67, 68, 112, 113, 118, 120, 127, 131, 132, 133, 135, 1156], "tendenc": 19, "land": 19, "end": [19, 131, 134, 136, 153, 154, 1156, 1162], "world": 19, "come": [19, 20, 125, 141, 152, 1156, 1162], "fly": 19, "hard": [19, 139], "receiv": [19, 125, 132, 133], "respons": [19, 21], "internship": 19, "comment": [19, 135], "trigger": 19, "unansw": 19, "label": [19, 53, 54, 98, 99, 137, 138, 142], "respond": 19, "remov": [19, 20, 21, 76, 77, 122, 125, 127, 132, 134, 142], "someon": [19, 154], "els": [19, 20, 59, 60, 104, 105, 119, 121, 127, 128, 134, 137, 139, 141, 142, 154], "strive": [19, 125, 154], "repli": 19, "newli": [19, 125, 134], "place": [19, 35, 36, 55, 56, 76, 77, 80, 81, 100, 101, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 133, 135, 142], "bug": [19, 125], "serv": [19, 120, 125, 127, 130, 131, 136, 1156], "suspect": 19, "behaviour": [19, 120, 122, 125, 126, 130, 131, 134, 139], "observ": 19, "confid": 19, "noth": [19, 76, 77], "wrong": 19, "someth": [19, 119, 140, 141, 154], "bet": 19, "act": [19, 123, 126, 154], "placehold": [19, 120, 130, 135], "sub": [19, 20, 76, 77, 96, 97, 118, 125, 126, 131, 139, 140, 141, 1156], "mark": [19, 125], "ii": 19, "iii": 19, "titl": [19, 1156], "issue_numb": 19, "delet": [19, 21], "No": [19, 137], "wait": [19, 73, 76, 77, 78, 79], "progress": [19, 131, 138, 142], "pr": 19, "soon": [19, 131, 152, 154, 1156, 1162], "partial": [19, 76, 77], "solut": [19, 125, 131], "review": [19, 119], "merg": 19, "everi": [19, 20, 21, 35, 36, 43, 44, 88, 89, 120, 123, 124, 125, 127, 128, 129, 131, 132, 134, 137, 139, 141], "shape": [19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 122, 123, 125, 132, 133, 134, 137, 139, 140, 141, 142, 1156], "move": [19, 76, 77, 119], "within": [19, 29, 33, 34, 125, 141, 154], "7": [19, 21, 23, 26, 27, 41, 42, 45, 46, 49, 50, 53, 54, 55, 56, 59, 60, 65, 66, 73, 78, 79, 86, 87, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 123, 125, 127, 131, 134], "dai": 19, "close": [19, 122, 125], "likewis": [19, 120, 122, 127, 131, 132, 140], "freed": 19, "flag": [19, 45, 46, 76, 77, 90, 91, 132, 134, 139], "purpos": [19, 21, 120, 121, 123, 125, 127, 129, 130, 131, 136, 139, 1156], "remain": [19, 55, 56, 100, 101, 123, 154], "access": [19, 21, 76, 77, 126, 132], "more": [19, 20, 23, 26, 27, 63, 64, 108, 109, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 154, 1156], "short": [19, 141], "basi": [19, 124, 140], "situat": [19, 142], "alloc": [19, 35, 36, 154], "upon": [19, 123, 125, 134, 154], "period": 19, "prevent": [19, 45, 46, 90, 91, 134, 135, 139], "unabl": 19, "obvious": 19, "never": [19, 55, 56, 100, 101, 125, 131], "reflect": [19, 130], "qualiti": 19, "hypothet": 19, "frustrat": 19, "delai": 19, "busi": 19, "fine": [19, 139, 142], "inact": 19, "limit": [19, 73, 76, 77, 78, 79, 123, 125, 135, 137, 140, 142, 154], "me": 19, "unfairli": 19, "definit": [19, 51, 52, 96, 97, 127, 132, 139], "investig": 19, "Then": [19, 21, 121, 126, 139, 154], "practic": 19, "separ": [19, 125, 130, 131, 135, 137, 139, 140], "branch": [19, 131, 154], "simpli": [19, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 120, 122, 123, 125, 126, 127, 130, 131, 133, 134, 137, 141, 142, 154], "role": [19, 126, 138], "kept": [19, 73, 76, 77, 78, 79, 134], "date": 19, "upstream": [19, 124], "base": [19, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 125, 129, 131, 137, 153], "complic": [19, 137], "root": [19, 21, 41, 42, 86, 87, 140], "merge_with_upstream": 19, "sh": 19, "name_of_your_branch": 19, "resolv": 19, "clone": [19, 21, 76, 77], "push": [19, 124, 135], "both": [19, 120, 121, 122, 123, 125, 126, 127, 131, 133, 134, 137, 139, 140, 141, 142, 153, 154], "abort": 19, "tediou": 19, "resolut": 19, "stash": 19, "reinstat": 19, "correspond": [19, 37, 38, 41, 42, 55, 56, 73, 76, 77, 78, 79, 82, 83, 86, 87, 100, 101, 120, 122, 123, 124, 125, 127, 130, 131, 132], "fetch": 19, "uncommit": 19, "unstag": 19, "untrack": 19, "comprehens": 19, "explan": [19, 120, 122, 126, 131, 139], "atlassian": 19, "tutori": [19, 126], "wrote": 19, "piec": [19, 127, 129, 130, 137], "tag": 19, "describ": [19, 125, 138, 142], "navig": [19, 118], "blame": 19, "revis": 19, "author": [19, 1156], "log": [19, 41, 42, 86, 87, 127, 131, 134, 137, 140, 1156], "eg": [19, 125], "16": [19, 51, 52, 59, 60, 86, 87, 104, 105, 123, 125, 140], "5": [19, 21, 23, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 51, 52, 55, 56, 57, 58, 59, 60, 65, 66, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 110, 111, 120, 123, 125, 128, 139, 140, 141], "past": 19, "l": [19, 51, 52, 86, 87, 96, 97, 118], "filepath": [19, 76, 77], "grep": 19, "v": [19, 137, 140, 141, 142, 1156], "commit_id": 19, "handi": [19, 125], "histori": 19, "toggl": 19, "vertic": 19, "highlight": [19, 123], "previou": [19, 120, 125, 126, 142, 154], "shown": [19, 71, 72, 76, 77, 116, 117, 120, 121, 123, 125, 126, 135, 137, 139, 154], "whenev": [19, 125, 139, 140], "think": [19, 123], "gain": [19, 136, 141], "quit": [19, 20, 122, 125, 127, 129, 130], "repeat": [19, 55, 56, 76, 77, 100, 101, 122, 123, 125, 128, 130, 131, 132, 135], "yourself": [19, 20, 125, 153], "simpler": [19, 139], "cannot": [19, 121, 126, 128, 132, 142], "least": [19, 123, 125, 127, 130], "final": [19, 122, 123, 127, 130, 132, 134, 135, 137, 139, 140], "tickbox": 19, "lower": [19, 35, 36, 51, 52, 59, 60, 76, 77, 96, 97, 104, 105, 123, 125, 137, 154], "corner": 19, "without": [19, 76, 77, 119, 120, 121, 123, 126, 127, 130, 131, 133, 135, 137, 139, 140, 141, 153, 154], "detail": [19, 20, 119, 120, 124, 125, 127, 128, 129, 131, 140, 141], "span": 19, "intent": [19, 134], "larg": [19, 140], "discourag": 19, "philosophi": 19, "increment": 19, "frequent": [19, 20], "valuabl": 19, "infrequ": 19, "earli": [19, 1156], "wast": 19, "spot": [19, 127], "mistak": [19, 135], "propos": 19, "mountain": 19, "around": [19, 73, 76, 77, 78, 79, 120, 127, 130, 139, 154], "advoc": [19, 154], "individu": [19, 20, 127], "per": [19, 49, 50, 94, 95, 125, 140], "style": 19, "ve": [19, 136, 139, 1156], "were": [19, 76, 77, 119, 125, 131, 135], "actual": [19, 118, 127, 134, 136, 139, 141, 154], "aim": [19, 136], "part": [19, 35, 36, 119, 124, 125, 127, 137, 138, 142, 153, 154], "subsect": 19, "session": [19, 1156], "block": [19, 125, 127, 135, 136, 138, 142, 154, 1156], "smaller": [19, 55, 56, 100, 101, 137, 142], "edit": 19, "exact": [19, 74, 75, 76, 77, 137], "beauti": 19, "particularli": [19, 125, 140, 154], "concern": [19, 118, 123, 131, 134, 136], "effici": [19, 120, 125, 127, 131, 134, 135, 137, 140, 154], "difficult": [19, 125, 154], "undo": 19, "stress": 19, "frequenc": 19, "advantag": 19, "nifti": 19, "reassur": 19, "isol": 19, "bash": [19, 21], "shell": 19, "rm": 19, "structur": [19, 21, 73, 76, 77, 78, 79, 119, 127, 130, 131, 140, 141], "fact": [19, 125, 140], "mount": 19, "local_path_to_ivi": 19, "overwrit": [19, 76, 77, 134, 137], "subfold": [19, 119, 125], "insid": [19, 21, 119, 125, 131, 132], "wide": [19, 125], "via": [19, 119, 131, 132, 133, 134, 137, 139, 140, 153], "dep": 19, "fresh": 19, "copi": [19, 21, 35, 36, 37, 38, 43, 44, 55, 56, 76, 77, 80, 81, 82, 83, 88, 89, 100, 101, 122, 128, 132, 137, 139, 140, 153, 154], "arsen": 19, "button": 19, "declar": 19, "exec": 19, "rf": 19, "cp": 19, "ivy_contain": 19, "test_ivi": [19, 125], "test_funct": [19, 125], "test_cor": 19, "test_imag": 19, "test_random_crop": 19, "array_api_test": 19, "test_creation_funct": 19, "test_arang": 19, "window": [19, 21, 49, 50, 94, 95], "variou": [19, 120, 122, 129, 153], "cpu": [19, 43, 44, 59, 60, 76, 77, 88, 89, 104, 105, 133, 154], "gpu": [19, 133, 139], "combin": [19, 73, 76, 77, 78, 79, 123, 125, 127, 130, 131, 142], "text": [19, 122], "ctrl": 19, "prompt": [19, 1156], "instanc": [19, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 120, 122, 123, 125, 126, 127, 130, 132, 134, 140, 141, 142, 155, 163], "shift": [19, 55, 56, 80, 81, 100, 101, 120, 123], "whole": 19, "multipli": [19, 41, 42, 86, 87, 123, 128, 130], "cursor": 19, "alt": 19, "j": [19, 86, 87, 118], "locat": [19, 119, 125, 128, 133], "blog": 19, "debug": [19, 125, 131, 140], "breakpoint": 19, "gutter": 19, "caret": 19, "f8": 19, "f9": 19, "toolbar": 19, "method": [19, 20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 122, 123, 125, 126, 127, 130, 135, 137, 138, 141, 142, 154, 1156], "result": [19, 23, 24, 25, 26, 27, 35, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 120, 122, 123, 125, 126, 130, 131, 132, 134, 140, 154, 1156], "Into": 19, "f7": 19, "smart": 19, "sever": [19, 119, 154], "interest": 19, "consol": [19, 139], "store": [19, 76, 77, 122, 128, 130, 131, 137, 139, 140, 141], "variabl": [19, 23, 26, 27, 28, 29, 31, 32, 33, 34, 45, 46, 57, 58, 76, 77, 90, 91, 102, 103, 120, 121, 122, 125, 128, 131, 132, 134, 135, 140, 141, 142, 154, 1156], "fragment": 19, "except": [19, 59, 60, 69, 70, 76, 77, 104, 105, 114, 115, 121, 122, 130, 134, 135, 139, 154], "pychram": 19, "depth": [19, 140, 141, 142, 153], "dummi": 19, "wherein": [19, 125], "evalu": [19, 41, 42, 76, 77, 86, 87, 131], "failur": [19, 124], "wherebi": [20, 131], "broad": 20, "distribut": [20, 53, 54, 59, 60, 76, 77, 98, 99, 104, 105, 125, 133, 154], "across": [20, 76, 77, 96, 97, 120, 123, 125, 127, 131, 132], "todo": 20, "commit": [20, 125], "NOT": 20, "static": [20, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 116, 117, 122, 123, 127, 154], "revers": [20, 23, 26, 27, 73, 78, 79, 122, 123, 142, 154], "resourc": 20, "content": [20, 21, 76, 77, 126, 134, 137, 140], "thei": [20, 76, 77, 118, 119, 123, 125, 127, 129, 131, 132, 133, 134, 135, 139, 140, 141, 142, 154, 1156], "hypothesi": 20, "cover": [20, 122, 123, 125, 127, 129, 136], "lambda": [20, 137, 140], "direct": [20, 126, 141, 142, 153], "bind": [20, 131], "special": [20, 23, 26, 27, 73, 78, 79, 119, 120, 122, 123, 130], "aforement": 20, "categori": [20, 119, 126, 130, 131, 132, 136, 1156], "parent": [20, 139], "arraywithelementwis": [20, 23, 26, 27, 41, 130], "containerwithmanipul": [20, 73, 78, 79, 100], "hint": [20, 119, 120, 122, 127, 130, 134, 135], "docstr": [20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 118, 119, 120, 127, 131, 135], "thorough": [20, 120, 122, 125], "transpil": [20, 126, 136, 138, 1156, 1162], "builder": [21, 152, 154, 1156], "maco": 21, "ubuntu": 21, "uid": 21, "make_docs_without_dock": 21, "rel": [21, 55, 56, 80, 81, 100, 101, 1156], "synchron": 21, "rest": [21, 138, 142], "remove_doc": 21, "_": [21, 41, 42, 86, 87, 122, 125, 131, 134, 139, 140], "indic": [21, 43, 44, 49, 50, 55, 56, 57, 58, 76, 77, 88, 89, 94, 95, 100, 101, 102, 103, 126, 135, 138, 142, 1156], "privat": [21, 125], "fulfil": [21, 136, 1156], "autogenerated_sourc": 21, "format": [21, 76, 77, 118, 122, 132, 133, 137, 139, 140, 1156], "png": [21, 140], "_imag": 21, "lastli": 21, "rst": 21, "skip": [21, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 125], "read": [21, 76, 77, 1156], "partial_sourc": 21, "conf": 21, "create_rst_fil": 21, "filter": [21, 49, 50, 94, 95, 125], "repres": [21, 24, 25, 41, 42, 74, 75, 86, 87, 125, 139], "overal": [21, 122, 131, 132, 133, 142], "markup": 21, "6": [21, 23, 26, 27, 35, 36, 41, 42, 45, 46, 49, 50, 55, 56, 59, 60, 65, 66, 73, 78, 79, 80, 81, 86, 87, 88, 89, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 123, 125, 128, 131, 139, 140, 141], "extract": [21, 119, 121], "get_functions_and_class": 21, "doctr": 21, "readm": [21, 154], "module_nam": 21, "copy_readme_to_rst": 21, "tabl": 21, "toc": 21, "tree": 21, "append": [21, 76, 77, 125, 137, 140], "append_toctree_to_rst": 21, "9": [21, 23, 26, 27, 41, 42, 45, 46, 49, 50, 55, 56, 59, 60, 73, 78, 79, 86, 87, 90, 91, 94, 95, 100, 101, 104, 105, 110, 111, 123, 125, 140, 141], "index": [21, 35, 36, 43, 44, 63, 64, 76, 77, 80, 81, 88, 89, 108, 109, 127, 131, 139], "create_index_rst": 21, "14": [21, 41, 42, 59, 60, 86, 87, 102, 103, 104, 105, 123, 125, 131], "\u03c0": 21, "namespac": [21, 119, 132, 137, 142], "arraywithactiv": [23, 24, 26, 27], "arraywithcr": [23, 26, 27, 35], "arraywithdatatyp": [23, 26, 27, 37], "arraywithdevic": [23, 26, 27, 39, 139], "arraywithgener": [23, 26, 27, 43, 139], "arraywithgradi": [23, 26, 27, 45, 139], "arraywithimag": [23, 26, 27, 47, 139], "arraywithlay": [23, 26, 27, 49], "arraywithlinearalgebra": [23, 26, 27, 51], "arraywithloss": [23, 26, 27, 53], "arraywithmanipul": [23, 26, 27, 55], "arraywithnorm": [23, 26, 27, 57], "arraywithrandom": [23, 26, 27, 59, 139], "arraywithsearch": [23, 26, 27, 61], "arraywithset": [23, 26, 27, 63], "arraywithsort": [23, 26, 27, 65], "arraywithstatist": [23, 26, 27, 67], "arraywithutil": [23, 26, 27, 69], "properti": [23, 26, 27, 76, 77, 123, 125, 127, 131, 139, 140, 141], "__add__": [23, 26, 27, 73, 78, 79, 120, 122, 123, 130, 131, 139], "variant": [23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 122, 123], "wrap": [23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 117, 118, 120, 122, 125, 127, 128, 130, 131, 132, 133, 134, 137, 139, 142, 154, 155, 163], "minim": [23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 122, 134, 137], "self": [23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 130, 131, 137, 139, 140, 141, 142, 1156], "input": [23, 24, 25, 26, 27, 29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 115, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154, 155, 163], "numer": [23, 26, 27, 41, 42, 59, 60, 73, 78, 79, 86, 87, 104, 105, 119, 141], "broadcast": [23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 122, 123, 125, 131, 132], "element": [23, 24, 25, 26, 27, 35, 36, 41, 42, 43, 44, 55, 56, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 100, 101, 108, 109, 122, 125, 137, 142], "wise": [23, 26, 27, 41, 42, 73, 74, 75, 76, 77, 78, 79, 86, 87, 137, 142], "sum": [23, 26, 27, 41, 42, 67, 68, 73, 76, 77, 78, 79, 86, 87, 112, 113, 127, 131, 132, 134, 137], "promot": [23, 24, 25, 26, 27, 37, 38, 41, 42, 51, 52, 73, 74, 75, 78, 79, 82, 83, 86, 87, 96, 97, 122, 127, 132], "y": [23, 24, 25, 26, 27, 35, 36, 37, 38, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 63, 64, 65, 66, 69, 70, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 114, 115, 119, 123, 126, 128, 131, 137, 139], "z": [23, 26, 27, 41, 42, 43, 44, 53, 54, 59, 60, 73, 78, 79, 86, 87, 88, 89, 98, 99, 104, 105, 123, 128, 131, 137, 139], "mix": [23, 26, 27, 37, 38, 41, 42, 43, 44, 73, 78, 79, 82, 83, 86, 87, 98, 99, 104, 105, 118, 123, 125, 137], "__le__": [23, 26, 27], "equal": [23, 26, 27, 35, 36, 41, 42, 43, 44, 59, 60, 76, 77, 86, 87, 88, 89, 104, 105, 123, 131, 132], "bool": [23, 26, 27, 29, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 116, 117, 121, 123, 131, 132, 134, 135, 142], "true": [23, 24, 25, 26, 27, 37, 38, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 125, 126, 127, 131, 132, 134, 135, 137, 139, 140, 141, 142], "__radd__": [23, 26, 27, 73, 78, 79, 122, 123], "dtype": [23, 26, 27, 35, 36, 37, 38, 59, 60, 67, 68, 76, 77, 80, 81, 82, 83, 88, 89, 104, 105, 112, 113, 119, 121, 123, 125, 126, 127, 132, 133, 135, 139, 1156], "is_vari": [23, 26, 27, 45, 46, 90, 91, 134], "boolean": [23, 26, 27, 41, 42, 43, 44, 45, 46, 55, 56, 76, 77, 86, 87, 88, 89, 90, 91, 100, 101, 125, 131], "trainabl": [23, 26, 27, 45, 46, 90, 91, 122, 138, 140, 141], "mt": [23, 26, 27, 139], "ndim": [23, 26, 27, 125, 139], "dimens": [23, 26, 27, 35, 36, 49, 50, 51, 52, 53, 54, 55, 56, 63, 64, 69, 70, 73, 76, 77, 78, 79, 94, 95, 96, 97, 98, 99, 100, 101, 108, 109, 114, 115, 123, 125, 126, 137, 140], "ax": [23, 26, 27, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 96, 97, 100, 101, 114, 115, 119, 123, 125, 132, 139], "size": [23, 26, 27, 55, 56, 73, 76, 77, 78, 79, 96, 97, 100, 101, 125, 139, 140], "product": [23, 26, 27, 41, 42, 131], "unknown": [23, 26, 27], "model": [23, 26, 27, 140, 141, 1156], "abc": [24, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 139], "gelu": [24, 25, 74, 75], "approxim": [24, 25, 74, 75, 122], "185": [24, 25, 74, 75], "046": [24, 25, 74, 75], "leaky_relu": [24, 25, 74, 75, 125, 1156], "alpha": [24, 25, 74, 75, 125, 126], "39": [24, 25, 59, 60, 74, 75, 104, 105], "85": [24, 25, 59, 60, 74, 75, 104, 105], "17": [24, 25, 74, 75, 94, 95, 104, 105, 123, 131], "relu": [24, 25, 71, 72, 74, 75, 140, 141, 1156], "sigmoid": [24, 25, 74, 75, 137, 140, 141, 1156], "269": [24, 25, 74, 75], "731": [24, 25, 74, 75], "881": [24, 25, 41, 42, 74, 75, 86, 87], "softmax": [24, 25, 71, 72, 74, 75, 1156], "axi": [24, 25, 51, 52, 53, 54, 55, 56, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 80, 81, 96, 97, 98, 99, 100, 101, 110, 111, 112, 113, 114, 115, 120, 123, 125, 126, 127, 131, 132, 134, 135, 137, 139, 142, 153], "422": [24, 25, 74, 75], "155": [24, 25, 74, 75], "softplu": [24, 25, 74, 75, 1156], "3461": [24, 25, 74, 75], "6491": [24, 25, 74, 75], "535": [24, 25, 74, 75], "42": [24, 25, 59, 60, 74, 75, 102, 103, 104, 105, 142], "tanh": [24, 25, 41, 42, 74, 75, 86, 87, 137, 1156], "whose": [24, 25, 35, 36, 41, 42, 51, 52, 55, 56, 63, 64, 74, 75, 80, 81, 86, 87, 96, 97, 100, 101, 108, 109, 122, 125], "hyperbol": [24, 25, 41, 42, 74, 75, 86, 87], "angl": [24, 25, 41, 42, 74, 75, 86, 87, 153], "real": [24, 25, 41, 42, 74, 75, 86, 87], "float": [24, 25, 35, 36, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 57, 58, 59, 60, 74, 75, 80, 81, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 102, 103, 104, 105, 120, 121, 122, 125, 127, 131, 132, 134, 139, 141], "tangent": [24, 25, 41, 42, 74, 75, 86, 87, 122], "762": [24, 25, 41, 42, 74, 75, 86, 87], "964": [24, 25, 41, 42, 74, 75, 86, 87], "collect": [29, 76, 77, 125, 153], "args_to_contain": 29, "include_deriv": [29, 30, 31, 32, 33, 34], "args_to_ivi": 29, "keyword": [29, 31, 32, 73, 76, 77, 78, 79, 119, 120, 125, 126, 132, 133, 134, 140], "nest": [29, 31, 32, 33, 34, 73, 76, 77, 78, 79, 119, 125, 127, 130, 131, 139, 140, 141, 154], "unchang": [29, 31, 32, 33, 34], "posit": [29, 31, 32, 41, 42, 51, 52, 55, 56, 86, 87, 96, 97, 100, 101, 120, 125, 126, 140, 153], "deriv": [29, 31, 32, 33, 34, 35, 36, 45, 46, 80, 81, 90, 91, 132, 133, 139, 141], "tupl": [29, 31, 32, 33, 34, 35, 36, 49, 50, 51, 52, 55, 56, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 125, 126, 131, 132, 133, 135, 139, 140, 141, 154], "kei": [29, 31, 32, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 125, 131, 135, 140], "word": [29, 31, 32, 131], "args_to_n": [29, 134, 139], "to_ivi": [29, 76, 77, 139], "leaf": [29, 33, 34, 76, 77, 127, 131, 140], "union": [29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 69, 70, 74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 119, 120, 121, 123, 127, 130, 131, 132, 133, 134, 135, 137, 142], "nativearrai": [29, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 59, 60, 74, 75, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 114, 115, 119, 120, 123, 127, 130, 131, 134, 135, 137, 139, 142, 155, 163], "travers": [29, 33, 34, 76, 77, 131, 137, 139], "lowest": [29, 33, 34, 59, 60, 76, 77, 104, 105, 127, 154], "leav": [29, 33, 34, 73, 76, 77, 78, 79, 120, 122, 123, 125, 127, 131, 132, 134, 140, 141], "to_n": [29, 76, 77], "item": [29, 34, 71, 72, 76, 77, 132, 137, 139, 140, 142, 1156], "asarrai": [35, 36, 125, 134], "nativedtyp": [35, 36, 59, 60, 80, 81, 104, 105, 119, 120, 132, 133], "datatyp": [35, 36, 76, 77, 82, 83], "nativedevic": [35, 36, 39, 40, 59, 60, 80, 81, 104, 105, 119, 120, 132, 133], "interpret": [35, 36], "empty_lik": [35, 36, 80, 81], "uniniti": [35, 36], "from_dlpack": [35, 36, 80, 81], "full_lik": [35, 36, 80, 81, 121], "fill_valu": [35, 36, 80, 81, 121, 132], "scalar": [35, 36, 74, 75, 80, 81, 132, 137, 142, 154], "fill": [35, 36, 59, 60, 76, 77, 80, 81, 104, 105], "int": [35, 36, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 80, 81, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 115, 119, 120, 121, 123, 126, 127, 131, 132, 133, 134, 135, 142], "000123": [35, 36], "ones": [35, 36, 59, 60, 76, 77, 80, 81, 104, 105, 125, 137, 139, 140, 1156], "meshgrid": [35, 36, 80, 81], "xy": [35, 36, 80, 81], "ones_lik": [35, 36, 80, 81, 142, 1156], "tril": [35, 36, 80, 81], "k": [35, 36, 59, 60, 80, 81, 86, 87, 104, 105, 118, 126, 137], "n": [35, 36, 59, 60, 69, 70, 86, 87, 96, 97, 104, 105, 114, 115, 118, 125], "innermost": [35, 36, 51, 52, 96, 97], "mxn": [35, 36], "matric": [35, 36, 51, 52, 96, 97, 153], "diagon": [35, 36, 51, 52, 96, 97], "triangular": [35, 36, 51, 52, 96, 97], "triu": [35, 36, 80, 81], "upper": [35, 36, 51, 52, 59, 60, 76, 77, 96, 97, 104, 105, 125], "zeros_lik": [35, 36, 80, 81, 126, 1156], "creation": [36, 73, 76, 77, 78, 79, 81, 119, 121, 125, 132, 133, 137], "data_typ": [37, 38, 82, 83, 119, 121, 125, 132], "astyp": [37, 38, 49, 50, 82, 83, 94, 95, 126, 132, 134], "broadcast_arrai": [37, 38, 82, 83], "arbitrari": [37, 38, 76, 77, 82, 83, 120, 125, 127, 131, 134, 141, 154], "x1": [37, 38, 41, 42, 43, 44, 82, 83, 86, 87, 88, 89, 96, 97, 120, 123, 126], "x2": [37, 38, 41, 42, 43, 44, 51, 52, 76, 77, 82, 83, 86, 87, 88, 89, 96, 97, 120, 123, 126], "x3": [37, 38], "broadcast_to": [37, 38, 82, 83, 132], "can_cast": [37, 38, 82, 83, 127, 132], "cast": [37, 38, 82, 83, 126, 127, 132, 1156], "occur": [37, 38, 63, 64, 82, 83, 108, 109], "rule": [37, 38, 51, 52, 82, 83, 96, 97, 123, 125, 127, 130, 131, 132, 135], "float32": [37, 38, 49, 50, 82, 83, 88, 89, 94, 95, 123, 125, 132], "float64": [37, 38, 59, 60, 104, 105, 125, 132], "as_n": [37, 38, 39, 40, 82, 83, 84, 85, 132], "finfo": [37, 38, 82, 83], "iinfo": [37, 38, 82, 83, 135], "is_bool_dtyp": [37, 38, 82, 83], "is_float_dtyp": [37, 38, 82, 83, 121], "is_int_dtyp": [37, 38, 82, 83, 121], "is_uint_dtyp": [37, 38, 82, 83, 121], "result_typ": [37, 38, 82, 83, 132], "arrays_and_dtyp": [37, 38, 82, 83], "to_devic": [39, 40, 76, 77, 84, 85], "stream": [39, 40, 84, 85], "ab": [41, 42, 86, 87, 125, 129, 1156], "aco": [41, 42, 86, 87, 1156], "invers": [41, 42, 86, 87, 139, 153], "cosin": [41, 42, 86, 87], "acosh": [41, 42, 86, 87, 1156], "asin": [41, 42, 86, 87, 1156], "sine": [41, 42, 86, 87], "asinh": [41, 42, 86, 87, 1156], "82": [41, 42, 104, 105], "atan": [41, 42, 86, 87, 1156], "atan2": [41, 42, 86, 87, 1156], "coordin": [41, 42, 86, 87], "quotient": [41, 42, 86, 87], "785": [41, 42, 86, 87], "245": [41, 42], "57": [41, 42], "atanh": [41, 42, 86, 87, 1156], "bitwise_and": [41, 42, 86, 87], "integ": [41, 42, 59, 60, 69, 70, 76, 77, 86, 87, 96, 97, 104, 105, 114, 115, 125, 131, 132, 139], "bitwise_invert": [41, 42, 86, 87], "bitiwse_invert": [41, 42], "bitwise_left_shift": [41, 42, 86, 87], "bitwise_or": [41, 42, 86, 87], "bitwise_right_shift": [41, 42, 86, 87], "bitwise_xor": [41, 42, 86, 87], "ceil": [41, 42, 86, 87, 1156], "express": [41, 42, 86, 87, 122, 135, 137, 142], "radian": [41, 42, 86, 87, 122], "54": [41, 42, 86, 87, 102, 103, 104, 105, 123], "416": [41, 42], "99": [41, 42, 104, 105], "cosh": [41, 42, 86, 87, 1156], "76": [41, 42, 74, 75, 86, 87, 104, 105], "23": [41, 42, 59, 60, 80, 81, 86, 87, 104, 105], "03": [41, 42, 86, 87, 104, 105], "81": [41, 42, 104, 105], "divid": [41, 42, 76, 77, 86, 87, 123, 130], "dividend": [41, 42, 86, 87], "divisor": [41, 42, 45, 46, 86, 87, 90, 91], "375": [41, 42], "erf": [41, 42, 86, 87], "exponenti": [41, 42, 86, 87], "gauss": [41, 42, 86, 87], "exp": [41, 42, 86, 87, 1156], "expm1": [41, 42, 86, 87], "244": [41, 42], "918": [41, 42], "48": [41, 42, 104, 105], "147": [41, 42], "floor": [41, 42, 86, 87, 1156], "floor_divid": [41, 42, 86, 87], "13": [41, 42, 49, 50, 59, 60, 88, 89, 94, 95, 104, 105, 123, 125, 131], "greater": [41, 42, 59, 60, 76, 77, 86, 87, 104, 105], "greater_equ": [41, 42, 86, 87], "isfinit": [41, 42, 86, 87, 125], "out_i": [41, 42, 86, 87], "self_i": [41, 42, 86, 87], "finit": [41, 42, 86, 87], "isinf": [41, 42, 86, 87], "neg": [41, 42, 55, 56, 59, 60, 69, 70, 74, 75, 86, 87, 100, 101, 104, 105, 114, 115, 127, 131, 134], "infin": [41, 42, 86, 87, 122], "isnan": [41, 42, 86, 87], "nan": [41, 42, 76, 77, 86, 87, 119, 122, 125], "less_equ": [41, 42, 86, 87], "log10": [41, 42, 86, 87], "logarithm": [41, 42, 86, 87], "log1p": [41, 42, 86, 87], "log2": [41, 42, 86, 87], "logaddexp": [41, 42, 86, 87], "logical_and": [41, 42, 86, 87, 1156], "logical_not": [41, 42, 86, 87, 1156], "logical_or": [41, 42, 86, 87, 1156], "logical_xor": [41, 42, 86, 87], "not_equ": [41, 42, 86, 87], "pow": [41, 42, 86, 87], "expon": [41, 42], "remaind": [41, 42, 76, 77, 86, 87], "respect": [41, 42, 45, 46, 86, 87, 90, 91, 120, 121, 123, 125, 130, 131, 132, 135], "x2_i": [41, 42, 86, 87], "11": [41, 42, 45, 46, 49, 50, 59, 60, 73, 78, 79, 86, 87, 94, 95, 100, 101, 104, 105, 123, 125, 131], "18": [41, 42, 59, 60, 86, 87, 104, 105, 123, 131], "94": [41, 42, 59, 60, 86, 87, 104, 105], "256": [41, 42], "0001": [41, 42], "36": [41, 42], "67": [41, 42, 86, 87, 104, 105, 131], "45": [41, 42, 86, 87, 104, 105, 125], "24": [41, 42, 94, 95, 102, 103, 104, 105], "678": [41, 42], "32": [41, 42, 45, 46, 59, 60, 104, 105, 125, 140], "sin": [41, 42, 86, 87, 130, 137, 1156], "841": [41, 42, 86, 87], "909": [41, 42, 86, 87], "141": [41, 42, 86, 87], "sinh": [41, 42, 86, 87, 1156], "63": [41, 42, 45, 46, 86, 87, 96, 97], "232": [41, 42, 86, 87], "51": [41, 42, 104, 105], "sqrt": [41, 42, 86, 87], "squar": [41, 42, 51, 52, 86, 87, 96, 97, 125], "subtract": [41, 42, 86, 87, 123, 130], "tan": [41, 42, 86, 87, 120, 122, 126, 127, 131, 134, 137, 1156], "56": [41, 42, 59, 60, 86, 87, 123], "19": [41, 42, 59, 60, 86, 87, 104, 105, 123], "trunc": [41, 42, 86, 87], "elementwis": [42, 76, 77, 87, 119, 127, 137, 142], "all_equ": [43, 44, 88, 89], "equality_matrix": [43, 44, 88, 89], "compar": [43, 44, 76, 77, 88, 89, 125, 135, 140], "matrix": [43, 44, 51, 52, 76, 77, 88, 89, 96, 97], "clip_vector_norm": [43, 44, 88, 89], "max_norm": [43, 44, 88, 89], "maximum": [43, 44, 55, 56, 73, 76, 77, 78, 79, 88, 89, 100, 101, 123, 137, 140, 142, 1156], "norm": [43, 44, 58, 76, 77, 88, 89, 96, 97, 103, 119, 1156], "vector": [43, 44, 76, 77, 88, 89, 96, 97, 153], "downscal": [43, 44, 88, 89], "max": [43, 44, 67, 68, 76, 77, 88, 89, 112, 113], "894": [43, 44, 88, 89], "79": [43, 44, 88, 89, 104, 105], "gather_nd": [43, 44, 76, 77, 88, 89, 1156], "gather": [43, 44, 76, 77, 88, 89], "cuda": [43, 44, 59, 60, 76, 77, 88, 89, 104, 105, 137, 140, 154], "to_numpi": [43, 44, 76, 77, 88, 89, 140, 1156], "adam_step": [45, 46, 90, 91], "mw": [45, 46, 90, 91, 141], "vw": [45, 46, 90, 91, 141], "beta1": [45, 46, 90, 91, 141], "beta2": [45, 46, 90, 91, 141], "999": [45, 46, 74, 75, 86, 87, 90, 91, 141], "epsilon": [45, 46, 53, 54, 57, 58, 90, 91, 98, 99, 102, 103, 127, 131, 134, 141], "1e": [45, 46, 53, 54, 57, 58, 90, 91, 98, 99, 102, 103, 127, 131, 134, 141, 142, 1156], "07": [45, 46, 53, 54, 86, 87, 90, 91, 98, 99, 104, 105, 141], "cost": [45, 46, 90, 91], "weight": [45, 46, 90, 91, 127, 131, 141, 142], "ws": [45, 46, 90, 91], "dc": [45, 46, 90, 91], "dw": [45, 46, 90, 91], "w": [45, 46, 49, 50, 76, 77, 86, 87, 90, 91, 94, 95, 137, 140, 141], "averag": [45, 46, 90, 91], "moment": [45, 46, 90, 91, 128, 154], "forget": [45, 46, 90, 91], "adam": [45, 46, 90, 91, 140, 141, 142, 1156], "divis": [45, 46, 90, 91, 127], "delta": [45, 46, 90, 91], "dcdw": [45, 46, 90, 91], "adam_step_delta": [45, 46, 90, 91], "639": [45, 46], "00121": [45, 46], "0102": [45, 46], "0397": [45, 46], "exclus": [45, 46, 76, 77, 90, 91, 125, 127, 131, 142], "is_var": [45, 46, 90, 91], "gradient": [46, 76, 77, 91, 119, 131, 140, 141, 153, 154, 1156], "conv1d": [49, 50, 94, 95], "stride": [49, 50, 94, 95], "pad": [49, 50, 94, 95], "data_format": [49, 50, 94, 95], "nwc": [49, 50, 94, 95], "dilat": [49, 50, 94, 95], "batch_siz": [49, 50, 94, 95, 140], "d_in": [49, 50, 94, 95], "convolut": [49, 50, 94, 95], "fw": [49, 50, 94, 95, 125], "d_out": [49, 50, 94, 95], "slide": [49, 50, 94, 95], "valid": [49, 50, 69, 70, 94, 95, 114, 115, 125, 126, 132, 137], "algorithm": [49, 50, 74, 75, 94, 95, 154], "ncw": [49, 50, 94, 95], "wio": [49, 50], "20": [49, 50, 59, 60, 86, 87, 104, 105, 139], "depthwise_conv2d": [49, 50, 94, 95, 1156], "nhwc": [49, 50, 94, 95], "h": [49, 50, 94, 95, 118, 131], "fh": [49, 50, 94, 95], "nchw": [49, 50, 94, 95], "randint": [49, 50, 59, 60, 94, 95, 104, 105, 1156], "255": [49, 50, 94, 95], "128": [49, 50, 94, 95], "random_norm": [49, 50, 59, 60, 94, 95, 104, 105, 125], "linear_algebra": [51, 52, 96, 97, 119, 139], "choleski": [51, 52, 96, 97], "symmetr": [51, 52, 96, 97, 131], "u": [51, 52, 96, 97], "625": [51, 52], "25": [51, 52, 53, 54, 59, 60, 86, 87, 94, 95, 102, 103, 104, 105, 131], "cross": [51, 52, 53, 54, 96, 97, 98, 99, 1156], "det": [51, 52, 96, 97], "offset": [51, 52, 57, 58, 96, 97, 102, 103], "axis1": [51, 52, 55, 56, 96, 97, 100, 101], "axis2": [51, 52, 96, 97], "eigh": [51, 52, 96, 97], "namedtupl": [51, 52, 63, 64, 96, 97, 108, 109], "eigvalsh": [51, 52], "inv": [51, 52, 96, 97, 139, 1156], "matmul": [51, 52, 96, 97, 119, 125, 128, 137, 1156], "matrix_norm": [51, 52, 76, 77, 96, 97], "ord": [51, 52, 76, 77, 96, 97], "fro": [51, 52, 96, 97], "keepdim": [51, 52, 67, 68, 69, 70, 76, 77, 96, 97, 112, 113, 114, 115, 135], "matrix_rank": [51, 52, 96, 97], "rtol": [51, 52, 96, 97], "matrix_transpos": [51, 52, 96, 97, 139], "outer": [51, 52, 96, 97], "pinv": [51, 52, 1156], "qr": [51, 52, 96, 97], "reduc": [51, 52, 69, 70, 76, 77, 96, 97, 114, 115, 139], "solv": [51, 52, 96, 97, 138, 153], "svd": [51, 52, 96, 97, 1156], "full_matric": [51, 52, 96, 97], "svdval": [51, 52, 96, 97], "tensordot": [51, 52, 96, 97], "trace": [51, 52, 76, 77, 96, 97, 137, 154], "vecdot": [51, 52, 96, 97], "vector_norm": [51, 52, 76, 77, 96, 97], "vector_to_skew_symmetric_matrix": [51, 52, 96, 97, 1156], "binary_cross_entropi": [53, 54, 98, 99], "pred": [53, 54, 98, 99, 127, 131, 134], "predict": [53, 54, 98, 99], "amount": [53, 54, 98, 99, 133], "smooth": [53, 54, 98, 99], "binari": [53, 54, 98, 99], "entropi": [53, 54, 98, 99], "357": [53, 54, 98, 99], "223": [53, 54, 98, 99], "cross_entropi": [53, 54, 98, 99, 127, 131, 134], "along": [53, 54, 55, 56, 69, 70, 74, 75, 76, 77, 96, 97, 98, 99, 100, 101, 114, 115, 119, 134], "3862944": [53, 54], "sparse_cross_entropi": [53, 54, 98, 99], "logit": [53, 54, 98, 99], "spars": [53, 54, 98, 99], "loss": [54, 99, 119, 127, 140, 141, 142, 1156], "clip": [55, 56, 76, 77, 100, 101, 127, 131, 134, 137, 140, 142, 1156], "x_min": [55, 56, 76, 77, 100, 101, 137, 142], "x_max": [55, 56, 76, 77, 100, 101, 137, 142], "roll": [55, 56, 100, 101, 120, 131], "minimum": [55, 56, 76, 77, 100, 101, 137, 142, 1156], "concat": [55, 56, 76, 77, 100, 101, 126, 1156], "xs": [55, 56, 90, 91, 100, 101, 131], "constant_pad": [55, 56, 100, 101], "pad_width": [55, 56, 100, 101], "expand_dim": [55, 56, 100, 101, 137, 140, 1156], "flip": [55, 56, 100, 101, 139, 140, 142, 1156], "permute_dim": [55, 56, 100, 101], "reshap": [55, 56, 76, 77, 100, 101, 125, 134, 137, 139, 142, 1156], "nativeshap": [55, 56, 59, 60, 100, 101, 104, 105], "One": [55, 56, 59, 60, 76, 77, 100, 101, 104, 105, 125, 132, 137, 139, 140], "length": [55, 56, 73, 76, 77, 78, 79, 100, 101, 125, 135, 140], "valueerror": [55, 56, 100, 101, 137], "reus": [55, 56, 100, 101, 125], "memori": [55, 56, 100, 101, 133, 134, 152, 154, 1156], "buffer": [55, 56, 100, 101, 154], "sequenc": [55, 56, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 123, 125, 126, 132, 135, 153], "larger": [55, 56, 100, 101, 125, 137, 142], "flatten": [55, 56, 63, 64, 76, 77, 96, 97, 100, 101, 108, 109], "restor": [55, 56, 100, 101], "squeez": [55, 56, 100, 101, 1156], "stack": [55, 56, 76, 77, 100, 101, 137, 1156], "swapax": [55, 56, 100, 101], "axis0": [55, 56, 100, 101], "tile": [55, 56, 100, 101, 1156], "rep": [55, 56, 100, 101], "zero_pad": [55, 56, 100, 101, 1156], "layer_norm": [57, 58, 102, 103], "normalized_idx": [57, 58, 102, 103], "05": [57, 58, 102, 103, 125], "scale": [57, 58, 102, 103, 126, 131], "new_std": [57, 58, 102, 103], "normal": [57, 58, 59, 60, 102, 103, 104, 105, 140], "small": [57, 58, 102, 103, 123, 127, 137, 141, 154], "constant": [57, 58, 102, 103, 119, 127, 141, 142, 154, 1170], "denomin": [57, 58, 102, 103, 127, 154], "_min_bas": [57, 58, 102, 103], "learnabl": [57, 58, 102, 103, 142], "gamma": [57, 58, 102, 103], "beta": [57, 58, 102, 103], "after": [57, 58, 76, 77, 102, 103, 123, 125, 126, 131, 132, 136], "0976": [57, 58], "3452": [57, 58], "2740": [57, 58], "1047": [57, 58], "5886": [57, 58], "2732": [57, 58], "7696": [57, 58], "7024": [57, 58], "2518": [57, 58], "001": [57, 58, 140, 141], "576": [57, 58], "292": [57, 58], "33": [57, 58, 59, 60, 86, 87, 88, 89], "581": [57, 58], "891": [57, 58], "01": [57, 58, 104, 105, 142], "579": [57, 58], "931": [57, 58], "drawn": [59, 60, 104, 105, 125], "highest": [59, 60, 104, 105], "sampl": [59, 60, 104, 105, 125], "low": [59, 60, 76, 77, 104, 105, 137], "uniform": [59, 60, 76, 77, 104, 105, 141, 1176], "half": [59, 60, 104, 105], "interv": [59, 60, 69, 70, 76, 77, 104, 105, 114, 115, 137, 142], "int8": [59, 60, 104, 105, 125, 132], "int16": [59, 60, 104, 105, 125, 132], "int64": [59, 60, 82, 83, 104, 105, 125, 132], "98": [59, 60, 86, 87, 104, 105], "46": [59, 60, 104, 105], "int32": [59, 60, 82, 83, 88, 89, 104, 105, 125, 132], "std": [59, 60, 67, 68, 104, 105, 112, 113, 123], "non": [59, 60, 69, 70, 104, 105, 114, 115, 123, 131, 132, 137], "parameter": [59, 60, 104, 105], "44": [59, 60, 104, 105], "72": [59, 60], "235": [59, 60], "27": [59, 60, 104, 105], "22": [59, 60, 104, 105, 131], "float16": [59, 60, 104, 105, 125, 126, 132], "26": [59, 60, 104, 105], "49": [59, 60], "02": [59, 60, 86, 87, 104, 105], "95": [59, 60, 104, 105], "807": [59, 60], "21": [59, 60, 86, 87, 104, 105], "random_uniform": [59, 60, 104, 105, 125, 133, 141, 1156], "boundari": [59, 60, 76, 77, 104, 105], "86": [59, 60, 104, 105], "89": [59, 60, 104, 105, 125], "06": [59, 60, 86, 87, 125], "47": [59, 60, 104, 105], "53": [59, 60, 86, 87], "random": [60, 76, 77, 105, 119, 133, 142, 153, 1156], "unique_al": [63, 64, 108, 109], "unique_count": [63, 64, 108, 109], "count": [63, 64, 69, 70, 108, 109, 114, 115, 123, 140], "field": [63, 64, 108, 109, 153], "uc": [63, 64], "unique_invers": [63, 64, 108, 109], "unique_valu": [63, 64, 108, 109], "argsort": [65, 66, 110, 111], "descend": [65, 66, 110, 111], "sort": [66, 73, 76, 77, 78, 79, 111, 119], "einsum": [67, 68, 112, 113], "equat": [67, 68, 112, 113], "min": [67, 68, 76, 77, 112, 113], "prod": [67, 68, 76, 77, 112, 113, 123, 132], "var": [67, 68, 112, 113, 116, 117, 123, 137], "statist": [68, 113, 116, 117, 119, 125, 132], "logic": [69, 70, 114, 115, 125, 129, 130, 132, 133, 139, 1156], "AND": [69, 70, 114, 115], "reduct": [69, 70, 76, 77, 114, 115, 125, 132, 139, 1156], "By": [69, 70, 114, 115, 123, 126, 127, 131, 134, 141, 142], "rank": [69, 70, 114, 115], "backward": [69, 70, 114, 115, 154], "invalid": [69, 70, 114, 115, 126, 132, 135], "singleton": [69, 70, 114, 115], "accordingli": [69, 70, 114, 115, 126, 135], "dimension": [69, 70, 76, 77, 114, 115], "util": [70, 115, 119, 133], "add_ivy_array_instance_method": 71, "cl": [71, 72, 116, 117], "to_ignor": [71, 72, 116, 117], "loop": [71, 72, 116, 117, 128, 135, 154], "_wrap_funct": [71, 72, 116, 117, 127, 129], "toi": [71, 72, 116, 117], "arrayexampl": [71, 72], "hasattr": [71, 72, 116, 117, 121, 139], "dict_in": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "queue": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140], "queue_load_s": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "container_combine_method": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "list_join": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "queue_timeout": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_limit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "key_length_limit": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_ind": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "print_line_spac": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "ivyh": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "default_key_color": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "keyword_color_dict": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "rebuild_child_contain": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "types_to_iteratively_nest": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "alphabetical_kei": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "containerwithactiv": [73, 74, 78, 79], "containerwithcr": [73, 78, 79, 80], "containerwithdatatyp": [73, 78, 79, 82], "containerwithdevic": [73, 78, 79, 84], "containerwithelementwis": [73, 78, 79, 86, 131], "containerwithgener": [73, 78, 79, 88], "containerwithgradi": [73, 78, 79, 90], "containerwithimag": [73, 78, 79, 92], "containerwithlay": [73, 78, 79, 94], "containerwithlinearalgebra": [73, 78, 79, 96], "containerwithloss": [73, 78, 79, 98], "containerwithnorm": [73, 78, 79, 102], "containerwithrandom": [73, 78, 79, 104], "containerwithsearch": [73, 78, 79, 106], "containerwithset": [73, 78, 79, 108], "containerwithsort": [73, 78, 79, 110], "containerwithstatist": [73, 78, 79, 112], "containerwithutil": [73, 78, 79, 114], "object": [73, 76, 77, 78, 79, 96, 97, 125, 139, 142], "represent": [73, 76, 77, 78, 79, 153], "dictionari": [73, 76, 77, 78, 79, 140, 154], "multiprocess": [73, 76, 77, 78, 79, 140, 154], "asynchron": [73, 76, 77, 78, 79], "arriv": [73, 76, 77, 78, 79], "timeout": [73, 76, 77, 78, 79], "whitespac": [73, 76, 77, 78, 79], "indent": [73, 76, 77, 78, 79, 140], "extra": [73, 76, 77, 78, 79, 123, 125, 126, 129, 130, 137], "newlin": [73, 76, 77, 78, 79, 122], "handl": [73, 76, 77, 78, 79, 118, 120, 125, 126, 127, 129, 131, 132, 133, 134, 141], "color": [73, 76, 77, 78, 79, 1203, 1204], "map": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 120, 125, 127, 131, 140, 153, 154], "termcolor": [73, 76, 77, 78, 79], "rebuild": [73, 76, 77, 78, 79], "constructor": [73, 76, 77, 78, 79, 132, 133, 139], "param": [73, 76, 77, 78, 79, 88, 89, 137, 142], "alphabet": [73, 76, 77, 78, 79], "preserv": [73, 76, 77, 78, 79, 125, 142, 154], "containerbas": [74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 131], "key_chain": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115], "to_appli": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115], "prune_unappli": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115], "map_sequ": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115], "formul": [74, 75], "chain": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115, 130, 131, 141, 142, 154], "prune": [74, 75, 76, 77, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 114, 115], "unit": [74, 75, 124, 125, 154], "slope": [74, 75], "leaki": [74, 75], "rectifi": [74, 75], "linear": [74, 75, 122, 137, 140, 141, 142, 1156], "static_gelu": [74, 75], "static_leaky_relu": [74, 75], "static_relu": [74, 75], "static_sigmoid": [74, 75], "static_softmax": [74, 75], "static_softplu": [74, 75], "static_tanh": [74, 75, 86, 87], "96": [74, 75, 86, 87, 104, 105], "995": [74, 75, 86, 87], "9999": [74, 75, 86, 87], "__getitem__": [76, 77, 131], "queri": [76, 77, 131, 132, 139], "slice": [76, 77], "__setitem__": [76, 77, 130, 131, 139], "val": [76, 77, 134, 139], "all_fals": [76, 77], "assert_is_bool": [76, 77], "entri": [76, 77], "assert": [76, 77, 121, 125, 135, 139, 140], "all_key_chain": [76, 77], "include_empti": [76, 77], "all_tru": [76, 77, 131, 140], "arrays_as_list": [76, 77], "intermedi": [76, 77], "as_arrai": [76, 77], "as_bool": [76, 77], "as_random_uniform": [76, 77], "as_vari": [76, 77, 125], "as_zero": [76, 77], "assert_contains_sub_contain": [76, 77], "sub_cont": [76, 77], "diff": [76, 77, 131, 140], "screen": [76, 77, 140], "assert_contains_sub_structur": [76, 77], "check_shap": [76, 77], "assert_ident": [76, 77], "check_typ": [76, 77], "same_arrai": [76, 77, 140], "arrays_equ": [76, 77], "assert_identical_structur": [76, 77], "at_key_chain": [76, 77], "ignore_key_error": [76, 77], "ignore_non": [76, 77], "at_kei": [76, 77], "ignor": [76, 77, 123, 125, 154], "substr": [76, 77], "clip_min": [76, 77], "clip_max": [76, 77], "config": [76, 77, 140], "duplic": [76, 77, 122, 128, 129, 135, 139, 141], "container_rightmost": [76, 77], "common_key_chain": [76, 77, 131], "contains_sub_contain": [76, 77], "match": [76, 77, 131], "contains_sub_structur": [76, 77], "create_if_abs": [76, 77], "inplac": [76, 77, 90, 91, 118, 120, 123, 129, 130, 139, 141], "cutoff_at_depth": [76, 77], "depth_cutoff": [76, 77], "cutoff_at_height": [76, 77], "height_cutoff": [76, 77], "deep_copi": [76, 77, 140], "intern": [76, 77, 122, 125, 130, 131, 133, 134], "belong": [76, 77, 141], "dev_clon": [76, 77], "dev_dist": [76, 77], "dev_str": [76, 77], "diff_kei": [76, 77], "detect_key_diff": [76, 77], "detect_value_diff": [76, 77], "detect_shape_diff": [76, 77], "treat": [76, 77, 125, 138, 142], "container0": [76, 77], "einops_rearrang": [76, 77], "axes_length": [76, 77], "rearrang": [76, 77], "einops_reduc": [76, 77], "callabl": [76, 77, 121, 125, 131, 137, 155, 156, 157, 158, 159, 160, 161, 162, 163], "einops_repeat": [76, 77], "find_sub_contain": [76, 77], "sub_cont_to_find": [76, 77], "exsit": [76, 77], "find_sub_structur": [76, 77], "sub_struc_to_find": [76, 77], "flatten_key_chain": [76, 77, 140], "__": [76, 77, 123, 140], "above_height": [76, 77, 140], "below_depth": [76, 77, 140], "format_key_chain": [76, 77], "format_fn": [76, 77], "string": [76, 77, 128, 132, 133, 135, 137, 140], "from_disk_as_hdf5": [76, 77, 140], "h5_obj_or_filepath": [76, 77], "slice_obj": [76, 77], "load": [76, 77, 154], "disk": [76, 77, 140], "h5py": [76, 77], "hdf5": [76, 77, 140], "h5": [76, 77], "from_disk_as_json": [76, 77, 140], "json_filepath": [76, 77], "json": [76, 77, 140], "from_disk_as_pickl": [76, 77, 140], "pickle_filepath": [76, 77], "pickl": [76, 77, 131, 140], "from_flat_list": [76, 77], "flat_list": [76, 77], "hierarchi": [76, 77, 140], "flat": [76, 77], "popul": [76, 77, 125, 132, 133, 137], "from_numpi": [76, 77, 140], "h5_file_s": [76, 77], "batch": [76, 77, 127, 131, 140], "handle_inplac": [76, 77], "prime": [76, 77], "overwritten": [76, 77, 128, 130], "has_kei": [76, 77], "query_kei": [76, 77], "somewher": [76, 77], "has_key_chain": [76, 77], "has_nan": [76, 77], "include_inf": [76, 77], "leafwis": [76, 77], "well": [76, 77, 125, 126, 134, 141, 142, 153], "inf": [76, 77, 96, 97, 125], "identical_array_shap": [76, 77], "identical_config": [76, 77], "identical_structur": [76, 77], "if_exist": [76, 77], "inplace_upd": [76, 77, 134], "key_chains_contain": [76, 77], "sub_str": [76, 77], "join": [76, 77, 1156], "list_stack": [76, 77, 140], "dim": [76, 77, 126, 132], "func": [76, 77, 90, 91, 131], "map_cont": [76, 77], "include_self": [76, 77], "possibi": [76, 77], "max_depth": [76, 77], "multi_map": [76, 77, 131], "map_nest": [76, 77, 96, 97, 100, 101], "leftmost": [76, 77], "multi_map_in_static_method": [76, 77, 131], "fn_name": [76, 77], "num_arrai": [76, 77, 125], "overwrite_at_key_chain": [76, 77], "target_dict": [76, 77], "return_dict": [76, 77], "prune_empti": [76, 77], "keep_non": [76, 77], "empti": [76, 77, 130, 132, 133], "prune_key_chain": [76, 77], "key1": [76, 77, 141], "key2": [76, 77], "key3": [76, 77], "prune_key_from_key_chain": [76, 77], "prune_kei": [76, 77], "prune_keys_from_key_chain": [76, 77], "remove_key_length_limit": [76, 77], "remove_print_limit": [76, 77], "reshape_lik": [76, 77], "leading_shap": [76, 77], "return_cont": [76, 77], "restructur": [76, 77], "keep_orig": [76, 77], "transpos": [76, 77, 139, 142, 1156], "restructure_key_chain": [76, 77], "keychain_map": [76, 77], "set_at_key_chain": [76, 77], "set_at_kei": [76, 77], "set_framework": [76, 77, 137, 139, 140, 142], "set_ivy_backend": [76, 77], "ivy_backend": [76, 77], "attribut": [76, 77, 121, 122, 126, 131, 132, 138, 139, 140, 141], "show_sub_contain": [76, 77], "sub_cont_or_keychain": [76, 77], "shuffl": [76, 77, 1156], "seed_valu": [76, 77], "seed": [76, 77, 1156], "shuffle_h5_fil": [76, 77], "dataset": [76, 77, 140, 152, 1156], "size_ordered_arrai": [76, 77], "keychain": [76, 77], "smallest": [76, 77], "largest": [76, 77, 153], "slice_kei": [76, 77], "key_slic": [76, 77], "all_depth": [76, 77], "slice_via_kei": [76, 77], "sort_by_kei": [76, 77], "num_or_size_split": [76, 77, 137], "with_remaind": [76, 77], "constitu": [76, 77, 142], "evenli": [76, 77], "stop_gradi": [76, 77, 90, 91, 141, 1156], "preserve_typ": [76, 77], "stop": [76, 77, 80, 81, 137, 154], "structural_diff": [76, 77], "target": [76, 77, 118, 136, 140, 141, 142, 1156], "to_dict": [76, 77], "to_disk_as_hdf5": [76, 77, 140], "starting_index": [76, 77], "max_batch_s": [76, 77], "later": [76, 77, 125], "to_disk_as_json": [76, 77, 140], "to_disk_as_pickl": [76, 77, 140], "to_flat_list": [76, 77], "to_iter": [76, 77, 131], "leaf_keys_onli": [76, 77], "to_iterator_kei": [76, 77], "to_iterator_valu": [76, 77], "to_json": [76, 77], "to_list": [76, 77, 1156], "update_backend": [76, 77], "to_raw": [76, 77], "raw": [76, 77, 122], "trim_kei": [76, 77], "max_length": [76, 77], "try_kc": [76, 77], "tri": [76, 77], "concatten": [76, 77, 96, 97], "unstack": [76, 77, 131, 137, 140, 1156], "dim_siz": [76, 77], "update_config": [76, 77], "global_norm": [76, 77, 96, 97], "with_default_key_color": [76, 77], "with_entries_as_list": [76, 77], "with_ivy_backend": [76, 77], "with_key_length_limit": [76, 77, 140], "with_print_ind": [76, 77, 140], "with_print_limit": [76, 77, 140], "with_print_line_spac": [76, 77], "2324": [80, 81], "234": [80, 81], "123": [80, 81, 125], "static_arang": [80, 81], "static_asarrai": [80, 81], "static_empty_lik": [80, 81], "static_ey": [80, 81], "n_row": [80, 81], "n_col": [80, 81], "static_from_dlpack": [80, 81], "static_full_lik": [80, 81], "static_linspac": [80, 81], "num": [80, 81, 137], "endpoint": [80, 81], "static_logspac": [80, 81], "static_meshgrid": [80, 81], "static_native_arrai": [80, 81], "static_on": [80, 81], "static_ones_lik": [80, 81], "static_tril": [80, 81], "static_triu": [80, 81], "static_zero": [80, 81], "static_zeros_lik": [80, 81], "broadcats": [82, 83], "static_astyp": [82, 83], "static_broadcast_arrai": [82, 83], "And": [82, 83], "static_broadcast_to": [82, 83], "static_can_cast": [82, 83], "from_": [82, 83], "static_default_float_dtyp": [82, 83], "float_dtyp": [82, 83], "static_dtyp": [82, 83], "static_finfo": [82, 83], "static_function_supported_dtyp": [82, 83], "fn": [82, 83, 121, 137, 139, 155, 156, 157, 158, 159, 160, 161, 162, 163], "static_function_unsupported_dtyp": [82, 83], "static_iinfo": [82, 83], "static_is_bool_dtyp": [82, 83], "dtype_in": [82, 83], "static_is_float_dtyp": [82, 83], "static_is_int_dtyp": [82, 83], "static_is_uint_dtyp": [82, 83], "static_result_typ": [82, 83], "static_dev": [84, 85], "static_to_devic": [84, 85], "61": [86, 87, 98, 99, 104, 105], "915": [86, 87], "29": [86, 87, 104, 105], "983": [86, 87], "75": [86, 87, 94, 95, 104, 105], "35": [86, 87, 104, 105], "978": [86, 87], "696": [86, 87, 104, 105], "993": [86, 87], "34": [86, 87, 104, 105], "52": [86, 87, 104, 105], "333": [86, 87], "thefunct": [86, 87], "649": [86, 87], "220": [86, 87], "959": [86, 87], "865": [86, 87], "metho": [86, 87], "300": [86, 87, 125], "527": [86, 87], "301": [86, 87], "757": [86, 87], "279": [86, 87], "37": [86, 87], "835": [86, 87], "347": [86, 87], "721": [86, 87], "static_ab": [86, 87], "static_aco": [86, 87], "static_acosh": [86, 87], "static_add": [86, 87, 122, 123, 131], "static_asin": [86, 87], "static_asinh": [86, 87], "97": [86, 87, 104, 105], "static_atan": [86, 87], "static_atan2": [86, 87], "static_atanh": [86, 87], "static_bitwise_and": [86, 87], "static_bitwise_invert": [86, 87], "static_bitwise_left_shift": [86, 87], "static_bitwise_or": [86, 87], "static_bitwise_right_shift": [86, 87], "static_bitwise_xor": [86, 87], "static_ceil": [86, 87], "static_co": [86, 87], "static_cosh": [86, 87], "static_divid": [86, 87, 131], "static_equ": [86, 87], "static_erf": [86, 87], "static_exp": [86, 87], "static_expm1": [86, 87], "areal": [86, 87], "static_floor": [86, 87], "static_floor_divid": [86, 87], "static_great": [86, 87], "static_greater_equ": [86, 87], "static_isfinit": [86, 87], "x_i": [86, 87, 122], "static_isinf": [86, 87], "static_isnan": [86, 87], "static_less": [86, 87], "static_less_equ": [86, 87], "static_log": [86, 87], "static_log10": [86, 87], "static_log1p": [86, 87], "static_log2": [86, 87], "static_logaddexp": [86, 87], "static_logical_and": [86, 87], "static_logical_not": [86, 87], "static_logical_or": [86, 87], "static_logical_xor": [86, 87], "static_multipli": [86, 87, 131], "static_neg": [86, 87], "static_not_equ": [86, 87], "static_posit": [86, 87], "static_pow": [86, 87], "static_remaind": [86, 87], "static_round": [86, 87], "thevfunct": [86, 87], "static_sign": [86, 87], "static_sin": [86, 87], "static_sinh": [86, 87], "static_sqrt": [86, 87], "static_squar": [86, 87], "static_subtract": [86, 87, 131], "static_tan": [86, 87, 123, 131], "143": [86, 87, 123], "38": [86, 87, 104, 105, 123], "static_trunc": [86, 87], "static_all_equ": [88, 89], "667": [88, 89], "833": [88, 89], "static_clip_vector_norm": [88, 89], "849": [88, 89], "41": [88, 89, 96, 97, 139], "static_gather_nd": [88, 89], "static_to_numpi": [88, 89], "adam_upd": [90, 91, 141], "lr": [90, 91, 140, 141], "mw_tm1": [90, 91], "vw_tm1": [90, 91], "gradient_descent_upd": [90, 91, 1156], "lamb_upd": [90, 91], "max_trust_ratio": [90, 91], "decay_lambda": [90, 91], "lars_upd": [90, 91], "optimizer_upd": [90, 91], "effective_grad": [90, 91], "static_adam_step": [90, 91], "87": [90, 91], "976": [90, 91], "static_adam_upd": [90, 91], "static_execute_with_gradi": [90, 91], "retain_grad": [90, 91, 131], "static_gradient_descent_upd": [90, 91], "static_is_vari": [90, 91], "static_lamb_upd": [90, 91], "static_lars_upd": [90, 91], "static_optimizer_upd": [90, 91], "inp": [94, 95], "static_conv1d": [94, 95], "static_depthwise_conv2d": [94, 95], "73": [96, 97, 125], "577": [96, 97], "707": [96, 97], "liter": [96, 97, 135], "nuc": [96, 97], "matrix_pow": [96, 97], "slogdet": [96, 97], "static_choleski": [96, 97], "static_rol": [96, 97, 100, 101, 123, 131], "static_cross": [96, 97], "static_det": [96, 97], "static_diagon": [96, 97], "static_inv": [96, 97], "static_matrix_norm": [96, 97], "static_matrix_pow": [96, 97], "static_matrix_rank": [96, 97], "static_matrix_transpos": [96, 97], "static_out": [96, 97], "static_qr": [96, 97], "static_slogdet": [96, 97], "static_solv": [96, 97], "static_svd": [96, 97], "static_svdv": [96, 97], "static_tensordot": [96, 97], "static_trac": [96, 97], "static_vecdot": [96, 97], "static_vector_norm": [96, 97], "static_vector_to_skew_symmetric_matrix": [96, 97], "511": [98, 99], "5108256": [98, 99], "609438": [98, 99], "static_binary_cross_entropi": [98, 99], "static_cross_entropi": [98, 99], "20397282": [98, 99], "83258148": [98, 99], "60943794": [98, 99], "static_sparse_cross_entropi": [98, 99], "static_clip": [100, 101], "static_repeat": [100, 101], "658": [102, 103], "04": [102, 103], "759": [102, 103], "403": [102, 103], "62": [102, 103, 104, 105], "static_layer_norm": [102, 103], "30": [104, 105], "28": [104, 105], "102": [104, 105], "60": [104, 105], "431": [104, 105], "55": [104, 105], "31": [104, 105], "68": [104, 105], "93": [104, 105], "83": [104, 105], "84": [104, 105], "274": [104, 105], "69": [104, 105], "08": [104, 105, 125], "09": [104, 105], "92": [104, 105], "91": [104, 105], "40": [104, 105], "65": [104, 105], "43": [104, 105], "88": [104, 105], "static_randint": [104, 105], "static_random_norm": [104, 105], "651": [104, 105], "464": [104, 105], "static_random_uniform": [104, 105], "481": [104, 105], "74": [104, 105], "0999": [104, 105], "static_unique_al": [108, 109], "static_unique_count": [108, 109], "classivi": [108, 109], "static_unique_invers": [108, 109], "static_unique_valu": [108, 109], "static_argsort": [110, 111], "static_sort": [110, 111], "static_al": [114, 115], "static_ani": [114, 115], "add_ivy_container_instance_method": 116, "containerexampl": [116, 117], "who": [118, 136, 154], "mainli": [118, 138, 140], "under": [118, 122, 123, 124, 125, 126, 127, 131, 136, 137, 140, 142, 154], "hood": [118, 123, 125, 127, 131, 136, 137, 140, 142], "weed": [118, 136], "behind": [118, 125, 136, 138], "tour": 118, "primari": [118, 125, 128, 134, 154], "composit": [118, 125, 128, 130, 131, 134, 137, 141, 142, 154], "nestabl": [118, 122, 123, 125, 134], "dynam": [118, 132, 133, 134, 137], "runtim": [118, 125], "helper": [118, 140], "borrow": 118, "taken": [119, 135, 142], "compil": [119, 131, 136, 138, 154, 1156], "meta": [119, 130], "overlap": 119, "judgement": 119, "some_namespac": 119, "some_backend": 119, "another_backend": 119, "break": [119, 120, 135, 139, 154, 1156], "anyth": [119, 125, 1156], "refactor": 119, "ongo": 119, "file_nam": [119, 125], "my_func": [119, 123], "my": 119, "cooler": 119, "current_backend": [119, 127], "produc": [119, 125], "something_cool": 119, "category_nam": [120, 122, 127, 132, 133], "backend_nam": [120, 122, 127, 128, 129, 132, 133], "adress": 120, "conveni": [120, 132, 133, 138, 140, 141], "revisit": [120, 142], "dedic": [120, 139, 141], "four": [120, 123, 127, 132, 140], "to_native_arrays_and_back": [120, 129, 155], "handle_out_argu": [120, 129, 132, 133, 134, 155], "tf": [120, 121, 126, 130, 132, 133, 134, 137, 142, 154, 1156], "outputs_to_ivy_arrai": [120, 130, 132, 133, 155], "infer_dtyp": [120, 132, 133, 155], "infer_devic": [120, 132, 133, 155], "jnp": [120, 121, 132, 133, 134, 142, 1156], "jaxarrai": [120, 121, 132, 133, 134], "wherea": [120, 123, 125, 127, 130, 132, 133, 142], "__sub__": [120, 123, 130, 131, 139], "__mul__": [120, 123, 130, 131, 139], "__div__": 120, "permit": [120, 125, 130], "dicat": 120, "addition": [120, 131, 134], "omit": [120, 134], "wrapper": [120, 129, 130, 131, 132, 134, 139], "contrast": [120, 122], "futher": 120, "absenc": [120, 131], "pep": 120, "484": 120, "annot": [120, 135], "dictat": [120, 123, 130, 134], "brittl": 120, "intend": 120, "subset": [120, 122, 125, 137], "freeli": 120, "extend": [120, 122, 128, 154], "consum": [120, 125, 131], "inde": [120, 154], "flexibl": 120, "technic": [120, 131, 134, 154], "original_typ": 120, "cumbersom": 120, "readabl": [120, 121, 130, 131, 139, 140], "clean": [121, 135, 137, 138, 140], "_assert_fill_value_and_dtype_are_compat": 121, "isinst": [121, 141, 142], "verifi": [121, 125, 132, 133, 139, 1156, 1162], "_to_devic": 121, "experiment": 121, "_is_valid_dtypes_attribut": 121, "supported_dtyp": 121, "unsupported_dtyp": [121, 126, 132], "fn_supported_dtyp": 121, "fn_unsupported_dtyp": 121, "backend_str": 121, "current_backend_str": 121, "function_supported_dtyp": 121, "function_unsupported_dtyp": 121, "invalid_dtyp": [121, 132], "account": 122, "instanti": 122, "firstli": [122, 123, 127, 130, 132, 134, 140], "templat": [122, 125, 1156], "spec": [122, 123], "api_specif": 122, "array_api": 122, "preview": 122, "render": 122, "incorrectli": [122, 135], "onlin": [122, 1156], "domain": 122, "codomain": 122, "assum": [122, 125, 128, 132, 139, 140, 154], "operand": [122, 126], "ref": 122, "But": [122, 131, 142], "needless": 122, "info": [122, 1156], "renam": 122, "conform": 122, "org": 122, "elementwise_funct": 122, "descript": [122, 125, 131], "simplic": [122, 141, 153], "judgment": 122, "beyond": 122, "func_nam": [122, 123, 127], "pure": [122, 139, 142, 154], "themselv": [122, 127, 131, 132, 133, 141], "operator_nam": 122, "succinct": 122, "contstructor": 122, "though": [122, 127, 132, 140, 154], "forward": [122, 125, 142, 153, 154], "_forward": [122, 137, 140, 141, 1156], "former": 122, "explicitli": [122, 127, 128, 130, 131, 134, 137, 154], "latter": [122, 128], "implicit": [122, 125, 131, 137], "docst": 122, "eight": 123, "static_": 123, "op_nam": 123, "__r": 123, "__truediv__": [123, 130, 131], "recap": [123, 131, 141], "independ": [123, 124, 129, 131, 137, 142], "combinatorili": 123, "variat": [123, 125], "grid": [123, 125, 153], "vari": [123, 125, 131, 139], "unus": [123, 134, 135], "excess": [123, 128, 139], "okai": [123, 137], "showcas": [123, 153], "demonstr": [123, 139], "replic": [123, 132], "meant": 123, "imaginari": 123, "some_flag": 123, "another_flag": 123, "jointli": 123, "three": [123, 125, 126, 131, 136, 1156], "x0": 123, "procedur": 123, "sens": [123, 131, 139], "5574077": 123, "1850398": 123, "5463025": 123, "8422884": 123, "91601413": 123, "9647598": 123, "3738229": 123, "1597457": 123, "0963247": 123, "9955841": 123, "3278579": 123, "multi": [123, 131, 136, 154, 1156, 1162], "seper": 123, "pars": [123, 154], "satisfi": 123, "far": [123, 133, 138, 139], "asid": [123, 153], "irrelev": [123, 132], "increasingli": 123, "complex": [123, 126, 140, 141, 142, 154], "14254655": 123, "1578213": 123, "380515": 123, "trivial": 123, "exlud": 123, "thoroughli": 124, "ci": [124, 125, 154], "On": [125, 126, 135, 138, 142], "fixtur": 125, "hit": [125, 137], "action": 125, "eleg": 125, "intellig": 125, "rang": [125, 140, 141, 142, 1156], "cach": [125, 127], "unexplor": 125, "known": 125, "repeatedli": [125, 131], "upload": 125, "artifact": 125, "parametr": 125, "statement": [125, 135, 154], "plai": [125, 126, 142], "varieti": [125, 132, 133], "valid_int_dtyp": 125, "uint8": [125, 132], "uint16": [125, 132], "uint32": [125, 132], "uint64": [125, 132], "custom_strategi": 125, "st": 125, "sampled_from": 125, "min_siz": 125, "max_siz": 125, "referenc": 125, "print_hypothesis_exampl": 125, "searchstrategi": 125, "randomis": 125, "simplist": 125, "intricaci": 125, "briefli": [125, 127, 140], "bound": [125, 137], "mechan": [125, 152, 154, 1156], "power": [125, 139, 140, 141], "math": [125, 134, 142, 1156], "inclus": [125, 134], "width": 125, "losslessli": 125, "mostli": 125, "one_of": 125, "datum": 125, "pipe": 125, "overload": 125, "shorthand": 125, "draw": 125, "input_dtyp": 125, "reject": 125, "flatmap": 125, "suppos": 125, "interact": [125, 1156], "dataobject": 125, "test_argsort": 125, "decor": [125, 127, 129, 131, 132, 133, 134], "initialis": 125, "snippet": 125, "dtype_and_x": 125, "dtype_and_valu": 125, "valid_float_dtyp": 125, "list_of_length": 125, "num_positional_arg": 125, "instance_method": 125, "test_leaky_relu": 125, "exhaust": 125, "num_posit": 125, "indirectli": 125, "advis": 125, "seri": [125, 126], "9433925": 125, "401298464324817e": 125, "574352379": 125, "99999": 125, "2250738585072014e": 125, "308": 125, "103515625e": 125, "unpack": [125, 135], "seamlessli": 125, "edg": [125, 137, 142, 1156], "encount": 125, "criterion": 125, "straight": [125, 139, 1156], "array_valu": 125, "valid_ax": 125, "hand": [125, 127, 135, 154], "craft": 125, "polici": [125, 153], "hoc": 125, "overview": [125, 136, 153], "array_dtyp": 125, "array_bool": 125, "na": 125, "test_concat": 125, "test_devic": 125, "array_shap": 125, "test_manipul": 125, "common_shap": 125, "test_lay": 125, "size_bound": 125, "precis": 125, "283405296074752": 125, "564049465049088": 125, "0417876997507982e": 125, "min_valu": 125, "max_valu": 125, "allow_inf": 125, "min_num_dim": 125, "wherev": 125, "reshape_shap": 125, "stand": 125, "alon": 125, "fashion": 125, "some_sequ": 125, "allow_subnorm": 125, "exclude_min": 125, "960464477539063e": 125, "coverag": 125, "allow_nan": 125, "Such": 125, "kind": [125, 154], "get_shap": 125, "allow_non": 125, "max_num_dim": 125, "min_dim_s": 125, "none_or_list_of_float": 125, "200": 125, "199": 125, "99999999999997": 125, "000000000000002": 125, "125": 125, "43759670925832": 125, "get_mean_std": 125, "probabilist": 125, "811428143185347e": 125, "none_or_list_float": 125, "get_bound": 125, "arrays_valu": 125, "put": [125, 154], "36418": 125, "213": 125, "21716926": 125, "get_prob": 125, "unnorm": 125, "099609375": 125, "get_axi": 125, "number_positional_argu": 125, "mind": [125, 130, 131], "bodi": 125, "test_valu": 125, "enough": [125, 139, 140, 141], "justifi": 125, "unduli": 125, "labori": 125, "straightforward": [125, 140], "scenario": 125, "autom": [125, 1156], "report": 125, "test_demo": 125, "falsifi": 125, "failing_test": 125, "traceback": 125, "assertionerror": 125, "shrink": 125, "prescrib": 125, "behavior": [125, 131, 137, 154], "identifi": 125, "closest": 125, "checkout": 125, "scratch": 125, "databas": 125, "therebi": 125, "event": [125, 1156], "test_gelu": 125, "test_fil": 125, "brief": 125, "phase": [125, 154], "notabl": 125, "displai": [125, 131, 140], "verbos": [125, 137, 1156, 1204], "newer": 125, "max_exampl": 125, "impact": [125, 141], "deadlin": 125, "weird": 125, "truth": 125, "opt": [125, 128, 134, 139], "defer": [125, 127, 130, 131, 132, 133, 134], "suffic": [125, 129], "catch": 125, "systemat": 125, "safeguard": 125, "inabl": 125, "num_gpu": [125, 133], "lax": [126, 154], "bfloat16": [126, 132], "thu": 126, "categoris": 126, "notic": [126, 139], "mathematical_funct": 126, "arithmetic_oper": 126, "same_kind": 126, "subok": 126, "as_ivy_dtyp": 126, "is_arrai": 126, "mathemat": 126, "slightli": [126, 131, 137, 141], "recov": 126, "obtain": 126, "trigonometric_funct": 126, "pointwise_op": 126, "concaten": [126, 137, 140, 1156], "manipulation_routin": 126, "joining_arrai": 126, "indexing_slicing_joining_mutating_op": 126, "cat": [126, 137, 142], "grasp": 126, "youtub": 126, "categor": [127, 133], "mutual": [127, 131], "constitut": [127, 137], "venn": 127, "diagram": 127, "light": [127, 154], "log_pr": [127, 131, 134], "array_arg": 127, "typic": 127, "whatsoev": [127, 131], "commonli": 127, "outsid": [127, 133, 135, 137, 139, 142], "cache_fn": 127, "stable_divid": 127, "deal": [127, 154], "concurr": [127, 131], "modif": 127, "handle_nest": [127, 131, 155], "group": [127, 131], "set_default_dtyp": [127, 132], "default_dtyp": [127, 132], "get_all_arrays_on_dev": 127, "get_backend": [127, 128], "nested_map": 127, "index_nest": 127, "implicit_backend": 128, "unless": [128, 133, 134, 154], "__dict__": [128, 137, 139], "ivy_original_dict": [128, 137], "unmodifi": [128, 132], "unset_backend": 128, "fallback": 128, "freedom": 128, "achiev": [129, 135, 140, 142], "topic": [129, 139], "_data": [130, 139], "organiz": [130, 131], "inherit": [130, 131, 139, 154], "bear": [130, 131, 132], "necessarili": [130, 131], "although": [130, 131], "underpin": [130, 131, 137], "programmat": [130, 131], "backup": [130, 131], "accident": [130, 131], "absent": [130, 131], "perk": [130, 131], "auto": [130, 131, 140], "throw": [130, 139], "imposs": 130, "inputs_to_native_arrai": [130, 155], "coupl": [130, 131, 139, 141], "anywai": 130, "secondli": [130, 132], "easier": 130, "five": [131, 140], "decis": [131, 137, 139], "arbitrarili": [131, 140], "__repr__": 131, "control": [131, 132, 134, 139, 140, 153], "__getattr__": 131, "underli": 131, "__setattr__": 131, "__contains__": 131, "__getstate__": 131, "__setstate__": 131, "unpickl": 131, "expand": 131, "counterpart": 131, "irrespect": [131, 134, 139], "presenc": [131, 134], "implicitli": 131, "intuit": [131, 140, 141], "chronolog": 131, "had": [131, 134], "sequenti": [131, 141], "flow": [131, 153], "implic": 131, "eager": [131, 154], "children": 131, "shallowest": 131, "deepest": 131, "execute_with_gradi": [131, 140, 141, 142, 154, 1156], "multi_head_attent": [131, 134], "dy": 131, "dx": 131, "autograd": [131, 154], "grad": [131, 140, 141, 142, 1156], "redund": 131, "num_head": 131, "mask": 131, "to_q_fn": 131, "to_kv_fn": 131, "to_out_fn": [131, 134], "to_q_v": 131, "to_kv_v": 131, "to_out_v": 131, "measur": 131, "dot": 131, "all_dtyp": 132, "all_numeric_dtyp": 132, "all_int_dtyp": 132, "all_float_dtyp": 132, "fall": [132, 136, 1156], "thirdli": 132, "native_float32": 132, "importantli": [132, 139, 142, 153], "arguabl": [132, 133], "compound": 132, "overflow": 132, "arr": [132, 133], "default_int_dtyp": 132, "default_float_dtyp": 132, "settabl": [132, 133], "set_default_int_dtyp": 132, "set_default_float_dtyp": 132, "arang": [132, 1156], "mx": [132, 133, 134, 1156], "nd": [132, 133, 134, 137, 142, 1156], "deleg": 132, "shape_to_tupl": 132, "idx": [133, 139], "tpu": 133, "get_all_ivy_arrays_on_dev": 133, "aliv": 133, "total_mem_on_dev": 133, "dev_util": 133, "num_cpu_cor": 133, "default_devic": [133, 137], "dual": 133, "thrown": [133, 154], "rare": [133, 154], "set_default_devic": 133, "program": 134, "strictli": 134, "ration": 134, "speak": 134, "subtli": 134, "ensure_in_backend": 134, "x_nativ": 134, "val_n": 134, "is_ivy_arrai": [134, 139], "assign": [134, 135, 139], "elif": 134, "unspecifi": 134, "predominantli": [134, 153], "altern": [134, 140], "_wrap_fn": 134, "maxim": [134, 137], "inner": [134, 139], "third": [134, 154], "leverag": 134, "equival": [134, 140, 142], "input_arrai": 134, "flake8": 135, "undefin": 135, "yield": 135, "handler": [135, 136, 138, 142, 1156], "carri": 135, "star": 135, "byte": 135, "notimpl": 135, "notimplementederror": 135, "unsuccess": 135, "exce": 135, "indices_wher": [135, 1156], "black": 135, "disobei": 135, "successfulli": 135, "comparison": 135, "sound": 136, "higher": [136, 137, 142, 154], "fledg": [137, 138], "syntact": [137, 142], "clip_by_valu": [137, 142], "clamp": [137, 142], "fit": 137, "logspac": 137, "construct": [137, 138, 141, 142], "power_seq": 137, "linspac": [137, 1156], "resid": [137, 141], "ml_framework": [137, 142], "current_framework": [137, 142], "furthermor": 137, "framework_handl": 137, "face": 137, "cprint": [137, 1203], "framework_stack": 137, "_determine_framework_from_arg": 137, "get_framework": 137, "neither": 137, "illustr": [137, 153], "un": 137, "lstm_updat": 137, "nn": [137, 142, 1156], "init_h": 137, "init_c": 137, "kernel": [137, 154], "recurrent_kernel": 137, "bia": [137, 141], "recurrent_bia": 137, "x_shape": 137, "batch_shap": [137, 139, 142], "timestep": 137, "input_channel": [137, 141], "x_flat": 137, "wi": 137, "wi_x": 137, "wii_x": 137, "wif_x": 137, "wig_x": 137, "wio_x": 137, "recurr": 137, "wh": 137, "lstm": 137, "ht": 137, "ct": 137, "hts_list": 137, "unrol": [137, 140], "wii_xt": 137, "wif_xt": 137, "wig_xt": 137, "wio_xt": 137, "zip": 137, "htm1": 137, "ctm1": 137, "wh_htm1": 137, "whi_htm1": 137, "whf_htm1": 137, "whg_htm1": 137, "who_htm1": 137, "ft": 137, "gt": 137, "ot": 137, "offici": 137, "reliabl": 137, "sacrific": 137, "hear": 137, "virtu": 137, "pure_ivi": 137, "reduce_mean": [137, 140, 141, 142, 1156], "reduce_sum": [137, 1156], "reduce_var": 137, "compile_graph": [137, 142], "pure_torch": 137, "backbon": [137, 140], "_layer": 137, "super": [137, 140, 141, 142], "random_unifrom": 137, "unclean": 137, "wx": 137, "temp": 137, "torchscript": 137, "example_input": 137, "static_argnum": 137, "static_argnam": 137, "jit": [137, 154], "frontend": 138, "primit": [138, 154], "hierarch": [138, 140, 141], "arraywithlinalg": 139, "arraywithlog": 139, "arraywithmath": 139, "arraywithmeta": 139, "arraywithreduct": 139, "is_native_arrai": 139, "_shape": 139, "_size": 139, "functool": 139, "mul": 139, "len": [139, 142], "_dtype": 139, "_devic": 139, "_dev_str": 139, "as_ivy_dev": 139, "_pre_repr": 139, "_post_repr": 139, "answer": [139, 154], "typeerror": 139, "immut": 139, "behav": 139, "claim": 139, "truli": 139, "_native_wrapp": 139, "attributeerror": 139, "scatter_nd": [139, 1156], "genuin": 139, "some_method": 139, "similarli": 139, "rewritten": 139, "__pow__": 139, "strang": 139, "enforc": 139, "appear": 139, "_wrap_method": 139, "func_wrapp": [139, 155, 156, 157, 158, 159, 160, 161, 162, 163], "__name__": 139, "non_wrapped_method": 139, "_method_wrap": 139, "native_arg": 139, "native_kwarg": 139, "inner_fn": 139, "whist": 139, "unwrap": 139, "transit": 139, "needlessli": 139, "randn": 139, "_unwrap_method": 139, "method_wrap": 139, "compartment": 139, "public": 139, "newshap": 139, "new_shap": 139, "tidi": 139, "shorter": 139, "crystal": 139, "ton": 140, "ado": [140, 141], "incred": [140, 154], "hash": 140, "soup": 140, "walk": [140, 141], "dct": 140, "cnt": 140, "combo": [140, 1156, 1162], "hold": 140, "1000": 140, "uda": 140, "3333": 140, "6667": 140, "178": 140, "new_weight": 140, "0600": 140, "3100": 140, "2400": 140, "6900": 140, "delimit": 140, "autocomplet": 140, "midwai": 140, "agent": 140, "total_spe": 140, "total_height": 140, "total_width": 140, "ag": 140, "tot": 140, "total_": 140, "total_h": 140, "dir": 140, "dropout": 140, "cnt0": 140, "cnt1": 140, "diff_0": 140, "diff_1": 140, "config0": 140, "config1": 140, "Not": [140, 141, 154], "decod": 140, "l0": 140, "l1": 140, "clearer": 140, "truncat": 140, "decoder__l0": 140, "decoder__l1": 140, "encoder__l0": 140, "encoder__l1": 140, "height": 140, "l0__b": 140, "l0__w": 140, "l1__b": 140, "l1__w": 140, "printabl": 140, "obviou": 140, "foresight": 140, "untidili": 140, "update_ag": 140, "normalize_img": 140, "img": 140, "img_max": 140, "reduce_max": [140, 1156], "img_min": 140, "reduce_min": [140, 1156], "img_rang": 140, "agent_posit": 140, "agent_veloc": 140, "agent_cam_front_rgb": 140, "agent_cam_front_depth": 140, "agent_cam_rear_rgb": 140, "agent_cam_rear_depth": 140, "agent_cam_lidar": 140, "cleaner": 140, "camera": 140, "front_rgb": 140, "front_depth": 140, "rear_rgb": 140, "rear_depth": 140, "lidar": 140, "rgb": 140, "rear": 140, "veloc": 140, "cam": 140, "cam_max": 140, "cam_min": 140, "cam_rang": 140, "Of": 140, "ideal": 140, "perman": 140, "afterward": 140, "thread": 140, "incorpor": 140, "pretti": 140, "dataload": [140, 152, 1156], "_cnt": 140, "img_": 140, "_dataset_s": 140, "_batch_siz": 140, "_count": [140, 141], "__next__": 140, "filenam": 140, "img_fnam": 140, "fname": 140, "loaded_img": 140, "cv2": 140, "imread": 140, "loader": [140, 154], "batch_slic": 140, "mymodel": [140, 1156], "linear0": [140, 141, 1156], "linear1": [140, 141, 1156], "x_in": [140, 141, 142, 1156], "loss_fn": [140, 141, 142, 1156], "0145": 140, "grad_fn": 140, "addbackward0": 140, "_create_vari": 141, "output_channel": 141, "with_bia": 141, "_input_channel": 141, "_output_channel": 141, "_w_shape": 141, "_b_shape": 141, "_with_bia": 141, "8979": 141, "3198": 141, "0196": 141, "3126": 141, "3717": 141, "9687": 141, "6958": 141, "5122": 141, "3902": 141, "8800": 141, "5613": 141, "1982": 141, "nightmar": 141, "overcom": 141, "fc": 141, "9563": 141, "v0": 141, "v1": 141, "6440": 141, "key0": 141, "1823": 141, "8075": 141, "linear3": 141, "v2": 141, "2346": 141, "counter": 141, "hidden": 141, "fed": 141, "1300": 141, "decoupl": 141, "scheme": 141, "weight_initi": 141, "glorotuniform": 141, "bias_initi": 141, "_w_init": 141, "_b_init": 141, "create_vari": 141, "var_shap": 141, "fan_out": 141, "fan_in": 141, "fan_mod": 141, "fan_sum": 141, "slight": 141, "misnom": 141, "saw": 141, "vanilla": 141, "descent": 141, "lar": 141, "lamb": 141, "compile_on_next_step": 141, "_beta1": 141, "_beta2": 141, "_epsilon": 141, "_mw": 141, "_vw": 141, "_first_pass": 141, "_should_compil": 141, "_step": 141, "new_v": 141, "_lr": 141, "_inplac": 141, "_stop_gradi": 141, "set_stat": 141, "pre": [142, 154], "captur": 142, "one_hot": [142, 1156], "sparse_funct": 142, "num_class": 142, "ey": 142, "cumprod": 142, "num_dim": 142, "new_axi": 142, "_linear": 142, "to_backend": 142, "jax_graph": 142, "to_ivy_modul": 142, "thinli": 142, "whilst": 142, "to_haiku_modul": 142, "hk": 142, "loss_fn_t": 142, "transform": [142, 153], "without_apply_rng": 142, "rng": 142, "prngkei": 142, "init": 142, "update_rul": 142, "tree_multimap": 142, "vision": [152, 1156], "robot": [152, 1156], "focus": 153, "perfect": 153, "3d": 153, "differenti": 153, "demo": [153, 1156], "orient": 153, "pose": 153, "euler": 153, "quaternion": 153, "rotat": 153, "ivy_mech": 153, "target_facing_rotation_matrix": 153, "polar_to_cartesian_coord": 153, "ordin": 153, "warp": 153, "optic": 153, "voxel": 153, "ivy_vis": 153, "coords_to_voxel_grid": 153, "render_pixel_coord": 153, "neural": [153, 1156], "radianc": 153, "nerf": 153, "trajectori": 153, "motion": 153, "plan": [153, 1156], "mobil": 153, "ivy_robot": 153, "sample_spline_path": 153, "rigidmobil": 153, "sample_bodi": 153, "drone": 153, "sample_link": 153, "openai": 153, "swimmer": 153, "cumul": 153, "reward": 153, "supervis": 153, "reinforc": 153, "door": [153, 154], "intersect": 153, "cartpol": 153, "mountain_car": 153, "pendulum": 153, "reacher": 153, "condit": 153, "learnt": 153, "ture": 153, "ntm": 153, "egospher": 153, "spatial": 153, "esm": 153, "ivy_memori": 153, "egocentr": 153, "room": 153, "inspir": 153, "doubt": 154, "grate": 154, "probe": 154, "undergo": 154, "remark": 154, "surpris": 154, "lock": 154, "contunu": 154, "minor": 154, "xla": 154, "gold": 154, "dex": 154, "ye": 154, "scan": 154, "tricki": 154, "predictor": 154, "tight": 154, "driver": 154, "schedul": 154, "dispatch": 154, "Will": 154, "ast": 154, "dynamic": 154, "cond": 154, "jacobian": 154, "checkpoint": 154, "autodiff": 154, "shine": 154, "merci": 154, "superset": 154, "cluster": 154, "compet": 154, "paradigm": 154, "parallelis": 154, "spmd": 154, "mixtur": 154, "expert": 154, "sophist": 154, "depart": 154, "routin": 154, "hundr": 154, "thousand": 154, "deepli": 154, "broadli": 154, "heavili": 154, "supplementari": 154, "Is": 154, "reusabl": 154, "fanci": 154, "fusion": 154, "lose": 154, "vmap": 154, "pmap": 154, "overhead": 154, "ineffici": 154, "eventu": 154, "supplement": 154, "backdoor": 154, "callback": 154, "record": 154, "metric": 154, "somewhat": 154, "outsourc": 154, "inputs_to_ivy_arrai": 155, "defaultdtyp": 275, "noinspect": [275, 276, 277, 368, 777], "pyshadowingnam": [275, 276, 277, 368, 777], "defaultfloatdtyp": 276, "defaultintdtyp": 277, "defaultuintdtyp": 278, "defaultdevic": 368, "gradienttrack": 777, "grow": 1156, "ai": 1156, "got": 1156, "colab": 1156, "sharp": 1156, "weekli": 1156, "immedi": 1156, "favorit": 1156, "jax_concat": 1156, "tf_concat": 1156, "np_concat": 1156, "mx_concat": 1156, "torch_concat": 1156, "get_devic": 1156, "reduce_prod": 1156, "get_num_dim": 1156, "gradient_imag": 1156, "argmax": 1156, "argmin": 1156, "linalg": 1156, "bilinear_resampl": 1156, "stack_imag": 1156, "conv2d": 1156, "neural_net": 1156, "cumsum": 1156, "floormod": 1156, "ecosystem": [1156, 1162], "popular": [1156, 1162], "acceler": 1156, "articl": 1156, "lenton2021ivi": 1156, "inter": 1156, "portabl": 1156, "lenton": 1156, "daniel": 1156, "pardo": 1156, "fabio": 1156, "falck": 1156, "fabian": 1156, "jame": 1156, "stephen": 1156, "clark": 1156, "ronald": 1156, "journal": 1156, "arxiv": 1156, "preprint": 1156, "2102": 1156, "02886": 1156, "2021": 1156, "kaimingnorm": 1173}, "objects": {"ivy.array": [[24, 0, 0, "-", "activations"], [26, 0, 0, "-", "array"], [29, 0, 0, "-", "conversions"], [35, 0, 0, "-", "creation"], [37, 0, 0, "-", "data_type"], [39, 0, 0, "-", "device"], [41, 0, 0, "-", "elementwise"], [43, 0, 0, "-", "general"], [45, 0, 0, "-", "gradients"], [47, 0, 0, "-", "image"], [49, 0, 0, "-", "layers"], [51, 0, 0, "-", "linear_algebra"], [53, 0, 0, "-", "losses"], [55, 0, 0, "-", "manipulation"], [57, 0, 0, "-", "norms"], [59, 0, 0, "-", "random"], [61, 0, 0, "-", "searching"], [63, 0, 0, "-", "set"], [65, 0, 0, "-", "sorting"], [67, 0, 0, "-", "statistical"], [69, 0, 0, "-", "utility"], [71, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[25, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[25, 2, 1, "", "gelu"], [25, 2, 1, "", "leaky_relu"], [25, 2, 1, "", "relu"], [25, 2, 1, "", "sigmoid"], [25, 2, 1, "", "softmax"], [25, 2, 1, "", "softplus"], [25, 2, 1, "", "tanh"]], "ivy.array.array": [[27, 1, 1, "", "Array"], [28, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[27, 3, 1, "", "T"], [27, 2, 1, "", "__add__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__le__"], [27, 2, 1, "", "__radd__"], [27, 3, 1, "", "data"], [27, 3, 1, "", "device"], [27, 3, 1, "", "dtype"], [27, 3, 1, "", "is_variable"], [27, 3, 1, "", "mT"], [27, 3, 1, "", "ndim"], [27, 3, 1, "", "shape"], [27, 3, 1, "", "size"]], "ivy.array.array.Variable": [[28, 2, 1, "", "__init__"]], "ivy.array.conversions": [[30, 4, 1, "", "args_to_container"], [31, 4, 1, "", "args_to_ivy"], [32, 4, 1, "", "args_to_native"], [33, 4, 1, "", "to_ivy"], [34, 4, 1, "", "to_native"]], "ivy.array.creation": [[36, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[36, 2, 1, "", "asarray"], [36, 2, 1, "", "empty_like"], [36, 2, 1, "", "from_dlpack"], [36, 2, 1, "", "full_like"], [36, 2, 1, "", "meshgrid"], [36, 2, 1, "", "native_array"], [36, 2, 1, "", "ones_like"], [36, 2, 1, "", "tril"], [36, 2, 1, "", "triu"], [36, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[38, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[38, 2, 1, "", "astype"], [38, 2, 1, "", "broadcast_arrays"], [38, 2, 1, "", "broadcast_to"], [38, 2, 1, "", "can_cast"], [38, 2, 1, "", "dtype"], [38, 2, 1, "", "finfo"], [38, 2, 1, "", "iinfo"], [38, 2, 1, "", "is_bool_dtype"], [38, 2, 1, "", "is_float_dtype"], [38, 2, 1, "", "is_int_dtype"], [38, 2, 1, "", "is_uint_dtype"], [38, 2, 1, "", "result_type"]], "ivy.array.device": [[40, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[40, 2, 1, "", "dev"], [40, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[42, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[42, 2, 1, "", "abs"], [42, 2, 1, "", "acos"], [42, 2, 1, "", "acosh"], [42, 2, 1, "", "add"], [42, 2, 1, "", "asin"], [42, 2, 1, "", "asinh"], [42, 2, 1, "", "atan"], [42, 2, 1, "", "atan2"], [42, 2, 1, "", "atanh"], [42, 2, 1, "", "bitwise_and"], [42, 2, 1, "", "bitwise_invert"], [42, 2, 1, "", "bitwise_left_shift"], [42, 2, 1, "", "bitwise_or"], [42, 2, 1, "", "bitwise_right_shift"], [42, 2, 1, "", "bitwise_xor"], [42, 2, 1, "", "ceil"], [42, 2, 1, "", "cos"], [42, 2, 1, "", "cosh"], [42, 2, 1, "", "divide"], [42, 2, 1, "", "equal"], [42, 2, 1, "", "erf"], [42, 2, 1, "", "exp"], [42, 2, 1, "", "expm1"], [42, 2, 1, "", "floor"], [42, 2, 1, "", "floor_divide"], [42, 2, 1, "", "greater"], [42, 2, 1, "", "greater_equal"], [42, 2, 1, "", "isfinite"], [42, 2, 1, "", "isinf"], [42, 2, 1, "", "isnan"], [42, 2, 1, "", "less"], [42, 2, 1, "", "less_equal"], [42, 2, 1, "", "log"], [42, 2, 1, "", "log10"], [42, 2, 1, "", "log1p"], [42, 2, 1, "", "log2"], [42, 2, 1, "", "logaddexp"], [42, 2, 1, "", "logical_and"], [42, 2, 1, "", "logical_not"], [42, 2, 1, "", "logical_or"], [42, 2, 1, "", "logical_xor"], [42, 2, 1, "", "multiply"], [42, 2, 1, "", "negative"], [42, 2, 1, "", "not_equal"], [42, 2, 1, "", "positive"], [42, 2, 1, "", "pow"], [42, 2, 1, "", "remainder"], [42, 2, 1, "", "round"], [42, 2, 1, "", "sign"], [42, 2, 1, "", "sin"], [42, 2, 1, "", "sinh"], [42, 2, 1, "", "sqrt"], [42, 2, 1, "", "square"], [42, 2, 1, "", "subtract"], [42, 2, 1, "", "tan"], [42, 2, 1, "", "tanh"], [42, 2, 1, "", "trunc"]], "ivy.array.general": [[44, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[44, 2, 1, "", "all_equal"], [44, 2, 1, "", "clip_vector_norm"], [44, 2, 1, "", "gather_nd"], [44, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[46, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[46, 2, 1, "", "adam_step"], [46, 2, 1, "", "is_variable"]], "ivy.array.image": [[48, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[50, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[50, 2, 1, "", "conv1d"], [50, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[52, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[52, 2, 1, "", "cholesky"], [52, 2, 1, "", "cross"], [52, 2, 1, "", "det"], [52, 2, 1, "", "diagonal"], [52, 2, 1, "", "eigh"], [52, 2, 1, "", "eigvalsh"], [52, 2, 1, "", "inv"], [52, 2, 1, "", "matmul"], [52, 2, 1, "", "matrix_norm"], [52, 2, 1, "", "matrix_rank"], [52, 2, 1, "", "matrix_transpose"], [52, 2, 1, "", "outer"], [52, 2, 1, "", "pinv"], [52, 2, 1, "", "qr"], [52, 2, 1, "", "solve"], [52, 2, 1, "", "svd"], [52, 2, 1, "", "svdvals"], [52, 2, 1, "", "tensordot"], [52, 2, 1, "", "trace"], [52, 2, 1, "", "vecdot"], [52, 2, 1, "", "vector_norm"], [52, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[54, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[54, 2, 1, "", "binary_cross_entropy"], [54, 2, 1, "", "cross_entropy"], [54, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[56, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[56, 2, 1, "", "clip"], [56, 2, 1, "", "concat"], [56, 2, 1, "", "constant_pad"], [56, 2, 1, "", "expand_dims"], [56, 2, 1, "", "flip"], [56, 2, 1, "", "permute_dims"], [56, 2, 1, "", "repeat"], [56, 2, 1, "", "reshape"], [56, 2, 1, "", "roll"], [56, 2, 1, "", "squeeze"], [56, 2, 1, "", "stack"], [56, 2, 1, "", "swapaxes"], [56, 2, 1, "", "tile"], [56, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[58, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[58, 2, 1, "", "layer_norm"]], "ivy.array.random": [[60, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[60, 2, 1, "", "randint"], [60, 2, 1, "", "random_normal"], [60, 2, 1, "", "random_uniform"]], "ivy.array.searching": [[62, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[64, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[64, 2, 1, "", "unique_all"], [64, 2, 1, "", "unique_counts"], [64, 2, 1, "", "unique_inverse"], [64, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[66, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[66, 2, 1, "", "argsort"], [66, 2, 1, "", "sort"]], "ivy.array.statistical": [[68, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[68, 2, 1, "", "einsum"], [68, 2, 1, "", "max"], [68, 2, 1, "", "mean"], [68, 2, 1, "", "min"], [68, 2, 1, "", "prod"], [68, 2, 1, "", "std"], [68, 2, 1, "", "sum"], [68, 2, 1, "", "var"]], "ivy.array.utility": [[70, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[70, 2, 1, "", "all"], [70, 2, 1, "", "any"]], "ivy.array.wrapping": [[72, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy.backend_handler": [[2, 4, 1, "", "choose_random_backend"], [3, 4, 1, "", "clear_backend_stack"], [4, 4, 1, "", "current_backend"], [5, 4, 1, "", "get_backend"], [6, 4, 1, "", "set_backend"], [7, 4, 1, "", "try_import_ivy_jax"], [8, 4, 1, "", "try_import_ivy_mxnet"], [9, 4, 1, "", "try_import_ivy_numpy"], [10, 4, 1, "", "try_import_ivy_tf"], [11, 4, 1, "", "try_import_ivy_torch"], [12, 4, 1, "", "unset_backend"]], "ivy.container": [[74, 0, 0, "-", "activations"], [76, 0, 0, "-", "base"], [78, 0, 0, "-", "container"], [80, 0, 0, "-", "creation"], [82, 0, 0, "-", "data_type"], [84, 0, 0, "-", "device"], [86, 0, 0, "-", "elementwise"], [88, 0, 0, "-", "general"], [90, 0, 0, "-", "gradients"], [92, 0, 0, "-", "image"], [94, 0, 0, "-", "layers"], [96, 0, 0, "-", "linear_algebra"], [98, 0, 0, "-", "losses"], [100, 0, 0, "-", "manipulation"], [102, 0, 0, "-", "norms"], [104, 0, 0, "-", "random"], [106, 0, 0, "-", "searching"], [108, 0, 0, "-", "set"], [110, 0, 0, "-", "sorting"], [112, 0, 0, "-", "statistical"], [114, 0, 0, "-", "utility"], [116, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[75, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[75, 2, 1, "", "gelu"], [75, 2, 1, "", "leaky_relu"], [75, 2, 1, "", "relu"], [75, 2, 1, "", "sigmoid"], [75, 2, 1, "", "softmax"], [75, 2, 1, "", "softplus"], [75, 2, 1, "", "static_gelu"], [75, 2, 1, "", "static_leaky_relu"], [75, 2, 1, "", "static_relu"], [75, 2, 1, "", "static_sigmoid"], [75, 2, 1, "", "static_softmax"], [75, 2, 1, "", "static_softplus"], [75, 2, 1, "", "static_tanh"], [75, 2, 1, "", "tanh"]], "ivy.container.base": [[77, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[77, 2, 1, "", "__getitem__"], [77, 2, 1, "", "__init__"], [77, 2, 1, "", "__setitem__"], [77, 2, 1, "", "all_false"], [77, 2, 1, "", "all_key_chains"], [77, 2, 1, "", "all_true"], [77, 2, 1, "", "arrays_as_lists"], [77, 2, 1, "", "as_arrays"], [77, 2, 1, "", "as_bools"], [77, 2, 1, "", "as_random_uniform"], [77, 2, 1, "", "as_variables"], [77, 2, 1, "", "as_zeros"], [77, 2, 1, "", "assert_contains_sub_container"], [77, 2, 1, "", "assert_contains_sub_structure"], [77, 2, 1, "", "assert_identical"], [77, 2, 1, "", "assert_identical_structure"], [77, 2, 1, "", "at_key_chain"], [77, 2, 1, "", "at_key_chains"], [77, 2, 1, "", "at_keys"], [77, 2, 1, "", "clip"], [77, 2, 1, "", "combine"], [77, 2, 1, "", "common_key_chains"], [77, 3, 1, "", "config"], [77, 2, 1, "", "contains_sub_container"], [77, 2, 1, "", "contains_sub_structure"], [77, 2, 1, "", "copy"], [77, 2, 1, "", "create_if_absent"], [77, 2, 1, "", "cutoff_at_depth"], [77, 2, 1, "", "cutoff_at_height"], [77, 2, 1, "", "deep_copy"], [77, 3, 1, "", "dev"], [77, 2, 1, "", "dev_clone"], [77, 2, 1, "", "dev_dist"], [77, 3, 1, "", "dev_str"], [77, 2, 1, "", "diff"], [77, 2, 1, "", "dtype"], [77, 2, 1, "", "einops_rearrange"], [77, 2, 1, "", "einops_reduce"], [77, 2, 1, "", "einops_repeat"], [77, 2, 1, "", "find_sub_container"], [77, 2, 1, "", "find_sub_structure"], [77, 2, 1, "", "flatten_key_chain"], [77, 2, 1, "", "flatten_key_chains"], [77, 2, 1, "", "format_key_chains"], [77, 2, 1, "", "from_disk_as_hdf5"], [77, 2, 1, "", "from_disk_as_json"], [77, 2, 1, "", "from_disk_as_pickled"], [77, 2, 1, "", "from_flat_list"], [77, 2, 1, "", "from_numpy"], [77, 2, 1, "", "gather"], [77, 2, 1, "", "gather_nd"], [77, 2, 1, "", "h5_file_size"], [77, 2, 1, "", "handle_inplace"], [77, 2, 1, "", "has_key"], [77, 2, 1, "", "has_key_chain"], [77, 2, 1, "", "has_nans"], [77, 2, 1, "", "identical"], [77, 2, 1, "", "identical_array_shapes"], [77, 2, 1, "", "identical_configs"], [77, 2, 1, "", "identical_structure"], [77, 2, 1, "", "if_exists"], [77, 2, 1, "", "inplace_update"], [77, 3, 1, "", "ivy"], [77, 2, 1, "", "key_chains_containing"], [77, 2, 1, "", "list_join"], [77, 2, 1, "", "list_stack"], [77, 2, 1, "", "map"], [77, 2, 1, "", "map_conts"], [77, 2, 1, "", "matrix_norm"], [77, 3, 1, "", "max_depth"], [77, 2, 1, "", "maximum"], [77, 2, 1, "", "minimum"], [77, 2, 1, "", "multi_map"], [77, 2, 1, "", "multi_map_in_static_method"], [77, 2, 1, "", "num_arrays"], [77, 2, 1, "", "overwrite_at_key_chain"], [77, 2, 1, "", "overwrite_at_key_chains"], [77, 2, 1, "", "prune_empty"], [77, 2, 1, "", "prune_key_chain"], [77, 2, 1, "", "prune_key_chains"], [77, 2, 1, "", "prune_key_from_key_chains"], [77, 2, 1, "", "prune_keys"], [77, 2, 1, "", "prune_keys_from_key_chains"], [77, 2, 1, "", "reduce"], [77, 2, 1, "", "remove_key_length_limit"], [77, 2, 1, "", "remove_print_limit"], [77, 2, 1, "", "reshape_like"], [77, 2, 1, "", "restructure"], [77, 2, 1, "", "restructure_key_chains"], [77, 2, 1, "", "set_at_key_chain"], [77, 2, 1, "", "set_at_key_chains"], [77, 2, 1, "", "set_at_keys"], [77, 2, 1, "", "set_framework"], [77, 2, 1, "", "set_ivy_backend"], [77, 3, 1, "", "shape"], [77, 3, 1, "", "shapes"], [77, 2, 1, "", "show"], [77, 2, 1, "", "show_sub_container"], [77, 2, 1, "", "shuffle"], [77, 2, 1, "", "shuffle_h5_file"], [77, 2, 1, "", "size_ordered_arrays"], [77, 2, 1, "", "slice_keys"], [77, 2, 1, "", "slice_via_key"], [77, 2, 1, "", "sort_by_key"], [77, 2, 1, "", "split"], [77, 2, 1, "", "stop_gradients"], [77, 2, 1, "", "structural_diff"], [77, 2, 1, "", "to_device"], [77, 2, 1, "", "to_dict"], [77, 2, 1, "", "to_disk_as_hdf5"], [77, 2, 1, "", "to_disk_as_json"], [77, 2, 1, "", "to_disk_as_pickled"], [77, 2, 1, "", "to_flat_list"], [77, 2, 1, "", "to_iterator"], [77, 2, 1, "", "to_iterator_keys"], [77, 2, 1, "", "to_iterator_values"], [77, 2, 1, "", "to_ivy"], [77, 2, 1, "", "to_jsonable"], [77, 2, 1, "", "to_list"], [77, 2, 1, "", "to_native"], [77, 2, 1, "", "to_numpy"], [77, 2, 1, "", "to_raw"], [77, 2, 1, "", "trim_key"], [77, 2, 1, "", "try_kc"], [77, 2, 1, "", "unify"], [77, 2, 1, "", "unstack"], [77, 2, 1, "", "update_config"], [77, 2, 1, "", "vector_norm"], [77, 2, 1, "", "with_default_key_color"], [77, 2, 1, "", "with_entries_as_lists"], [77, 2, 1, "", "with_ivy_backend"], [77, 2, 1, "", "with_key_length_limit"], [77, 2, 1, "", "with_print_indent"], [77, 2, 1, "", "with_print_limit"], [77, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[79, 1, 1, "", "Container"]], "ivy.container.container.Container": [[79, 2, 1, "", "__add__"], [79, 2, 1, "", "__init__"], [79, 2, 1, "", "__radd__"]], "ivy.container.creation": [[81, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[81, 2, 1, "", "empty_like"], [81, 2, 1, "", "from_dlpack"], [81, 2, 1, "", "full_like"], [81, 2, 1, "", "meshgrid"], [81, 2, 1, "", "native_array"], [81, 2, 1, "", "ones_like"], [81, 2, 1, "", "static_arange"], [81, 2, 1, "", "static_asarray"], [81, 2, 1, "", "static_empty_like"], [81, 2, 1, "", "static_eye"], [81, 2, 1, "", "static_from_dlpack"], [81, 2, 1, "", "static_full_like"], [81, 2, 1, "", "static_linspace"], [81, 2, 1, "", "static_logspace"], [81, 2, 1, "", "static_meshgrid"], [81, 2, 1, "", "static_native_array"], [81, 2, 1, "", "static_ones"], [81, 2, 1, "", "static_ones_like"], [81, 2, 1, "", "static_tril"], [81, 2, 1, "", "static_triu"], [81, 2, 1, "", "static_zeros"], [81, 2, 1, "", "static_zeros_like"], [81, 2, 1, "", "tril"], [81, 2, 1, "", "triu"], [81, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[83, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[83, 2, 1, "", "astype"], [83, 2, 1, "", "broadcast_arrays"], [83, 2, 1, "", "broadcast_to"], [83, 2, 1, "", "can_cast"], [83, 2, 1, "", "dtype"], [83, 2, 1, "", "finfo"], [83, 2, 1, "", "iinfo"], [83, 2, 1, "", "is_bool_dtype"], [83, 2, 1, "", "is_float_dtype"], [83, 2, 1, "", "is_int_dtype"], [83, 2, 1, "", "is_uint_dtype"], [83, 2, 1, "", "result_type"], [83, 2, 1, "", "static_astype"], [83, 2, 1, "", "static_broadcast_arrays"], [83, 2, 1, "", "static_broadcast_to"], [83, 2, 1, "", "static_can_cast"], [83, 2, 1, "", "static_default_float_dtype"], [83, 2, 1, "", "static_dtype"], [83, 2, 1, "", "static_finfo"], [83, 2, 1, "", "static_function_supported_dtypes"], [83, 2, 1, "", "static_function_unsupported_dtypes"], [83, 2, 1, "", "static_iinfo"], [83, 2, 1, "", "static_is_bool_dtype"], [83, 2, 1, "", "static_is_float_dtype"], [83, 2, 1, "", "static_is_int_dtype"], [83, 2, 1, "", "static_is_uint_dtype"], [83, 2, 1, "", "static_result_type"]], "ivy.container.device": [[85, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[85, 2, 1, "", "dev"], [85, 2, 1, "", "static_dev"], [85, 2, 1, "", "static_to_device"], [85, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[87, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[87, 2, 1, "", "abs"], [87, 2, 1, "", "acos"], [87, 2, 1, "", "acosh"], [87, 2, 1, "", "add"], [87, 2, 1, "", "asin"], [87, 2, 1, "", "asinh"], [87, 2, 1, "", "atan"], [87, 2, 1, "", "atan2"], [87, 2, 1, "", "atanh"], [87, 2, 1, "", "bitwise_and"], [87, 2, 1, "", "bitwise_invert"], [87, 2, 1, "", "bitwise_left_shift"], [87, 2, 1, "", "bitwise_or"], [87, 2, 1, "", "bitwise_right_shift"], [87, 2, 1, "", "bitwise_xor"], [87, 2, 1, "", "ceil"], [87, 2, 1, "", "cos"], [87, 2, 1, "", "cosh"], [87, 2, 1, "", "divide"], [87, 2, 1, "", "equal"], [87, 2, 1, "", "erf"], [87, 2, 1, "", "exp"], [87, 2, 1, "", "expm1"], [87, 2, 1, "", "floor"], [87, 2, 1, "", "floor_divide"], [87, 2, 1, "", "greater"], [87, 2, 1, "", "greater_equal"], [87, 2, 1, "", "isfinite"], [87, 2, 1, "", "isinf"], [87, 2, 1, "", "isnan"], [87, 2, 1, "", "less"], [87, 2, 1, "", "less_equal"], [87, 2, 1, "", "log"], [87, 2, 1, "", "log10"], [87, 2, 1, "", "log1p"], [87, 2, 1, "", "log2"], [87, 2, 1, "", "logaddexp"], [87, 2, 1, "", "logical_and"], [87, 2, 1, "", "logical_not"], [87, 2, 1, "", "logical_or"], [87, 2, 1, "", "logical_xor"], [87, 2, 1, "", "multiply"], [87, 2, 1, "", "negative"], [87, 2, 1, "", "not_equal"], [87, 2, 1, "", "positive"], [87, 2, 1, "", "pow"], [87, 2, 1, "", "remainder"], [87, 2, 1, "", "round"], [87, 2, 1, "", "sign"], [87, 2, 1, "", "sin"], [87, 2, 1, "", "sinh"], [87, 2, 1, "", "sqrt"], [87, 2, 1, "", "square"], [87, 2, 1, "", "static_abs"], [87, 2, 1, "", "static_acos"], [87, 2, 1, "", "static_acosh"], [87, 2, 1, "", "static_add"], [87, 2, 1, "", "static_asin"], [87, 2, 1, "", "static_asinh"], [87, 2, 1, "", "static_atan"], [87, 2, 1, "", "static_atan2"], [87, 2, 1, "", "static_atanh"], [87, 2, 1, "", "static_bitwise_and"], [87, 2, 1, "", "static_bitwise_invert"], [87, 2, 1, "", "static_bitwise_left_shift"], [87, 2, 1, "", "static_bitwise_or"], [87, 2, 1, "", "static_bitwise_right_shift"], [87, 2, 1, "", "static_bitwise_xor"], [87, 2, 1, "", "static_ceil"], [87, 2, 1, "", "static_cos"], [87, 2, 1, "", "static_cosh"], [87, 2, 1, "", "static_divide"], [87, 2, 1, "", "static_equal"], [87, 2, 1, "", "static_erf"], [87, 2, 1, "", "static_exp"], [87, 2, 1, "", "static_expm1"], [87, 2, 1, "", "static_floor"], [87, 2, 1, "", "static_floor_divide"], [87, 2, 1, "", "static_greater"], [87, 2, 1, "", "static_greater_equal"], [87, 2, 1, "", "static_isfinite"], [87, 2, 1, "", "static_isinf"], [87, 2, 1, "", "static_isnan"], [87, 2, 1, "", "static_less"], [87, 2, 1, "", "static_less_equal"], [87, 2, 1, "", "static_log"], [87, 2, 1, "", "static_log10"], [87, 2, 1, "", "static_log1p"], [87, 2, 1, "", "static_log2"], [87, 2, 1, "", "static_logaddexp"], [87, 2, 1, "", "static_logical_and"], [87, 2, 1, "", "static_logical_not"], [87, 2, 1, "", "static_logical_or"], [87, 2, 1, "", "static_logical_xor"], [87, 2, 1, "", "static_multiply"], [87, 2, 1, "", "static_negative"], [87, 2, 1, "", "static_not_equal"], [87, 2, 1, "", "static_positive"], [87, 2, 1, "", "static_pow"], [87, 2, 1, "", "static_remainder"], [87, 2, 1, "", "static_round"], [87, 2, 1, "", "static_sign"], [87, 2, 1, "", "static_sin"], [87, 2, 1, "", "static_sinh"], [87, 2, 1, "", "static_sqrt"], [87, 2, 1, "", "static_square"], [87, 2, 1, "", "static_subtract"], [87, 2, 1, "", "static_tan"], [87, 2, 1, "", "static_tanh"], [87, 2, 1, "", "static_trunc"], [87, 2, 1, "", "subtract"], [87, 2, 1, "", "tan"], [87, 2, 1, "", "tanh"], [87, 2, 1, "", "trunc"]], "ivy.container.general": [[89, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[89, 2, 1, "", "all_equal"], [89, 2, 1, "", "clip_vector_norm"], [89, 2, 1, "", "gather_nd"], [89, 2, 1, "", "static_all_equal"], [89, 2, 1, "", "static_clip_vector_norm"], [89, 2, 1, "", "static_gather_nd"], [89, 2, 1, "", "static_to_numpy"], [89, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[91, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[91, 2, 1, "", "adam_step"], [91, 2, 1, "", "adam_update"], [91, 2, 1, "", "gradient_descent_update"], [91, 2, 1, "", "is_variable"], [91, 2, 1, "", "lamb_update"], [91, 2, 1, "", "lars_update"], [91, 2, 1, "", "optimizer_update"], [91, 2, 1, "", "static_adam_step"], [91, 2, 1, "", "static_adam_update"], [91, 2, 1, "", "static_execute_with_gradients"], [91, 2, 1, "", "static_gradient_descent_update"], [91, 2, 1, "", "static_is_variable"], [91, 2, 1, "", "static_lamb_update"], [91, 2, 1, "", "static_lars_update"], [91, 2, 1, "", "static_optimizer_update"]], "ivy.container.image": [[93, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[95, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[95, 2, 1, "", "conv1d"], [95, 2, 1, "", "depthwise_conv2d"], [95, 2, 1, "", "static_conv1d"], [95, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[97, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[97, 2, 1, "", "cholesky"], [97, 2, 1, "", "cross"], [97, 2, 1, "", "det"], [97, 2, 1, "", "diagonal"], [97, 2, 1, "", "eigh"], [97, 2, 1, "", "inv"], [97, 2, 1, "", "matmul"], [97, 2, 1, "", "matrix_norm"], [97, 2, 1, "", "matrix_power"], [97, 2, 1, "", "matrix_rank"], [97, 2, 1, "", "matrix_transpose"], [97, 2, 1, "", "outer"], [97, 2, 1, "", "qr"], [97, 2, 1, "", "slogdet"], [97, 2, 1, "", "solve"], [97, 2, 1, "", "static_cholesky"], [97, 2, 1, "", "static_cross"], [97, 2, 1, "", "static_det"], [97, 2, 1, "", "static_diagonal"], [97, 2, 1, "", "static_inv"], [97, 2, 1, "", "static_matrix_norm"], [97, 2, 1, "", "static_matrix_power"], [97, 2, 1, "", "static_matrix_rank"], [97, 2, 1, "", "static_matrix_transpose"], [97, 2, 1, "", "static_outer"], [97, 2, 1, "", "static_qr"], [97, 2, 1, "", "static_slogdet"], [97, 2, 1, "", "static_solve"], [97, 2, 1, "", "static_svd"], [97, 2, 1, "", "static_svdvals"], [97, 2, 1, "", "static_tensordot"], [97, 2, 1, "", "static_trace"], [97, 2, 1, "", "static_vecdot"], [97, 2, 1, "", "static_vector_norm"], [97, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [97, 2, 1, "", "svd"], [97, 2, 1, "", "svdvals"], [97, 2, 1, "", "tensordot"], [97, 2, 1, "", "trace"], [97, 2, 1, "", "vecdot"], [97, 2, 1, "", "vector_norm"], [97, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[99, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[99, 2, 1, "", "binary_cross_entropy"], [99, 2, 1, "", "cross_entropy"], [99, 2, 1, "", "sparse_cross_entropy"], [99, 2, 1, "", "static_binary_cross_entropy"], [99, 2, 1, "", "static_cross_entropy"], [99, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[101, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[101, 2, 1, "", "clip"], [101, 2, 1, "", "concat"], [101, 2, 1, "", "constant_pad"], [101, 2, 1, "", "expand_dims"], [101, 2, 1, "", "flip"], [101, 2, 1, "", "permute_dims"], [101, 2, 1, "", "repeat"], [101, 2, 1, "", "reshape"], [101, 2, 1, "", "roll"], [101, 2, 1, "", "squeeze"], [101, 2, 1, "", "stack"], [101, 2, 1, "", "static_clip"], [101, 2, 1, "", "static_repeat"], [101, 2, 1, "", "static_roll"], [101, 2, 1, "", "swapaxes"], [101, 2, 1, "", "tile"], [101, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[103, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[103, 2, 1, "", "layer_norm"], [103, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[105, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[105, 2, 1, "", "randint"], [105, 2, 1, "", "random_normal"], [105, 2, 1, "", "random_uniform"], [105, 2, 1, "", "static_randint"], [105, 2, 1, "", "static_random_normal"], [105, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[107, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[109, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[109, 2, 1, "", "static_unique_all"], [109, 2, 1, "", "static_unique_counts"], [109, 2, 1, "", "static_unique_inverse"], [109, 2, 1, "", "static_unique_values"], [109, 2, 1, "", "unique_all"], [109, 2, 1, "", "unique_counts"], [109, 2, 1, "", "unique_inverse"], [109, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[111, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[111, 2, 1, "", "argsort"], [111, 2, 1, "", "sort"], [111, 2, 1, "", "static_argsort"], [111, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[113, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[113, 2, 1, "", "einsum"], [113, 2, 1, "", "max"], [113, 2, 1, "", "mean"], [113, 2, 1, "", "min"], [113, 2, 1, "", "prod"], [113, 2, 1, "", "std"], [113, 2, 1, "", "sum"], [113, 2, 1, "", "var"]], "ivy.container.utility": [[115, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[115, 2, 1, "", "all"], [115, 2, 1, "", "any"], [115, 2, 1, "", "static_all"], [115, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[117, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy": [[155, 0, 0, "-", "func_wrapper"], [1203, 0, 0, "-", "verbosity"]], "ivy.func_wrapper": [[156, 4, 1, "", "handle_nestable"], [157, 4, 1, "", "handle_out_argument"], [158, 4, 1, "", "infer_device"], [159, 4, 1, "", "infer_dtype"], [160, 4, 1, "", "inputs_to_ivy_arrays"], [161, 4, 1, "", "inputs_to_native_arrays"], [162, 4, 1, "", "outputs_to_ivy_arrays"], [163, 4, 1, "", "to_native_arrays_and_back"]], "ivy.verbosity": [[1204, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"backend": [0, 119, 128, 137, 154], "handler": [0, 137], "choose_random_backend": 2, "clear_backend_stack": 3, "current_backend": 4, "get_backend": 5, "set_backend": 6, "try_import_ivy_jax": 7, "try_import_ivy_mxnet": 8, "try_import_ivy_numpi": 9, "try_import_ivy_tf": 10, "try_import_ivy_torch": 11, "unset_backend": 12, "background": [13, 1156], "ml": 14, "explos": 14, "standard": 15, "skeptic": 15, "complimentari": 15, "vs": [15, 154], "competit": 15, "do": [15, 125], "work": [15, 21], "The": [15, 19, 139, 154], "arrai": [15, 23, 26, 120, 124, 130, 139, 167, 172, 177, 182, 187, 192, 198, 209, 214, 222, 228, 239, 244, 252, 258, 263, 271, 282, 287, 292, 297, 309, 315, 326, 332, 337, 342, 347, 353, 375, 395, 404, 409, 414, 419, 424, 429, 434, 439, 444, 449, 454, 459, 464, 469, 474, 479, 484, 489, 494, 499, 504, 509, 514, 519, 524, 529, 534, 539, 544, 549, 554, 559, 564, 569, 574, 579, 584, 589, 594, 599, 604, 611, 616, 621, 626, 631, 636, 641, 646, 651, 656, 661, 666, 672, 677, 683, 688, 700, 718, 766, 779, 795, 819, 829, 840, 845, 850, 855, 860, 864, 867, 872, 876, 885, 890, 895, 900, 903, 912, 918, 923, 928, 933, 938, 943, 948, 953, 958, 963, 969, 974, 978, 982, 986, 990, 994, 999, 1003, 1009, 1013, 1017, 1021, 1025, 1052, 1059, 1064, 1069, 1083, 1088, 1093, 1098, 1103, 1108, 1114, 1118, 1122, 1126, 1130, 1134, 1138, 1142, 1147, 1152], "api": [15, 20, 119, 124, 131, 137, 139, 141, 142], "why": [16, 125], "unifi": [16, 139], "No": [16, 18], "more": [16, 18], "re": 16, "implement": 16, "infinit": 16, "shelf": 16, "life": 16, "contribut": [17, 1156], "set": [18, 63, 108, 128, 1080], "up": 18, "clone": 18, "ivi": [18, 19, 119, 123, 125, 126, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 206, 207, 209, 210, 211, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 228, 229, 230, 231, 233, 234, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 304, 305, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321, 323, 324, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 353, 354, 355, 356, 375, 376, 377, 378, 394, 395, 396, 397, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 676, 677, 678, 679, 682, 683, 684, 685, 688, 689, 690, 691, 700, 701, 702, 703, 718, 719, 720, 721, 765, 766, 767, 768, 779, 780, 781, 782, 784, 785, 786, 788, 789, 791, 792, 793, 795, 796, 797, 798, 800, 801, 802, 804, 805, 806, 808, 809, 810, 819, 820, 821, 822, 829, 830, 831, 832, 840, 841, 842, 843, 845, 846, 847, 848, 850, 851, 852, 853, 855, 856, 857, 858, 860, 861, 862, 864, 865, 867, 868, 869, 870, 872, 873, 874, 876, 877, 878, 879, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 896, 897, 898, 900, 901, 903, 904, 905, 906, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 920, 922, 923, 924, 925, 927, 928, 929, 930, 932, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 949, 950, 953, 954, 955, 956, 958, 959, 960, 961, 963, 964, 965, 966, 969, 970, 971, 972, 974, 975, 976, 978, 979, 980, 982, 983, 984, 986, 987, 988, 990, 991, 992, 994, 995, 996, 997, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1009, 1010, 1011, 1013, 1014, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1025, 1026, 1027, 1052, 1053, 1054, 1055, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1118, 1119, 1120, 1122, 1123, 1124, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1142, 1143, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155], "pycharm": [18, 19], "virtual": 18, "environ": 18, "docker": [18, 19, 21], "us": [18, 21, 140], "miniconda": [18, 21], "venv": [18, 21], "interpret": 18, "window": 18, "maco": 18, "ubuntu": 18, "detail": 18, "hypothesi": [18, 125], "log": [18, 563, 564, 565, 566], "github": 18, "codespac": 18, "pre": [18, 135], "commit": [18, 19, 135], "basic": 19, "get": 19, "help": 19, "todo": 19, "list": 19, "issu": 19, "manag": 19, "your": 19, "fork": 19, "who": 19, "To": 19, "ask": 19, "With": 19, "command": 19, "line": 19, "browser": 19, "pull": 19, "request": 19, "small": 19, "often": 19, "interact": 19, "contain": [19, 73, 78, 131, 140, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 197, 199, 207, 211, 215, 217, 220, 223, 225, 229, 231, 234, 237, 240, 242, 245, 247, 250, 253, 255, 257, 259, 262, 264, 267, 270, 272, 283, 285, 288, 290, 293, 295, 298, 300, 305, 310, 312, 316, 318, 321, 324, 327, 329, 333, 335, 338, 340, 343, 345, 348, 350, 354, 356, 376, 378, 394, 396, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 472, 475, 477, 480, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 605, 607, 612, 614, 617, 619, 622, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 662, 664, 667, 669, 671, 673, 676, 678, 682, 684, 689, 691, 701, 703, 719, 721, 765, 767, 780, 782, 784, 786, 789, 791, 793, 796, 798, 800, 802, 804, 806, 808, 810, 820, 822, 830, 832, 841, 843, 846, 848, 851, 853, 856, 858, 861, 868, 870, 873, 877, 879, 881, 883, 886, 888, 891, 893, 896, 898, 904, 906, 908, 910, 913, 915, 917, 919, 922, 924, 927, 929, 932, 934, 937, 939, 942, 944, 947, 949, 954, 956, 959, 961, 964, 966, 970, 972, 975, 979, 983, 987, 991, 995, 997, 1000, 1004, 1006, 1010, 1014, 1018, 1022, 1026, 1053, 1055, 1060, 1062, 1065, 1067, 1070, 1072, 1082, 1084, 1087, 1089, 1092, 1094, 1097, 1099, 1104, 1106, 1109, 1111, 1115, 1119, 1123, 1127, 1131, 1135, 1139, 1143, 1148, 1150, 1153, 1155], "run": 19, "test": [19, 124, 125], "local": 19, "most": 19, "out": [19, 120, 134], "id": 19, "open": 20, "task": 20, "function": [20, 120, 121, 125, 127, 129, 131, 132, 133, 137, 142, 154], "format": [20, 135], "frontend": [20, 126, 142], "build": [21, 137], "doc": 21, "dockerless": 21, "document": 21, "pipelin": [21, 154], "make_doc": 21, "sh": 21, "entrypoint": 21, "_make_doc": 21, "generate_src_rst_fil": 21, "py": 21, "sphinx": 21, "correct_built_html_fil": 21, "remove_fil": 21, "data": [22, 37, 82, 125, 132, 140, 154, 274], "class": [22, 139, 1163], "activ": [24, 74, 165, 1164], "arraywithactiv": 25, "convers": 29, "args_to_contain": 30, "args_to_ivi": 31, "args_to_n": 32, "to_ivi": 33, "to_n": 34, "creation": [35, 80, 204], "arraywithcr": 36, "type": [37, 82, 127, 132, 154, 274], "arraywithdatatyp": 38, "devic": [39, 84, 120, 133, 367], "arraywithdevic": 40, "elementwis": [41, 86, 402], "arraywithelementwis": 42, "gener": [43, 88, 125, 686], "arraywithgener": 44, "gradient": [45, 90, 776], "arraywithgradi": 46, "imag": [47, 92], "arraywithimag": 48, "layer": [49, 94, 817, 1178], "arraywithlay": 50, "linear": [51, 96, 834, 838, 1188], "algebra": [51, 96, 838], "arraywithlinearalgebra": 52, "loss": [53, 98, 951], "arraywithloss": 54, "manipul": [55, 100, 967], "arraywithmanipul": 56, "norm": [57, 102, 1050, 1192], "arraywithnorm": 58, "random": [59, 104, 1056], "arraywithrandom": 60, "search": [61, 106, 1075], "arraywithsearch": 62, "arraywithset": 64, "sort": [65, 110, 1101, 1107, 1108, 1109, 1110], "arraywithsort": 66, "statist": [67, 112, 1112], "arraywithstatist": 68, "util": [69, 114, 1145], "arraywithutil": 70, "wrap": [71, 116, 129], "add_ivy_array_instance_method": 72, "containerwithactiv": 75, "base": 76, "containerbas": 77, "containerwithcr": 81, "containerwithdatatyp": 83, "containerwithdevic": 85, "containerwithelementwis": 87, "containerwithgener": 89, "containerwithgradi": 91, "containerwithimag": 93, "containerwithlay": 95, "containerwithlinearalgebra": 97, "containerwithloss": 99, "containerwithmanipul": 101, "containerwithnorm": 103, "containerwithrandom": 105, "containerwithsearch": 107, "containerwithset": 109, "containerwithsort": 111, "containerwithstatist": 113, "containerwithutil": 115, "add_ivy_container_instance_method": 117, "deep": 118, "dive": 118, "navig": 119, "code": 119, "categor": 119, "submodul": [119, 121], "design": [119, 136, 1156], "argument": [120, 132, 133, 134], "exampl": [120, 121, 123, 126, 135], "dtype": [120, 308, 309, 310, 311], "number": 120, "oper": [120, 139, 154], "integ": 120, "sequenc": 120, "nestabl": [120, 127, 131], "helper": [121, 125], "1": 121, "2": 121, "docstr": [122, 123], "tan": [123, 675, 677, 678, 679], "roll": [123, 1002, 1003, 1004, 1005], "add": [123, 418, 419, 420, 421], "import": 125, "strategi": 125, "integr": 125, "we": 125, "need": 125, "how": 125, "write": 125, "effect": 125, "bonu": 125, "extend": 125, "featur": 125, "self": 125, "consist": 125, "explicit": 125, "test_array_funct": 125, "introduct": 126, "primari": 127, "composit": 127, "mix": 127, "standalon": 127, "conveni": 127, "nativ": 130, "handl": [130, 154], "instanc": [131, 139], "method": [131, 139, 140], "static": 131, "special": 131, "modul": [132, 133, 141, 1190, 1191], "other": [132, 133], "unsupport": 132, "inplac": 134, "updat": 134, "copi": 134, "lint": 135, "check": [135, 154], "hook": 135, "automat": 135, "reformat": 135, "befor": 135, "block": 137, "framework": [137, 138, 1163], "graph": [137, 142], "compil": [137, 142, 201, 202], "monkei": 139, "patch": 139, "construct": 140, "represent": 140, "recurs": 140, "built": 140, "ins": 140, "access": 140, "save": 140, "load": 140, "comparison": 140, "custom": [140, 154], "case": 140, "compartment": 140, "configur": 140, "network": [140, 142], "weight": 140, "state": [141, 154], "initi": [141, 1169], "optim": [141, 1194, 1198], "transpil": 142, "role": 142, "convert": [142, 1167], "model": [142, 149, 154], "builder": 144, "ecosystem": 145, "gym": [146, 153], "mech": 147, "memori": [148, 153], "robot": [150, 153], "vision": [151, 153], "extens": [152, 1156], "appli": 153, "librari": 153, "mechan": 153, "faq": 154, "maintain": 154, "version": 154, "dynam": 154, "size": 154, "shape": [154, 755], "gpu": 154, "deploy": 154, "control": 154, "flow": 154, "auto": 154, "differenti": 154, "replica": 154, "parallel": 154, "support": 154, "altern": 154, "structur": 154, "func": 155, "wrapper": 155, "handle_nest": 156, "handle_out_argu": 157, "infer_devic": 158, "infer_dtyp": 159, "inputs_to_ivy_arrai": 160, "inputs_to_native_arrai": 161, "outputs_to_ivy_arrai": 162, "to_native_arrays_and_back": 163, "gelu": [166, 167, 168, 169, 1166], "static_gelu": 170, "leaky_relu": [171, 172, 173, 174], "static_leaky_relu": 175, "relu": [176, 177, 178, 179], "static_relu": 180, "sigmoid": [181, 182, 183, 184], "static_sigmoid": 185, "softmax": [186, 187, 188, 189], "static_softmax": 190, "softplu": [191, 192, 193, 194], "static_softplu": 195, "tanh": [196, 198, 199, 200, 680], "static_tanh": 197, "constant": 203, "arang": [205, 206], "static_arang": 207, "asarrai": [208, 209, 210], "static_asarrai": 211, "empti": 212, "empty_lik": [213, 214, 215, 216], "static_empty_lik": 217, "ey": [218, 219], "static_ey": 220, "from_dlpack": [221, 222, 223, 224], "static_from_dlpack": 225, "full": 226, "full_lik": [227, 228, 229, 230], "static_full_lik": 231, "linspac": [232, 233], "static_linspac": 234, "logspac": [235, 236], "static_logspac": 237, "meshgrid": [238, 239, 240, 241], "static_meshgrid": 242, "native_arrai": [243, 244, 245, 246], "static_native_arrai": 247, "ones": [248, 249], "static_on": 250, "ones_lik": [251, 252, 253, 254], "static_ones_lik": 255, "tril": [256, 258, 259, 260], "static_tril": 257, "triu": [261, 263, 264, 265], "static_triu": 262, "zero": [266, 268, 1177], "static_zero": 267, "zeros_lik": [269, 271, 272, 273], "static_zeros_lik": 270, "as_ivy_dtyp": 279, "as_native_dtyp": 280, "astyp": [281, 282, 283, 284], "static_astyp": 285, "broadcast_arrai": [286, 287, 288, 289], "static_broadcast_arrai": 290, "broadcast_to": [291, 292, 293, 294], "static_broadcast_to": 295, "can_cast": [296, 297, 298, 299], "static_can_cast": 300, "closest_valid_dtyp": 301, "default_dtyp": 302, "default_float_dtyp": [303, 304], "static_default_float_dtyp": 305, "default_int_dtyp": 306, "default_uint_dtyp": 307, "static_dtyp": 312, "dtype_bit": 313, "finfo": [314, 315, 316, 317], "static_finfo": 318, "function_supported_dtyp": [319, 320], "static_function_supported_dtyp": 321, "function_unsupported_dtyp": [322, 323], "static_function_unsupported_dtyp": 324, "iinfo": [325, 326, 327, 328], "static_iinfo": 329, "invalid_dtyp": 330, "is_bool_dtyp": [331, 332, 333, 334], "static_is_bool_dtyp": 335, "is_float_dtyp": [336, 337, 338, 339], "static_is_float_dtyp": 340, "is_int_dtyp": [341, 342, 343, 344], "static_is_int_dtyp": 345, "is_uint_dtyp": [346, 347, 348, 349], "static_is_uint_dtyp": 350, "promote_typ": 351, "result_typ": [352, 353, 354, 355], "static_result_typ": 356, "set_default_dtyp": 357, "set_default_float_dtyp": 358, "set_default_int_dtyp": 359, "set_default_uint_dtyp": 360, "type_promote_arrai": 361, "unset_default_dtyp": 362, "unset_default_float_dtyp": 363, "unset_default_int_dtyp": 364, "unset_default_uint_dtyp": 365, "valid_dtyp": 366, "profil": 369, "as_ivy_dev": 370, "as_native_dev": 371, "clear_mem_on_dev": 372, "default_devic": 373, "dev": [374, 375, 376, 377], "static_dev": 378, "dev_util": 379, "function_supported_devic": 380, "function_unsupported_devic": 381, "get_all_ivy_arrays_on_dev": 382, "gpu_is_avail": 383, "num_cpu_cor": 384, "num_gpu": 385, "num_ivy_arrays_on_dev": 386, "percent_used_mem_on_dev": 387, "print_all_ivy_arrays_on_dev": 388, "set_default_devic": 389, "set_split_factor": 390, "split_factor": 391, "split_func_cal": 392, "to_devic": [393, 395, 396, 397], "static_to_devic": 394, "total_mem_on_dev": 398, "tpu_is_avail": 399, "unset_default_devic": 400, "used_mem_on_dev": 401, "ab": [403, 404, 405, 406], "static_ab": 407, "aco": [408, 409, 410, 411], "static_aco": 412, "acosh": [413, 414, 415, 416], "static_acosh": 417, "static_add": 422, "asin": [423, 424, 425, 426], "static_asin": 427, "asinh": [428, 429, 430, 431], "static_asinh": 432, "atan": [433, 434, 435, 436], "static_atan": 437, "atan2": [438, 439, 440, 441], "static_atan2": 442, "atanh": [443, 444, 445, 446], "static_atanh": 447, "bitwise_and": [448, 449, 450, 451], "static_bitwise_and": 452, "bitwise_invert": [453, 454, 455, 456], "static_bitwise_invert": 457, "bitwise_left_shift": [458, 459, 460, 461], "static_bitwise_left_shift": 462, "bitwise_or": [463, 464, 465, 466], "static_bitwise_or": 467, "bitwise_right_shift": [468, 469, 470, 471], "static_bitwise_right_shift": 472, "bitwise_xor": [473, 474, 475, 476], "static_bitwise_xor": 477, "ceil": [478, 479, 480, 481], "static_ceil": 482, "co": [483, 484, 485, 486], "static_co": 487, "cosh": [488, 489, 490, 491], "static_cosh": 492, "divid": [493, 494, 495, 496], "static_divid": 497, "equal": [498, 499, 500, 501], "static_equ": 502, "erf": [503, 504, 505, 506], "static_erf": 507, "exp": [508, 509, 510, 511], "static_exp": 512, "expm1": [513, 514, 515, 516], "static_expm1": 517, "floor": [518, 519, 520, 521], "static_floor": 522, "floor_divid": [523, 524, 525, 526], "static_floor_divid": 527, "greater": [528, 529, 530, 531], "static_great": 532, "greater_equ": [533, 534, 535, 536], "static_greater_equ": 537, "isfinit": [538, 539, 540, 541], "static_isfinit": 542, "isinf": [543, 544, 545, 546], "static_isinf": 547, "isnan": [548, 549, 550, 551], "static_isnan": 552, "less": [553, 554, 555, 556], "static_less": 557, "less_equ": [558, 559, 560, 561], "static_less_equ": 562, "static_log": 567, "log10": [568, 569, 570, 571], "static_log10": 572, "log1p": [573, 574, 575, 576], "static_log1p": 577, "log2": [578, 579, 580, 581], "static_log2": 582, "logaddexp": [583, 584, 585, 586], "static_logaddexp": 587, "logical_and": [588, 589, 590, 591], "static_logical_and": 592, "logical_not": [593, 594, 595, 596], "static_logical_not": 597, "logical_or": [598, 599, 600, 601], "static_logical_or": 602, "logical_xor": [603, 604, 605, 606], "static_logical_xor": 607, "maximum": 608, "minimum": 609, "multipli": [610, 611, 612, 613], "static_multipli": 614, "neg": [615, 616, 617, 618], "static_neg": 619, "not_equ": [620, 621, 622, 623], "static_not_equ": 624, "posit": [625, 626, 627, 628], "static_posit": 629, "pow": [630, 631, 632, 633], "static_pow": 634, "remaind": [635, 636, 637, 638], "static_remaind": 639, "round": [640, 641, 642, 643], "static_round": 644, "sign": [645, 646, 647, 648], "static_sign": 649, "sin": [650, 651, 652, 653], "static_sin": 654, "sinh": [655, 656, 657, 658], "static_sinh": 659, "sqrt": [660, 661, 662, 663], "static_sqrt": 664, "squar": [665, 666, 667, 668], "static_squar": 669, "subtract": [670, 672, 673, 674], "static_subtract": 671, "static_tan": 676, "trunc": [681, 683, 684, 685], "static_trunc": 682, "all_equ": [687, 688, 689, 690], "static_all_equ": 691, "arg_info": 692, "arg_nam": 693, "array_equ": 694, "arrays_equ": 695, "assert_supports_inplac": 696, "cache_fn": 697, "clip_matrix_norm": 698, "clip_vector_norm": [699, 700, 701, 702], "static_clip_vector_norm": 703, "container_typ": 704, "copy_arrai": 705, "cumprod": 706, "cumsum": 707, "current_backend_str": 708, "default": 709, "einops_rearrang": 710, "einops_reduc": 711, "einops_repeat": 712, "exist": 713, "floormod": 714, "fourier_encod": 715, "gather": 716, "gather_nd": [717, 718, 719, 720], "static_gather_nd": 721, "get_all_arrays_in_memori": 722, "get_array_mod": 723, "get_min_bas": 724, "get_min_denomin": 725, "get_nestable_mod": 726, "get_num_dim": 727, "get_referrers_recurs": 728, "has_nan": 729, "indices_wher": 730, "inplace_arrays_support": 731, "inplace_decr": 732, "inplace_incr": 733, "inplace_upd": 734, "inplace_variables_support": 735, "is_arrai": 736, "is_ivy_arrai": 737, "is_ivy_contain": 738, "is_native_arrai": 739, "match_kwarg": 740, "multiprocess": 741, "num_arrays_in_memori": 742, "one_hot": 743, "print_all_arrays_in_memori": 744, "queue_timeout": 745, "scatter_flat": 746, "scatter_nd": 747, "set_array_mod": 748, "set_min_bas": 749, "set_min_denomin": 750, "set_nestable_mod": 751, "set_queue_timeout": 752, "set_shape_array_mod": 753, "set_tmp_dir": 754, "shape_array_mod": 756, "stable_divid": 757, "stable_pow": 758, "supports_inplac": 759, "tmp_dir": 760, "to_ivy_shap": 761, "to_list": 762, "to_native_shap": 763, "to_numpi": [764, 766, 767, 768], "static_to_numpi": 765, "to_scalar": 769, "try_else_non": 770, "unset_array_mod": 771, "unset_nestable_mod": 772, "unset_shape_array_mod": 773, "unstack": 774, "value_is_nan": 775, "adam_step": [778, 779, 780, 781], "static_adam_step": 782, "adam_upd": [783, 784, 785], "static_adam_upd": 786, "execute_with_gradi": [787, 788], "static_execute_with_gradi": 789, "gradient_descent_upd": [790, 791, 792], "static_gradient_descent_upd": 793, "is_vari": [794, 795, 796, 797], "static_is_vari": 798, "lamb_upd": [799, 800, 801], "static_lamb_upd": 802, "lars_upd": [803, 804, 805], "static_lars_upd": 806, "optimizer_upd": [807, 808, 809], "static_optimizer_upd": 810, "set_with_grad": 811, "stop_gradi": 812, "unset_with_grad": 813, "variabl": 814, "variable_data": 815, "with_grad": 816, "conv1d": [818, 819, 820, 821, 1179], "static_conv1d": 822, "conv1d_transpos": 823, "conv2d": [824, 1181], "conv2d_transpos": 825, "conv3d": [826, 1183], "conv3d_transpos": 827, "depthwise_conv2d": [828, 829, 830, 831], "static_depthwise_conv2d": 832, "dropout": [833, 1186], "lstm_updat": 835, "multi_head_attent": 836, "scaled_dot_product_attent": 837, "choleski": [839, 840, 841, 842], "static_choleski": 843, "cross": [844, 845, 846, 847], "static_cross": 848, "det": [849, 850, 851, 852], "static_det": 853, "diagon": [854, 855, 856, 857], "static_diagon": 858, "eigh": [859, 860, 861, 862], "eigvalsh": [863, 864, 865], "inv": [866, 867, 868, 869], "static_inv": 870, "matmul": [871, 872, 873, 874], "matrix_norm": [875, 876, 877, 878], "static_matrix_norm": 879, "matrix_pow": [880, 881, 882], "static_matrix_pow": 883, "matrix_rank": [884, 885, 886, 887], "static_matrix_rank": 888, "matrix_transpos": [889, 890, 891, 892], "static_matrix_transpos": 893, "outer": [894, 895, 896, 897], "static_out": 898, "pinv": [899, 900, 901], "qr": [902, 903, 904, 905], "static_qr": 906, "slogdet": [907, 908, 909], "static_slogdet": 910, "solv": [911, 912, 913, 914], "static_solv": 915, "svd": [916, 918, 919, 920], "static_svd": 917, "svdval": [921, 923, 924, 925], "static_svdv": 922, "tensordot": [926, 928, 929, 930], "static_tensordot": 927, "trace": [931, 933, 934, 935], "static_trac": 932, "vecdot": [936, 938, 939, 940], "static_vecdot": 937, "vector_norm": [941, 943, 944, 945], "static_vector_norm": 942, "vector_to_skew_symmetric_matrix": [946, 948, 949, 950], "static_vector_to_skew_symmetric_matrix": 947, "binary_cross_entropi": [952, 953, 954, 955], "static_binary_cross_entropi": 956, "cross_entropi": [957, 958, 959, 960], "static_cross_entropi": 961, "sparse_cross_entropi": [962, 963, 964, 965], "static_sparse_cross_entropi": 966, "clip": [968, 969, 970, 971], "static_clip": 972, "concat": [973, 974, 975, 976], "constant_pad": [977, 978, 979, 980], "expand_dim": [981, 982, 983, 984], "flip": [985, 986, 987, 988], "permute_dim": [989, 990, 991, 992], "repeat": [993, 994, 995, 996], "static_repeat": 997, "reshap": [998, 999, 1000, 1001], "static_rol": 1006, "split": 1007, "squeez": [1008, 1009, 1010, 1011], "stack": [1012, 1013, 1014, 1015], "swapax": [1016, 1017, 1018, 1019], "tile": [1020, 1021, 1022, 1023], "zero_pad": [1024, 1025, 1026, 1027], "meta": 1028, "fomaml_step": 1029, "maml_step": 1030, "reptile_step": 1031, "nest": 1032, "all_nested_indic": 1033, "copy_nest": 1034, "index_nest": 1035, "insert_into_nest_at_index": 1036, "insert_into_nest_at_indic": 1037, "map": 1038, "map_nest_at_index": 1039, "map_nest_at_indic": 1040, "multi_index_nest": 1041, "nested_ani": 1042, "nested_indices_wher": 1043, "nested_map": 1044, "nested_multi_map": 1045, "prune_nest_at_index": 1046, "prune_nest_at_indic": 1047, "set_nest_at_index": 1048, "set_nest_at_indic": 1049, "layer_norm": [1051, 1052, 1053, 1054], "static_layer_norm": 1055, "multinomi": 1057, "randint": [1058, 1059, 1060, 1061], "static_randint": 1062, "random_norm": [1063, 1064, 1065, 1066], "static_random_norm": 1067, "random_uniform": [1068, 1069, 1070, 1071], "static_random_uniform": 1072, "seed": 1073, "shuffl": 1074, "argmax": 1076, "argmin": 1077, "nonzero": 1078, "where": 1079, "unique_al": [1081, 1083, 1084, 1085], "static_unique_al": 1082, "unique_count": [1086, 1088, 1089, 1090], "static_unique_count": 1087, "unique_invers": [1091, 1093, 1094, 1095], "static_unique_invers": 1092, "unique_valu": [1096, 1098, 1099, 1100], "static_unique_valu": 1097, "argsort": [1102, 1103, 1104, 1105], "static_argsort": 1106, "static_sort": 1111, "einsum": [1113, 1114, 1115, 1116], "max": [1117, 1118, 1119, 1120], "mean": [1121, 1122, 1123, 1124], "min": [1125, 1126, 1127, 1128], "prod": [1129, 1130, 1131, 1132], "std": [1133, 1134, 1135, 1136], "sum": [1137, 1138, 1139, 1140], "var": [1141, 1142, 1143, 1144], "all": [1146, 1147, 1148, 1149], "static_al": 1150, "ani": [1151, 1152, 1153, 1154], "static_ani": 1155, "content": 1156, "overview": 1156, "quick": 1156, "start": 1156, "roadmap": [1156, 1162], "citat": 1156, "inspect": 1159, "add_array_spec": 1160, "fn_array_spec": 1161, "geglu": 1165, "to_ivy_modul": 1168, "firstlayersiren": 1171, "glorotuniform": 1172, "Ones": 1174, "siren": 1175, "conv1dtranspos": 1180, "conv2dtranspos": 1182, "conv3dtranspos": 1184, "depthwiseconv2d": 1185, "lstm": 1187, "multiheadattent": 1189, "layernorm": 1193, "adam": 1195, "lamb": 1196, "lar": 1197, "sgd": 1199, "sequenti": [1200, 1201], "verbos": 1203, "cprint": 1204}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})